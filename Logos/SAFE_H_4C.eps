%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: SAFE_H_4C.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Bart O'Dell
%%CreationDate: 7/8/08
%%BoundingBox: 0 0 372 222
%%HiResBoundingBox: 0 0 372 222
%%CropBox: 0 0 372 222
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%AI3_Cropmarks: 36.0000 36.0000 336.0000 186.0000
%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x406 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 76 8%%BeginData: 4274 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF%FDBCFF848459847D8459847D8459847D8459A8FD70FF2E050C050C050C05%0C050C050C050C35FD70FF0C0B0B0C050B050C050B050C050B0559FD70FF%2E057C0B0C050C050C05342E0C050C35FD70FF0C0C050C050C2D0C050C7C%CD050C0559FD70FF350C58A6340CCD05580C3482580C0C59FD70FF0C0C2E%CD050C0B0CA5340B0C2D2E0559FD70FF35057C2E0C052ECDCDCDA60C2E58%0C59FD70FF0C0C050C0505057CC7CD0B0C050C0559FD70FF350C0C0C0605%0C82CDCD34FD040C59FD70FF2E2E7C0C000C0BCD7CCD2E0C0C0C0B59FD70%FF350C34000C0C0C7C34A6340C340C0C59FD70FF2E0C0505FD050C7C2E2E%580C0C59FD70FF590C0005350C8258352E340C350C2E59FD6EFFA8000505%F80C0C0C7C34FD070C59FFFFFF840535FFFFA80CA8FFFF35050C2EA8050C%05FD04FF590BFF840C2E59050C0535050C0C0C052EA80C0CA80584590CFF%0C050C0C0C050C0584050C050C7D840B352E59FD28FF53F806F8060C340C%350C340C3558340C3559FFFFFF0C3559FFFF590559FFFF7D2E5984FF0C59%59FD04FF0C0CA8FF0C8484840C84A80C7D8435350559350C592EFF350584%840C7D843559590CA82E2E5935AF058459352EFD29FF5900F805120C0C0C%120C0C58A62E0C0C60FFFFFFA8050CFFFF050C05FFFF84050CFFFF050C2E%FFFFFF840C0535FF0C59FF7D0CFFFF050C5959050BA859590B05FF050C0C%FF0C84FF592EFF052E5959050CFF7D0535FD2BFFA800F8350C350C350C35%0C83A6350C3559FFFFFF0C590C598435FF0C84357D2EA87D590C59352EA8%FF5959840CFF0C590C840CFFAF0C7D2E35592E2E2EFF0C0C5959A80CAF2E%59FF2E59FF3505FF2E3559352E3535FD2BFF28F8050C350C3458350C340C%830C340C84FFFFFF5959FF59592EA82E5959592EAF84842E592E5984FF2E%847D5959592E59595984842E592E592EAF35357DAF2E5959A82E832E59FF%592EFF8459FF592EFD0459FD2BFF7EF80005350C3558CD58352E352E352E%3559FD6EFF00F8F8060C350C35A6580C350C350C350C84FD0FFF842EFFFF%2EA835A8AF598459FD08FF592E7D59FD04FFA82E2EFFFFFF842E59FFFFFF%A82EFD34FF2F000000063534353583343535353435353559FD0EFFAF0C84%7D840C592EFF2E2E842E848484FF598459FF355935843559FF597D352E59%848484592E5935AF35357D84FD31FFA8002E00F80534352E3534352E3534%352E353484FD0EFFA8592E0C7D2E2EFF840C05592E592E2E592E0584FF0C%2E59592E2E352E592E2E590CA8592E840C2E59352E0C84FD31FF2806FFF8%0000FD0D3584FD0EFF592EA80C590C2EFF0C840C2E59A80C0C35593559AF%0CAF2E59590C2E35352E0C5935FF0C352E350C840C350CA8FD30FF5305FF%7E00F8052E3535352E3535352E3535352E84FD13FF5959FD18FF592EFD3B%FFA828FFFF7EF800F85935593559355935593559355984FD6AFFA8FFFFFF%2E00F8F82E59353535593535355935353584FD6EFF2FF82FF82F355F3559%355F3559355F355984FD6EFF050059050559355935593559355935593584%FD6EFF0628840C0535605960356059603560596084FD6EFFF85959600035%3560355F3560355F35603584FD6DFFA800A8845960356059605960596059%60596084FD6DFF7D00FF5F6059605960596059605960596059A8FD6DFF53%53FFAF84AF84AF84AF84AF84AF84AF84AFAFFD6DFF2E7DFD7EFF05FD7FFF%53FD7FFF53FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD%FCFFFDFCFFFD11FFFF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Web</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2008-07-08T22:07:34-05:00</xap:CreateDate>
         <xap:ModifyDate>2008-07-08T22:14:26-05:00</xap:ModifyDate>
         <xap:MetadataDate>2008-07-08T22:14:26-05:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>104</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgECWAJYAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABACWAAAAAEA&#xA;AQJYAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAaAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXwFoeiNq9/9TW6&#xA;gtCY5JfWumKR0iQuVqqseRC7CmXZ83hx4qMtxy89nl8UOM1YHvS/hlzC3cMVtF6fo2paibgWFtJc&#xA;taxG4nWJSzLErKrPQb0BcVyvJlhCuIgWaHvZQjKV0LpDPC6MUdSrKaMpFCCPEZYGNvrv/nG4U/Ky&#xA;z/5ibn/k4cx8vN33Z/8AdfF6hlbmuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV8GeW9DOt67ZaSshha9lEKyhDJxLdCVBXbx8Bl2qz+Dilkq+EW8rgx+JMR70d5&#xA;78sWflvzNdaRbXYvY7fhyfiyurFQSr1AHLv8JIoetajKeztVLUYRkMeG/wAfi2zWYRiyGAN0qv5Z&#xA;0/WfOFvo/lR3mtb0xrbyTmrKeAMzPRVIVGVz9mvHI/mpYcByZ9jG7r7K9+3xT4QyZRDFuD3/AG/j&#xA;uT/8r/NY8ieYNYj1dGWOOB4Z7VQvqG5imRQoYivwjntWmYXa+h/O4oeGet35EH9jk6DVfl5y4+6q&#xA;87/tYl5vtrSPzLqJspzdWUsxntrgsXLRXA9WPmx35cX+Ku9a13zZ6IyOGPEOGVUR5jY/DucLU0Mh&#xA;4TY6fHd9Q/8AOOYp+V1l/wAxFz/ydOOXm7vs7+6Hvem5W5zsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVfB+jare6Pe/XrFvTu1jkjimHVPVQxsy+DcWND265lZ9&#xA;PHLHhlvGx9ht4/FmOM8UeaE1nVbm6ufrV25nvbjhGpP2nZECgk/6q1Y5LHijCPDEUGVyyEkn3l7l&#xA;/wA48y291Z3ySaXaJc6d6YTVUjAuH9fnVGYgnbh2P9c4z2qjKEo1OVTv03ttW70HYUhIS9I9PXru&#xA;lf5/SaHa6nFYw6LAmpXUS3UmrqSjmrspXinEO3wbl65lezEcs8Zkch4Inh4fh+3o0duShGQiIjiI&#xA;vi/H6Xlq6vfLob6KOH1J7gXbVUF/UVCgox6Chzpjp4+J4n8VV8ObpPHPBwdLt9Sf847in5YWX/MR&#xA;c/8AJ05Xm+p6Dsz+5Hxel5U7B2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2Kvhi2udItdL1EX1r6txJGhtLouyiAo3KRiAaGq+IzKyQmZxMZVEXY73jsRjRiRcjVe&#xA;TG9GV7+aTVZFIjesdkh/ZiB3b5uRlwbtTWMDGOfOXv8A2PQtE85ah5f8rfU9HnNtqFzfme5lWnIQ&#xA;wRx+knuruzch7U7nNXqezoZ8/FkFwjCh7yTfyFfNnh1ssWKoGpGVn3CqTr84NXh17/DerxKB9c0/&#xA;k4HRXEhDrU/yvyGYXYGmODxcZ/hn+gV9jk9r5xl8OY/ij+lgmp6NqGmXRtb+3a3uAqv6b/yuoZSK&#xA;bGoOb3DmhljxQNh1WXFLGakKL6j/AOcfRT8s7If8X3H/ACdOUZvqek7L/uR8Xo+VOwdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVeWfnJ/zkB5e/LK6sdPuLGbVNVv&#xA;U+sfVYnWJY7bkU9R5GDbsykKoXehqRtWyELYkno+PfMup/X/AKjpVix5aiI5JG7iN6FQf1nMw9zz&#xA;2iweHxZJ/wAF/NlNvZx28EcEQpHEoRB7AUwuqnMyJJ5lkfmnTPL1lb6VFpcjS3htg2qsZA6i4Y1K&#xA;ABVpwrT+2pzX6HLmmZnIKjxenb+Hv+Ll6vHigIiBuVerfqk0s1xLbwW7tWK25CFfAOeTfjmbHGAS&#xA;RzLimZIAPILbiS4uZmmuJGmmanKRyWY0AAqTv0GGEBEUBQRKZkbJsvqD8hF4/ltZD/i+4/5OnMXN&#xA;9T0/Zf8AcD4sk86ed9F8oaZFfaoJpTczLbWlpbIJJ5pn6JGhKjoO5A+kjIRjbl5s0cYsoXyl+YFv&#xA;5g1S+0ebS73SNX02OKa6tb1Y/sT14FGjd67DuBjKNMcWoEyY0QQqef8A8wtC8jaRDqesLNLFPOLe&#xA;KG2VHlZirNXi7xjiAu5r4YxjbLPnjjFlkNpd215aQ3dtIJba4jWWCVejI4DKw+YORbYkEWGE3v5u&#xA;WNr5rn8rJ5f1i61eFWlEcEdqVkhU09WMvcpVG6ioB9snwbW4x1QEuGpX+PNF2/5m6XceSrrzdDpu&#xA;oPY2TzLdWgjh+tILZiszlDNw4pxJPx1pg4N6ZDUgw46NIHSfzi0rUho8y6Hq9tYa7cJaafqE8VsI&#xA;Glk5UBKXDuP7tv2e2EwYx1YNbGj+O9n2Qcpifm78zfLPlXW9H0fVDL9a1qThC0QQpCC6xiScs6FU&#xA;LN1APQ+GSjAloy6mMJAHqi/PPnWx8naK2s6hZXd3YxuqTvZrE5i5sFVnEskWxZgu1d8YxtlmzDGL&#xA;INIC7/Muyt7HQbgaNqc9x5i9U6fp8UdubikSeqTIDOsYBj+MUc7YeBgdSKBo+pJ9E/PTy/rH1N7T&#xA;RdXFrfXv6Mgu5IrYRfWynP0iRcMQeO/TCcZDXDXRlVCW5r8btQfnlpNxDq00PlzXHj0JpE1dhDaf&#xA;6O0XL1A4+tV+Hg1aeGDw1GsBv0y25/i0Tf8A5y6Raa5Z6Imh6veX+oWkd/YpbQ2zCaCSL1qpyuEN&#xA;UCsrCnVTSu1Xwyk6yIkI0bItSP55+Uz5VufMsNlqM9nYXAtdSt0iiW4tXYhVMySSoKMzBQVY74+G&#xA;bpRrY8PFR2+xMLz82dAh8nWPm62s73UdHvSqu1okLSW7u4jCTrJLHxb1W4fCWFfahx4DdMpaqIgJ&#xA;0SER52/MzQfJmi2Gqa3BdJ+kHWOOyjWJ7hGKc25r6gT930bix3pSuCMLTm1MccQSDuhfNP5taH5e&#xA;vjaPp9/qITTV1iW5sUgeJLN5GjDs0s0R+0vYdxhECUZNVGJqidr27kBpv54aLqIj+raFrJNxZyah&#xA;aKYrUGe3hcRyNH/pNKqamhpsMPhlgNbE8hLv/G6Hb8/fLi+WE8znRNZ/QrzG3F0IrUgONtx9ZqBX&#xA;b54+GUfno8PFUq+H60+178y7HRdO0O9n0fUrj9PusVnbWyW8kqyuoaOOQeuq1cEkcGYbGpyIhbbP&#xA;UiIBo+pI7f8APnRLjRb3W4PL2tyaVp0jQ3t0sNpxjkTjyVv9KrtzXtkvDLWNbEx4qlX48011b81t&#xA;MtdZj0PTNLv9b1hrVL6e0skjJggkCkGVndAGo4oBXqPHAIMpaoA8IBJ5pdcfn55Kt7HSLx4L8x6v&#xA;G86KsCFoIo5JIi8/7yg3gkIVCzEKdsPhFgdfjAB33/H6HpGVua8O/wCciPyb8p+YpB591/WbjTbP&#xA;QbD0r+3hRHNxDFI8sccTOV9OV3mKAkNUkbeNuKXRhO+dvk/yJAdQ8xT3zrQQRkoo3C8vgRR7KlQM&#xA;yo7m3Udpnw8IgOp/b970X0vbJvPu9L2xVmP5YWmgPr7trKRyxiJhbQSAnlKFL8vABURtz3IzSduy&#xA;zDD+6sG9z5cvvI+12vZEcRy/vN9th58/0MSnSJ5neKP0omYlIqluIJ2FTuaZuYggAE2XVyIJ22D6&#xA;Y/IteP5dWY/4uuP+TpzEzfU9R2X/AHA+Kh+c1h5U1i20XQNdu5tMudQunfSdWj4CO2uIIi1Zizp8&#xA;Lg8RTvTcdcGO+YbdYISAjI1fIsW/LT8yX0fVPMGmeddWtb2HSpbaztvNCBW9YyswjgkmjBLmgLjl&#xA;utH5HaolKN8mjT6jhJEyDXX8fjmq/mBpup/mF56vtF0d9PmtPLenPBP9ekdVS71NCGli9FZCzQxo&#xA;vXZWxj6Rv1RqIyzZDGNekdfNFfkx+Y2k2P5bz2/mS/jtZvKsrWV2zsXYQhwsDBVDMwq3pLxH7OCc&#xA;d9mek1AGP1H6fx+xIvM0d3rX58SQ6Brkem3N1oXG3v0EcqsXU8UHKtOfIbr8Q7ZKO0dw1ZQZ5vTK&#xA;tmZaxq2i6Z+Wmt+TbnUreTzLpHlmQapAjNUyNZlDJycLzMkhB/m+IEj4hkADduVKcY4zC/UI7/Jg&#xA;v5Z6la6Dp/lHzBqPmRLmwFrJpqaGpiM8E93cAR8Y4grMnwlmaU1HbJyF2HD08xHhkZbcq683uXl/&#xA;zR5f8w6c+paNepeWKSPC868lAeL7YPMKdute43G2UkEO0x5YzFxOzwPzxousfmCPOfmfTjp82lac&#xA;4srCaaaQ3CR6WDI7W3BTEVuHkfjyO/4m+J4aDqc0Dl4piuEfo7ven3nPznbeaP8AnGufUZLhGv5I&#xA;rOC8QuOZuYbyFZKr1q3AyAfynICNScjJmE9PfXb72ceWfPHlRbfyton1mK41C400SpJE0bpbi2t0&#xA;9T1X5VjLA0G3Y1wSid2/FnhUY9a/QxX/AJxkNpL5Ev0cxvJDq88oVuJKfuYgHoenffJZubj9mV4Z&#xA;9/6AxDyuY5PNPnO//wASQ6ZY2PmhdSuLKR4gl3b2t5JO5RuLSs3BfhVDxYnfJHkGmBHHI8QAEr9+&#xA;6aecNRudf/OnyfeeW9TTTLvUNC9exu54kl9P6xHcSxpJExpydHA9q13wR2ibZZpGeeJiaJj/AMUk&#xA;Og6hosX5M+Z9OvSlt5nGs2w1mK4kHrTyLfwMX4MFoqgOCo6FWPfCQeINcJR8GQP1Xv8ANvz3Y3/5&#xA;f3epeWLRDN5O83T2t7o5U1S3nhu4JZEU1O3BOPuOBrscY779QnPE4riPoluPx+OjLPPek6n+Y3nT&#xA;WdO0mTTpdP8AL2niwZr6WQKl1e/vZLiD0Uf4oliRDy2B/CMTwjduzxOaZEaqI6+fVL/L/mq11X/n&#xA;HnW7S7kjXWNFs5dLnDMnqmOM1t/8rjwbgPEqcJHqY48olpyDzG36mZ/lfJYj8ktOuHaINDp9zG0x&#xA;K1SrPVSx6V22yEvqcjTkeBfkWPflD5ftfNH5A3fl92Uvdm7jWp/u5vU5wOwG/wAMiq2GZqVtemx8&#xA;eAxQH5L6jqPmrU9FXVY2jtfy+sJoJWlooN5O7QxVB7RWkVN+jZKew97XpJGZF8sY/H2Mf/LiieXr&#xA;rVH80R6fY6P5lfVLvRHaFTcwWsccjvGQPXd3X4VTlwNPHfDLnyasP0XxUBK676T3zpPo+q6/q3nT&#xA;ydr8vl7zTpGn2lzdJdmKOC/guLVLmFUVnYlvT4qyupUtxFP2sEQQKLbllGUjOB4ZAA+/Zl/k3yv5&#xA;W/MTyT5f1/zPoMP6QSJ0RYvUtoyqTv8AF6cLopRyOfFhT4jTY7wlIxNByMWGGaEZTju9RytznyT/&#xA;AM5ifmit5fW3kDTJawWTLda2ynZpytYYDt/utW5tvSrDuuX440LYHc+55b+VFtWy1Can2pESv+qp&#xA;P/G2ZEeToe2D64jyeg20Fv8AWI/rQc2/IeqIiA/HvxLVFfngycXCeGuLpfJ1MBGxxcvJln5m+X9G&#xA;0zV4o9JVFjZKXKK/IrKADQr+zVCre9Tmk7A1ebNiJy3d7bdP072Ha9sabHjyDg+PvYnbNNbTCaE8&#xA;ZAGUHw5qVP4HN3OAkKPJ1cJGJsKXoHwybCn0j+Sa8fy/sx/xbP8A8nDmHm+p6nsv+5HxZbquhaJr&#xA;EKQ6tp9tqMMZ5Rx3cMc6q3SoEgYA5WCQ50oRlzFqdv5a8uW1kLG20qzgshIswtY7eJIhKhBV+CqF&#xA;5AgEGlceIoGKIFUKbtPLnl6yuJ7mz0u0trm5DLczQwRRvIHPJg7KoLBjua4mRRHFEGwBuo2/k7yj&#xA;bLMltoenwLcJ6c6x2sKCRKhuLhVHJeSg0OHiPegYIDlEfJZe6D5Ls55NdvtO023nhb6xLqs8MCOj&#xA;g19Rp2AIIP7RbEE8lljxg8RA96nar5F80RXF1bJputRycIbuVVgua+mecaSmjfY5VVW6Vx3CB4eT&#xA;cVL7UpFr+UtpfajGdM0u1utCSO5v5GsY4hbq1TG/qmJV34Hjxau2G5NXDgBO0fT5J7pl95YuPLpv&#xA;7I28egypNNK7IIIeHJjO0qOE4/Fy9TmPGuAg35t0JQMbH0/i0tJ/LnTVs9Ijs7CK38yEC1t7e0Vr&#xA;e7ovNSxijaJhx+IFj0w+o79zD91Go0PV5bFH/wCCPJn1c236A076uXEhh+qQcOYBAbjwpWhpXBxn&#xA;vZfl8dVwj5B0PkjyZAXMOgadEZEaOQpaQLyRxRlNE3BHUY8Z71GnxjlEfIK1poPlbRYbme006x02&#xA;Foz9clihhgUxoCT6jKqjiBX7W2AkllHHCF0AGLK35EPHK8Q8sSrAhlm9IWEhVAQCxCAmlSMnc/Nx&#xA;+HT90PsZOPKHlMXUV4NEsBd2/p+hcC1h9SP0AqxcH48l9NUULTpQUyPEe9v8CF3wi/co6x5X8lzt&#xA;Pqmq6LYXUsaNJPdTWkU8pRASdyju1B2GIkeizxYzvKIPwS/TfMH5d+ZzY6Vapb6giwfXtOtZbN/S&#xA;SGFhCJYxLEETgW4ilCMJEg1xyYslAb9RsnEHl7yvpq3VxBpljZLPGwvZkghiDxnd/VYKvJe55ZHi&#xA;JbRihGyAAx/TIvyZ1Cf9HaWnly7uLn/jztRYyvJ6YL/3aVLcQCem2SJl5tMY4DsBDf3Mji8t+XYt&#xA;Nk0uLS7OPTJm5TWKwRLA7bGrRBeBPwjqO2R4jzbhigBw0K7kD5Um8mGTUbXy1bW9q1lMIdSitrX6&#xA;qBMFqAw4Rh/hOxFcMr6scPh7iAque1JnFo2jwpdpDY28aX7O9+qRIonaSodpgB+8LVNeXXBZZjHE&#xA;XsN+aW/4A8if9S5pf/SFb/8ANGHjPew/LYv5sfkFS68keS7uZJrvQNNuJkVESSW0gdlSNQqKCyEg&#xA;KqgAdhg4ik4YHnEfJOURI0WONQiIAqIooABsAAMDawr83/zJs/y/8mXOsuBNqUp+raRZmpM13IDw&#xA;FBvxWnJvYU6kZOEbLGRp8g/mh+XGo+Vfy90vXfNXOXzt5u1KS+uzMT6sEEcTMY33/vJHuA8tRsQq&#xA;7UNcgG2A5of8ngH0vUEpus6mv+sn9mWR5Oj7WH7we56D6GF1VKt3JPd3D3E7c5pDV2Pegp/DK8WO&#xA;MIiMeQZ5JmcuI81L0MsYU70MVp9C/k4vHyJaD/i2f/k4cxM31PTdmf3I+LNsqdg7FXYq7FWFfmq2&#xA;h3OjWmjapqg0d9RuVax1CURmCKe0H1lDOJisZQmMLxJ+IkDJwvm4urMeERJ4b6+7d5rcee/NV5bw&#xA;QxXVj5fn1eXUHuvMMbSRQak9isFrbzWpaK4dqrQ+klC/CgZa0NnCHCOeZHMRu9++qG3NV1Nk17Ud&#xA;VszqMiX2r+ZdH0m9iQJFcG1sLUTGZoJFZolkkWSRQV2YUNQDiNvks/WSL3lOIPuA5/jqzHzpLNrd&#xA;5B5A0+4ivhY20d75me8uRbu9vHxEMUkkcM9Hmeksn7qnEU2DjIR23cnMTI+GN63lZ/Yfe88tvMtl&#xA;qXl7yTFPr50iXQtI1Rnu7d4fVNxbqthbwwhg3OVk5EKvxMpqOtcs4aJcMZRKMPVw8MT+oI/UPPPm&#xA;rStO1mHWNYmstfGi6RBb2k1EC3d98NzdIOKcPRXj6jnZXruNhgEQWcs8og2alwx+38fNE6x+Y+r2&#xA;+r+bLnRtaa/is7JP0ZIrB7O2U3UNjKbqFouazQyGSZX3WRN91FMRHlbKeolcjE3Q27udfPqymy8z&#xA;Xmkflb5g1jUdei1GaA3p0+9Ry6KzJ/o8EdyYrcXJ9RqCRECkmg2XIkeobN8chjikTK+dfo36sXNl&#xA;qug+TvKk95rNrHYSXOladYXtlxgWCyuF9XUBPNI0vL1jEOREnElVIC7rkuZLQQYwiSdtht3dVSz8&#xA;y+YrbW7LUpvMV0+n33mLUrWztLgwi2lsbOKRSvL01YySyxKkIBoD0FSTgodyY5JCVmRoyNd1D8bJ&#xA;fp/5gXlx6epHzPNc37+X9T1a+skcJbC8WJfQsreIKtHtkZmfdm25NhMfJhHOTvxWeEnyvoPgutEi&#xA;kg1AaDrIs9T8s+U7CPSns5Yz9aeNZLu5ZevONpI0R6d+vhj+kqKN8JoxgOXXqWe6T5m1K38k6759&#xA;1a4e3gvYXvdK06dlEdvbRxlbVVqB+8uTRzvuWUAV6wI3AcuGUjHLIevIfd83m1rqI0zyBFb2Ov2t&#xA;1q9ppFm+iR6YF9eyuru6WK7Ez8rj95I93GvwspYK3wLSpsrdwYyrHsQSIiq6Wd+/v/Ynsvm7W9Ev&#xA;dW0m580u1qmuWGnT6leCD61bQSWZnu5kThwjSWRBHEWQqO1TkeEHo3HLKJIMv4gL68t/2Mej82HT&#xA;tMP6L8wXAa/8w3t3fWcci/paW2MyWNsV9ZH5SIY0doGHJl7cd8lw306NPi8I2lzkT/S7h/Y+jcx3&#xA;dOxV2KuxV55pfkO58w+dE89eb4T6mn1TynoMhDJYx97qcLVGupT8VNxHsKlgCtspUKDWBZsvDf8A&#xA;nN7VDJrXlXSAN7e3uro06n6xIka/9Q5yWIbJPN5r+SbkT6vZOCsgEMgU7EcS6tX7xl8XTdqgHhI8&#xA;3qvoYXT070MVp3oYrTvQxWnvP5Srx8k2o/4sm/5OHMTL9T0vZv8Acj4sxytz3Yq7FXYqtkjjljaO&#xA;RQ8bijIwBBB7EHFSG2RGKllBKGqkjoaEVH0HFUqfy1p8nmBNcmeaa6gWlrC7kwQuUMbyxxilJHjb&#xA;izGu3Sm+Hi2pr8IcXEm2BsaZEYqWUEoaqSOhoRUfQcVcVUmpArt+G4xVb6MP7w+mv73+92Hxbcfi&#xA;8dhTFFLwAAABQDoMUuIB6iv9mKuIBpUdOmKtenHSnEUNain8xqfvxWkm8x+VLLXzbreXV3Faxc1u&#xA;LO3mMUF1G/GsVyoHxp8PSo2JHQnJCVNWXCJ1ZP6/enKIiIqIoVFACqBQADoAMi2t4q00aMKMoIqG&#xA;oRXdSCD8xTFWjDEWVyil0JKMQKqW60PauKKXYpdirsVdirsVfKH5uaYfO3/OV3l/y28YktrCKzju&#xA;o60DQQ89Qn5GvVo3K9u2ZENo21HckfBgmn2B8u/nHLbkcbTXIpHgY7Csn70ge/qRlR88udLOXiaY&#xA;d8C9S+r+2LrHfV/bFXfV/bFXfV/bFXtn5Xrx8n2w/wCLJf8Ak4cxcv1PSdnf3I+LLMrc52KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV8/flPpza/8A85H/AJj+bbhQ&#xA;6aO40m2J7SClvyXYbrFZlT/rZfPaIa4myxzzf5NGuQWs1vKLbVtNmW5066IqFkUg8HA6o9BX/MZe&#xA;C8xiy8F9x5p8lu5RS6hXIHJVPIA9wCQtfuwNTf1bFXfVsVd9WxV6/wDlynHyrbj/AC5f+JnMbJze&#xA;i7O/uR8WTZW5zsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiryr/&#xA;AJxt0uWL8vZdeud73zVqV5rM7tXmRPKUTkx3NVj5j/Wy3NzoNeO63ZR/yrTQf9/3X/Bx/wDVPB4p&#xA;cH+S8ffL7P1O/wCVaaD/AL/uv+Dj/wCqePilf5Lx98vs/U7/AJVpoP8Av+6/4OP/AKp4+KV/kvH3&#xA;y+z9Tv8AlWmg/wC/7r/g4/8Aqnj4pX+S8ffL7P1O/wCVaaD/AL/uv+Dj/wCqePilf5Lx98vs/UyD&#xA;R9JttKsUsrdnaJCxBkILfEanoFGQkbc3DhGOPCOSNwNrsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVSTzy1wvkzXBagm7ksbiK0VRUtPJEyRKAO7SMBk8f1BjP6SjdA0i&#xA;30XQtO0e2NbfTbWGzhJFCUgjWNdvkuRkbNpAoI7Al2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kv8A/9k=</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:3DC86DCA4ECC11DDBFAEE31E778B53FF</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:772DA3B34ECD11DDBFAEE31E778B53FF</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:f1c065ce-15b7-453e-bf4a-735a529f4226</stRef:instanceID>
            <stRef:documentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>300.000000</stDim:w>
            <stDim:h>150.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>White</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>Black</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.901955</xapG:cyan>
                           <xapG:magenta>67.843132</xapG:magenta>
                           <xapG:yellow>67.058823</xapG:yellow>
                           <xapG:black>90.196075</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Red</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>99.215683</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Yellow</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>6.274509</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>96.470581</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Green</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>62.745094</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Cyan</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>51.764702</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>12.549019</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Blue</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>88.235291</xapG:cyan>
                           <xapG:magenta>76.862740</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>RGB Magenta</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>27.058823</xapG:cyan>
                           <xapG:magenta>81.568619</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=193 G=39 B=45</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>16.862743</xapG:cyan>
                           <xapG:magenta>98.039207</xapG:magenta>
                           <xapG:yellow>92.549011</xapG:yellow>
                           <xapG:black>6.666666</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=28 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.392157</xapG:cyan>
                           <xapG:magenta>99.215683</xapG:magenta>
                           <xapG:yellow>97.254898</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=241 G=90 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>79.607841</xapG:magenta>
                           <xapG:yellow>96.862740</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=247 G=147 B=30</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>50.196075</xapG:magenta>
                           <xapG:yellow>98.431366</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=251 G=176 B=59</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>34.901958</xapG:magenta>
                           <xapG:yellow>87.058815</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=252 G=238 B=33</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>4.705882</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>93.333328</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=217 G=224 B=33</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>18.823528</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>98.039207</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=198 B=63</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.196075</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>99.215683</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=57 G=181 B=74</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.509796</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>99.607834</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=146 B=69</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>86.274506</xapG:cyan>
                           <xapG:magenta>17.647058</xapG:magenta>
                           <xapG:yellow>100.000000</xapG:yellow>
                           <xapG:black>3.921568</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=104 B=55</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>90.196075</xapG:cyan>
                           <xapG:magenta>33.333332</xapG:magenta>
                           <xapG:yellow>98.823524</xapG:yellow>
                           <xapG:black>25.882351</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=34 G=181 B=115</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>76.078430</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>74.901955</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>78.431366</xapG:cyan>
                           <xapG:magenta>9.019608</xapG:magenta>
                           <xapG:yellow>45.882351</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=41 G=171 B=226</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>69.803917</xapG:cyan>
                           <xapG:magenta>14.901960</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=113 B=188</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>87.450974</xapG:cyan>
                           <xapG:magenta>52.549015</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=46 G=49 B=146</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>99.215683</xapG:cyan>
                           <xapG:magenta>96.470581</xapG:magenta>
                           <xapG:yellow>3.529412</xapG:yellow>
                           <xapG:black>0.392157</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=27 G=20 B=100</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>26.274508</xapG:yellow>
                           <xapG:black>24.705881</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.509796</xapG:cyan>
                           <xapG:magenta>98.431366</xapG:magenta>
                           <xapG:yellow>0.784314</xapG:yellow>
                           <xapG:black>0.392157</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=147 G=39 B=143</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>49.411762</xapG:cyan>
                           <xapG:magenta>99.215683</xapG:magenta>
                           <xapG:yellow>1.176471</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=158 G=0 B=93</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>34.901958</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>37.254898</xapG:yellow>
                           <xapG:black>10.980392</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=212 G=20 B=90</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>11.764706</xapG:cyan>
                           <xapG:magenta>100.000000</xapG:magenta>
                           <xapG:yellow>49.411762</xapG:yellow>
                           <xapG:black>0.784314</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=237 G=30 B=121</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>96.862740</xapG:magenta>
                           <xapG:yellow>20.392155</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=199 G=178 B=153</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>22.745096</xapG:cyan>
                           <xapG:magenta>27.450979</xapG:magenta>
                           <xapG:yellow>39.999996</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=153 G=134 B=117</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.999996</xapG:cyan>
                           <xapG:magenta>42.745094</xapG:magenta>
                           <xapG:yellow>52.549015</xapG:yellow>
                           <xapG:black>6.666666</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=115 G=99 B=87</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>50.588234</xapG:cyan>
                           <xapG:magenta>52.941174</xapG:magenta>
                           <xapG:yellow>60.784309</xapG:yellow>
                           <xapG:black>23.529411</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=83 G=71 B=65</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>57.647057</xapG:cyan>
                           <xapG:magenta>60.392155</xapG:magenta>
                           <xapG:yellow>63.921566</xapG:yellow>
                           <xapG:black>41.960781</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=198 G=156 B=109</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>22.745096</xapG:cyan>
                           <xapG:magenta>38.431370</xapG:magenta>
                           <xapG:yellow>63.529408</xapG:yellow>
                           <xapG:black>1.176471</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=166 G=124 B=82</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>31.764704</xapG:cyan>
                           <xapG:magenta>49.019604</xapG:magenta>
                           <xapG:yellow>74.117645</xapG:yellow>
                           <xapG:black>9.803921</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=140 G=98 B=57</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>36.078430</xapG:cyan>
                           <xapG:magenta>57.254898</xapG:magenta>
                           <xapG:yellow>83.921562</xapG:yellow>
                           <xapG:black>22.745096</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=117 G=76 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>39.215683</xapG:cyan>
                           <xapG:magenta>63.921566</xapG:magenta>
                           <xapG:yellow>93.333328</xapG:yellow>
                           <xapG:black>35.686272</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=96 G=56 B=19</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>41.568626</xapG:cyan>
                           <xapG:magenta>69.803917</xapG:magenta>
                           <xapG:yellow>96.862740</xapG:yellow>
                           <xapG:black>49.019604</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=66 G=33 B=11</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>47.843136</xapG:cyan>
                           <xapG:magenta>73.333328</xapG:magenta>
                           <xapG:yellow>83.529404</xapG:yellow>
                           <xapG:black>68.235291</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 7476 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>42.999996</xapG:yellow>
                           <xapG:black>60.000004</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 603 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>0.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>69.000000</xapG:yellow>
                           <xapG:black>1.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE Black 6 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>100.000000</xapG:cyan>
                           <xapG:magenta>35.000000</xapG:magenta>
                           <xapG:yellow>0.000000</xapG:yellow>
                           <xapG:black>100.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>PANTONE 7465 C</xapG:swatchName>
                           <xapG:type>SPOT</xapG:type>
                           <xapG:tint>100.000000</xapG:tint>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:cyan>50.000000</xapG:cyan>
                           <xapG:magenta>0.000000</xapG:magenta>
                           <xapG:yellow>25.000000</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Web Color Group</xapG:groupName>
                  <xapG:groupType>1</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=236 G=28 B=36</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>0.784314</xapG:cyan>
                           <xapG:magenta>99.215683</xapG:magenta>
                           <xapG:yellow>97.254898</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=0 G=169 B=157</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>78.431366</xapG:cyan>
                           <xapG:magenta>9.019608</xapG:magenta>
                           <xapG:yellow>45.882351</xapG:yellow>
                           <xapG:black>0.000000</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=102 G=45 B=145</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>74.509796</xapG:cyan>
                           <xapG:magenta>98.431366</xapG:magenta>
                           <xapG:yellow>0.784314</xapG:yellow>
                           <xapG:black>0.392157</xapG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>R=139 G=146 B=152 1</xapG:swatchName>
                           <xapG:mode>CMYK</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:cyan>48.627449</xapG:cyan>
                           <xapG:magenta>36.470585</xapG:magenta>
                           <xapG:yellow>33.725487</xapG:yellow>
                           <xapG:black>1.568627</xapG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Grayscale</xapG:groupName>
                  <xapG:groupType>1</xapG:groupType>
                  <xapG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=100</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>255</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=90</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>229</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=80</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>204</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=70</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>178</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=60</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>153</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=50</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>127</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=40</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>101</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=30</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>76</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=20</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>50</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=10</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>25</xapG:gray>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xapG:swatchName>K=5</xapG:swatchName>
                           <xapG:mode>GRAY</xapG:mode>
                           <xapG:type>PROCESS</xapG:type>
                           <xapG:gray>12</xapG:gray>
                        </rdf:li>
                     </rdf:Seq>
                  </xapG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -222 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 222 li
372 222 li
372 0 li
cp
clp
[1 0 0 1 0 0 ]ct
114.484 152.06 mo
71.042 152.06 li
71.042 58.124 li
114.484 58.124 li
114.484 152.06 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
level3{
gsave
clp
[-4.10608e-06 93.936 -93.936 -4.10608e-06 92.7632 58.124 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~rr?r)r;^]$qZ(Gsq#G2npAeuio`/`do)NK^nGm9Zmf7$Um/UdOlMtOJkl>=Ek5](@jT&h:irES5i;dA1
hZ.,+h#Ll&gAkZ!f`5Dqf)T/ke,WfedK!Taci@?[c2_*VbQ(jPaoGXLa8fCF`W0.A_uNq=_>m\7^]7G2
^&V2,]Dtu(\c>`"\,]Jr[K'5mZiF#hZ2dccYQ.N]XoM<YX8l'SWW5gNVuTRIV>s@DU]=+?U&[k9TE%V4
ScDD/S,c/*RK,o%QiKYtQ2jGpPQ42jOoRreO8q``NW;K[MuZ6VM?$!PL]BdLL&aOFKE+:AJcJ%;J,hh7
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-4.10608e-06 93.936 -93.936 -4.10608e-06 92.7632 58.124 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[0.00392157 0 ][0.00392157 0 ][0.00392157 0 ][0.00392157 0 ]]
/Samples[
<~s8N#rrVZTjqtg0bq=saZp\+=Rp%7nJoCDJBnaQ&:n*]W2mHj3*lg!d"l0.?okN:pgjlGL_j5T(WiS`YO
hr!;Ih;-lAgY:H9g"G$1f@SU(eC;srdaHOjd*U+bcHa\Zbfn8Rb0%iJaN2EB`l?!:`5KR2_SX.*^qd_"
^:q=p]tD"i]=PSa\[]/Y\$i`Q[C!<IZa-mAZ*:I9YHG%1XfSV)X/`2!WMlbnVl$>fV50o^US=KVTqJ'N
T:_^HSXl:@S"#k8R@0G0Q^=#(Q'ISuPEV/mOcb`eO,o<]NK&mUMi3IMM2@%ELPLV=KnY25K7ec-JUr?%
~>
0 <~D/F-,D/=$)Chmg%CMIU!C2.KuC2%BrBkV0nBP;'mBP1sjB4bafAn>ObAS#FaARo=^A7K+Z@q&nV@U`eU
@U`bS@:<PO?smAM?sm>K?XI,G?=$oC?!U`A?!U]?>[1K;>?b97>$>*5>$>'3=]nj/=BJ[-=BJX+='&F'
<`W7$<E3%!<E3$u<)cgq;c?Um;GpCj;GpCi;,L1e:f'tb:f'ta:JXb]:/4PY9he>V9he>U9MA,Q91qoM
8kM]J8kM]J8P)KF84Z9B7n6'>7n6'>7Rfj:77BX677BX66psF26UO4.6:+"*6:+"*5s[e&5X7S"5<h@s
~>
<~R$a8-Q^3o$P`q;oP*(ieO,f6[NJrdRMM[1GLkgb?L4t;6K7\]+JUi6"IXQWlI!^3dH$FRXGBS.PF`__H
EcQ/>E,]`5D/F**CMR[!BP;$kAnGUcA7T1Z@UWYP?XI,F?!LT<>$>'3=BAO(<E3!t;c?Rl;,C%a:/4MX
9M8#N8kDTF7n,s:779O26UF+*5X.Is5!;%k4$,J`3B/uW2E!EL1c$pC1,1L;0J>%1/M&G'.k2tr-mpAh
-7'o_,9nBV+X%sN+!)FC*#on:)AsD0(Ddi&'bh>q&eYcg&.f?_%LijU$O[:K#mgkB"pP57"9\f.!<E0#
~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
88.0923 77.8623 mo
88.0923 77.8623 73.3794 97.6191 74.0361 118.117 cv
74.6963 138.73 79.4717 145.9 79.4717 145.9 cv
79.4717 145.9 74.7852 144.983 71.0054 130.354 cv
61.3086 165.449 li
61.3086 165.449 67.9272 122.141 67.9272 115.934 cv
62.6406 124.666 54.2275 130.969 54.2275 130.969 cv
63.3115 119.629 71.9976 101.989 71.9976 101.989 cv
71.9976 101.989 79.4048 86.5498 88.0923 77.8623 cv
cp
1 0.35 0 1 cmyk
f
71.5415 97.6992 mo
72.043 99.3896 71.2549 101.645 69.6519 102.708 cv
67.9248 103.854 66.1016 103.088 65.73 101.044 cv
65.3818 99.1318 66.4888 96.9844 68.0791 96.1914 cv
69.5664 95.4473 71.0679 96.1055 71.5415 97.6992 cv
cp
f
76.7813 85.5215 mo
76.7544 85.2236 76.6987 84.9082 76.5986 84.5742 cv
76.3882 84.7998 76.2036 85.0518 76.042 85.3076 cv
75.6982 85.2471 75.3105 85.2256 74.8755 85.2764 cv
75.585 86.166 li
75.2422 86.9248 75.0947 87.5605 75.0947 87.5605 cv
75.0947 87.5605 75.7393 86.4648 75.9951 86.749 cv
76.251 87.0332 76.3306 87.9307 76.3306 87.9307 cv
76.3306 87.9307 76.6719 87.3594 76.7734 86.4482 cv
77.8076 86.1748 li
77.8076 86.1748 77.4507 85.7949 76.7813 85.5215 cv
cp
0 0 0.69 0.00999999 cmyk
f
77.0835 64.7441 mo
77.2178 65.5664 77.4458 66.1768 77.4458 66.1768 cv
77.4458 66.1768 77.3774 64.9082 77.7476 65.0029 cv
78.1182 65.0986 78.6807 65.8018 78.6807 65.8018 cv
78.6807 65.8018 78.6494 65.1377 78.23 64.3223 cv
78.9404 63.5225 li
78.9404 63.5225 78.4336 63.4033 77.7241 63.5459 cv
77.5371 63.3125 77.3159 63.0801 77.0488 62.8574 cv
76.9985 63.1621 76.9834 63.4736 76.9902 63.7764 cv
76.6704 63.916 76.335 64.1123 76.001 64.3955 cv
77.0835 64.7441 li
cp
f
101.583 73.6074 mo
101.583 73.6074 101.688 70.0449 102.702 70.3975 cv
103.715 70.75 105.949 74.3564 105.949 74.3564 cv
105.949 74.3564 105.597 71.041 103.803 67.7021 cv
105.29 66.2861 li
105.29 66.2861 104.29 65.958 102.828 66.1143 cv
102.37 65.46 101.848 64.8232 101.249 64.2354 cv
101.055 65.0098 100.94 65.8047 100.883 66.5908 cv
100.294 66.8193 99.6787 67.1396 99.0537 67.585 cv
100.841 68.3301 li
100.908 71.2275 101.583 73.6074 101.583 73.6074 cv
cp
f
87.8955 72.8047 mo
87.8955 72.8047 88.1206 71.2686 88.5415 71.4727 cv
88.9619 71.6758 89.7476 73.3506 89.7476 73.3506 cv
89.7476 73.3506 89.7622 71.8975 89.1538 70.3613 cv
89.8687 69.8232 li
89.8687 69.8232 89.4521 69.6318 88.8125 69.626 cv
88.6465 69.3193 88.4521 69.0176 88.2231 68.7324 cv
88.0996 69.0576 88.0103 69.3965 87.9463 69.7334 cv
87.6797 69.8037 87.397 69.9102 87.1045 70.0713 cv
87.8403 70.4834 li
87.7231 71.7412 87.8955 72.8047 87.8955 72.8047 cv
cp
f
80.7612 71.2568 mo
80.6812 70.5811 80.5518 69.9004 80.3525 69.2402 cv
79.8604 69.7715 79.4346 70.3398 79.0654 70.9238 cv
77.7993 70.8467 76.9492 71.1699 76.9492 71.1699 cv
78.2881 72.3311 li
76.8745 75.2822 76.7021 78.1553 76.7021 78.1553 cv
76.7021 78.1553 78.4863 74.9561 79.3457 74.6123 cv
80.2051 74.2676 80.4375 77.335 80.4375 77.335 cv
80.4375 77.335 80.9248 75.2568 80.8662 72.7549 cv
82.3784 72.041 li
81.8228 71.6816 81.2783 71.4297 80.7612 71.2568 cv
cp
f
103.62 101.767 mo
103.553 101.148 103.436 100.52 103.249 99.8945 cv
102.825 100.35 102.449 100.849 102.117 101.363 cv
101.63 101.299 101.091 101.286 100.499 101.356 cv
101.438 102.533 li
100.398 104.533 99.9678 106.406 99.9678 106.406 cv
99.9678 106.406 101.373 104.019 101.931 104.638 cv
102.49 105.258 102.663 110.716 102.663 110.716 cv
102.663 110.716 103.663 106.16 103.69 103.214 cv
105.234 102.805 li
105.234 102.805 104.676 102.207 103.62 101.767 cv
cp
f
108.799 75.3623 mo
108.772 75.0645 108.717 74.749 108.616 74.415 cv
108.407 74.6406 108.222 74.8926 108.06 75.1484 cv
107.717 75.0889 107.329 75.0654 106.894 75.1172 cv
107.603 76.0068 li
107.26 76.7656 107.112 77.4014 107.112 77.4014 cv
107.112 77.4014 107.757 76.3057 108.013 76.5898 cv
108.269 76.874 108.349 77.7715 108.349 77.7715 cv
108.349 77.7715 108.69 77.2002 108.792 76.2881 cv
109.825 76.0146 li
109.825 76.0146 109.469 75.6357 108.799 75.3623 cv
cp
f
105.72 90.1396 mo
105.694 89.8408 105.638 89.5254 105.538 89.1924 cv
105.328 89.4189 105.143 89.6689 104.98 89.9268 cv
104.638 89.8662 104.25 89.8438 103.815 89.8945 cv
104.524 90.7842 li
104.181 91.5439 104.034 92.1787 104.034 92.1787 cv
104.034 92.1787 104.678 91.083 104.935 91.3672 cv
105.19 91.6514 105.271 92.5488 105.271 92.5488 cv
105.271 92.5488 105.611 91.9775 105.713 91.0654 cv
106.747 90.792 li
106.747 90.792 106.391 90.4131 105.72 90.1396 cv
cp
f
90.3574 93.2266 mo
90.0322 93.5771 89.751 93.9531 89.5073 94.3389 cv
88.6714 94.2891 88.1104 94.501 88.1104 94.501 cv
88.9946 95.2686 li
88.061 97.2178 87.9468 99.1143 87.9468 99.1143 cv
87.9468 99.1143 89.125 97.002 89.6929 96.7744 cv
90.2603 96.5469 90.4141 98.5732 90.4141 98.5732 cv
90.4141 98.5732 90.7354 97.2002 90.6973 95.5479 cv
91.6958 95.0771 li
91.3286 94.8389 90.9697 94.6738 90.6279 94.5596 cv
90.5747 94.1123 90.4893 93.6631 90.3574 93.2266 cv
cp
f
102.072 77.4834 mo
102.072 77.4834 100.262 76.2607 97.2563 75.7451 cv
96.7119 74.1768 96.0264 72.6113 95.1655 71.0967 cv
94.3384 72.5322 93.6577 74.0566 93.0986 75.5928 cv
91.7944 75.7148 90.3833 76.0049 88.8853 76.5391 cv
92.0322 79.041 li
90.5205 84.8643 90.5205 89.999 90.5205 89.999 cv
90.5205 89.999 92.75 82.9453 94.5718 84.2236 cv
96.3945 85.502 98.8125 93.9697 98.8125 93.9697 cv
98.8125 93.9697 99.9922 87.1504 98.3022 79.4658 cv
102.072 77.4834 li
cp
f
91.2437 110.615 mo
90.5659 110.499 89.9438 110.481 89.3794 110.526 cv
89.0269 109.914 88.624 109.316 88.165 108.768 cv
87.9116 109.476 87.7378 110.192 87.623 110.901 cv
86.3818 111.344 85.7021 112 85.7021 112 cv
87.4561 112.563 li
87.3101 115.958 88.3193 118.773 88.3193 118.773 cv
88.3193 118.773 88.7168 114.989 89.397 114.31 cv
90.0771 113.629 91.5518 115.411 91.5518 115.411 cv
91.5518 115.411 91.1689 114.28 90.0908 111.914 cv
91.2437 110.615 li
cp
f
125.168 104.898 mo
126.519 104.898 li
126.803 107.031 li
127.034 107.297 li
127.655 107.511 128.064 107.582 128.597 107.582 cv
130 107.582 130.888 106.906 130.888 105.841 cv
130.888 105.255 130.64 104.775 130.124 104.331 cv
129.716 103.993 129.432 103.833 128.259 103.283 cv
126.306 102.359 125.417 101.275 125.417 99.8193 cv
125.417 97.8115 127.176 96.3721 129.645 96.3721 cv
130.675 96.3721 131.634 96.5508 132.949 96.9766 cv
132.949 99.8545 li
131.67 99.8545 li
131.368 98.0068 li
131.119 97.7578 li
130.711 97.5801 130.338 97.5098 129.84 97.5098 cv
128.561 97.5098 127.727 98.167 127.727 99.2148 cv
127.727 100.139 128.349 100.778 130 101.523 cv
131.297 102.11 131.848 102.43 132.327 102.874 cv
132.966 103.496 133.304 104.242 133.304 105.113 cv
133.304 107.262 131.403 108.719 128.561 108.719 cv
127.424 108.719 126.394 108.541 125.168 108.114 cv
125.168 104.898 li
cp
1 0 0.43 0.6 cmyk
f
136.822 107.244 mo
136.822 108.025 136.183 108.647 135.383 108.647 cv
134.62 108.647 133.998 108.025 133.998 107.244 cv
133.998 106.445 134.62 105.823 135.401 105.823 cv
136.165 105.823 136.822 106.48 136.822 107.244 cv
cp
f
141.882 103.283 mo
145.009 103.283 li
143.428 98.8955 li
141.882 103.283 li
cp
144.902 96.4609 mo
148.988 107.457 li
150.036 107.635 li
150.036 108.505 li
145.24 108.505 li
145.24 107.635 li
146.359 107.528 li
146.483 107.297 li
145.417 104.277 li
141.545 104.277 li
140.479 107.28 li
140.657 107.511 li
141.776 107.635 li
141.776 108.505 li
137.957 108.505 li
137.957 107.635 li
139.022 107.476 li
143.038 96.4609 li
144.902 96.4609 li
cp
f
154.137 107.244 mo
154.137 108.025 153.498 108.647 152.698 108.647 cv
151.935 108.647 151.313 108.025 151.313 107.244 cv
151.313 106.445 151.935 105.823 152.716 105.823 cv
153.48 105.823 154.137 106.48 154.137 107.244 cv
cp
f
155.165 107.635 mo
156.23 107.546 li
156.515 107.262 li
156.515 97.7939 li
156.23 97.5459 li
155.093 97.457 li
155.093 96.5859 li
164.011 96.5859 li
164.011 99.5518 li
162.785 99.5518 li
162.519 97.8291 li
162.288 97.5977 li
158.859 97.5977 li
158.859 102.039 li
161.24 102.039 li
161.488 101.809 li
161.666 100.512 li
162.714 100.512 li
162.714 104.633 li
161.666 104.633 li
161.488 103.336 li
161.24 103.105 li
158.859 103.105 li
158.859 107.262 li
159.161 107.546 li
160.405 107.635 li
160.405 108.505 li
155.165 108.505 li
155.165 107.635 li
cp
f
166.861 107.244 mo
166.861 108.025 166.221 108.647 165.422 108.647 cv
164.658 108.647 164.036 108.025 164.036 107.244 cv
164.036 106.445 164.658 105.823 165.44 105.823 cv
166.204 105.823 166.861 106.48 166.861 107.244 cv
cp
f
167.847 107.635 mo
168.913 107.546 li
169.197 107.262 li
169.197 97.7939 li
168.913 97.5459 li
167.847 97.457 li
167.847 96.5859 li
176.818 96.5859 li
176.818 99.3926 li
175.574 99.3926 li
175.308 97.8291 li
175.077 97.5977 li
171.542 97.5977 li
171.542 101.809 li
173.851 101.809 li
174.1 101.56 li
174.277 100.281 li
175.325 100.281 li
175.325 104.402 li
174.277 104.402 li
174.1 103.123 li
173.851 102.874 li
171.542 102.874 li
171.542 107.492 li
175.663 107.492 li
175.894 107.208 li
176.196 105.325 li
177.404 105.325 li
177.404 108.505 li
167.847 108.505 li
167.847 107.635 li
cp
f
181.232 107.244 mo
181.232 108.025 180.593 108.647 179.793 108.647 cv
179.03 108.647 178.408 108.025 178.408 107.244 cv
178.408 106.445 179.03 105.823 179.812 105.823 cv
180.575 105.823 181.232 106.48 181.232 107.244 cv
cp
f
190.256 103.283 mo
193.382 103.283 li
191.801 98.8955 li
190.256 103.283 li
cp
193.275 96.4609 mo
197.361 107.457 li
198.409 107.635 li
198.409 108.505 li
193.613 108.505 li
193.613 107.635 li
194.732 107.528 li
194.856 107.297 li
193.791 104.277 li
189.918 104.277 li
188.853 107.28 li
189.029 107.511 li
190.149 107.635 li
190.149 108.505 li
186.33 108.505 li
186.33 107.635 li
187.396 107.476 li
191.41 96.4609 li
193.275 96.4609 li
cp
f
199.935 107.635 mo
201.018 107.546 li
201.32 107.262 li
201.32 97.7939 li
201.072 97.5459 li
199.935 97.457 li
199.935 96.5859 li
205.033 96.5859 li
205.033 97.457 li
203.949 97.5459 li
203.665 97.7939 li
203.665 107.492 li
207.076 107.492 li
207.307 107.208 li
207.572 105.041 li
208.888 105.041 li
208.888 108.505 li
199.935 108.505 li
199.935 107.635 li
cp
f
218.187 96.5859 mo
218.187 99.7305 li
216.962 99.7305 li
216.659 97.8291 li
216.393 97.5977 li
214.262 97.5977 li
214.262 107.262 li
214.563 107.546 li
215.718 107.635 li
215.718 108.505 li
210.407 108.505 li
210.407 107.635 li
211.561 107.546 li
211.863 107.262 li
211.863 97.5977 li
209.731 97.5977 li
209.447 97.8291 li
209.163 99.7305 li
207.938 99.7305 li
207.938 96.5859 li
218.187 96.5859 li
cp
f
219.563 107.635 mo
220.629 107.546 li
220.913 107.262 li
220.913 97.7939 li
220.629 97.5459 li
219.563 97.457 li
219.563 96.5859 li
228.533 96.5859 li
228.533 99.3926 li
227.29 99.3926 li
227.023 97.8291 li
226.792 97.5977 li
223.258 97.5977 li
223.258 101.809 li
225.567 101.809 li
225.815 101.56 li
225.993 100.281 li
227.042 100.281 li
227.042 104.402 li
225.993 104.402 li
225.815 103.123 li
225.567 102.874 li
223.258 102.874 li
223.258 107.492 li
227.379 107.492 li
227.61 107.208 li
227.912 105.325 li
229.119 105.325 li
229.119 108.505 li
219.563 108.505 li
219.563 107.635 li
cp
f
233.861 102.234 mo
234.395 102.253 234.431 102.253 234.537 102.253 cv
236.402 102.253 237.309 101.488 237.309 99.8906 cv
237.309 98.3984 236.385 97.5977 234.679 97.5977 cv
233.861 97.5977 li
233.861 102.234 li
cp
235.62 96.5859 mo
238.338 96.5859 239.795 97.6338 239.795 99.5879 cv
239.795 101.258 238.817 102.253 236.74 102.661 cv
238.268 103.034 238.817 103.656 239.386 105.574 cv
239.9 107.351 240.275 107.671 241.962 107.635 cv
241.962 108.488 li
241.003 108.612 240.719 108.63 240.311 108.63 cv
239.352 108.63 238.552 108.346 238.018 107.813 cv
237.557 107.351 237.343 106.942 237.006 105.805 cv
236.615 104.491 236.331 103.976 235.744 103.621 cv
235.354 103.372 234.821 103.247 234.252 103.247 cv
234.182 103.247 234.039 103.247 233.861 103.265 cv
233.861 107.262 li
234.146 107.546 li
235.229 107.635 li
235.229 108.505 li
230.167 108.505 li
230.167 107.635 li
231.232 107.546 li
231.518 107.262 li
231.518 97.7939 li
231.232 97.5459 li
230.167 97.457 li
230.167 96.5859 li
235.62 96.5859 li
cp
f
241.367 107.635 mo
242.415 107.511 li
242.735 107.191 li
242.735 97.7939 li
242.486 97.5459 li
241.35 97.457 li
241.35 96.5859 li
245.435 96.5859 li
245.435 97.0664 li
250.871 105.504 li
250.871 97.9004 li
250.551 97.5625 li
249.467 97.4209 li
249.467 96.5859 li
253.518 96.5859 li
253.518 97.4209 li
252.47 97.5625 li
252.168 97.9004 li
252.168 108.505 li
250.178 108.505 li
244.031 98.9658 li
244.031 107.191 li
244.315 107.511 li
245.417 107.635 li
245.417 108.505 li
241.367 108.505 li
241.367 107.635 li
cp
f
257.549 103.283 mo
260.676 103.283 li
259.095 98.8955 li
257.549 103.283 li
cp
260.568 96.4609 mo
264.654 107.457 li
265.702 107.635 li
265.702 108.505 li
260.907 108.505 li
260.907 107.635 li
262.026 107.528 li
262.15 107.297 li
261.084 104.277 li
257.212 104.277 li
256.146 107.28 li
256.323 107.511 li
257.443 107.635 li
257.443 108.505 li
253.623 108.505 li
253.623 107.635 li
254.689 107.476 li
258.704 96.4609 li
260.568 96.4609 li
cp
f
274.752 96.5859 mo
274.752 99.7305 li
273.525 99.7305 li
273.225 97.8291 li
272.957 97.5977 li
270.826 97.5977 li
270.826 107.262 li
271.128 107.546 li
272.282 107.635 li
272.282 108.505 li
266.971 108.505 li
266.971 107.635 li
268.126 107.546 li
268.428 107.262 li
268.428 97.5977 li
266.296 97.5977 li
266.012 97.8291 li
265.729 99.7305 li
264.502 99.7305 li
264.502 96.5859 li
274.752 96.5859 li
cp
f
276.127 107.635 mo
277.299 107.546 li
277.584 107.262 li
277.584 97.7939 li
277.299 97.5459 li
276.127 97.457 li
276.127 96.5859 li
281.385 96.5859 li
281.385 97.457 li
280.213 97.5459 li
279.929 97.7939 li
279.929 107.262 li
280.213 107.546 li
281.385 107.635 li
281.385 108.505 li
276.127 108.505 li
276.127 107.635 li
cp
f
287.096 96.5859 mo
287.096 97.457 li
286.064 97.5459 li
285.869 97.8115 li
288.818 105.912 li
291.679 97.8115 li
291.482 97.5459 li
290.417 97.457 li
290.417 96.5859 li
294.307 96.5859 li
294.307 97.457 li
293.153 97.6875 li
289.209 108.541 li
287.416 108.541 li
283.383 97.6689 li
282.21 97.457 li
282.21 96.5859 li
287.096 96.5859 li
cp
f
293.694 107.635 mo
294.761 107.546 li
295.045 107.262 li
295.045 97.7939 li
294.761 97.5459 li
293.694 97.457 li
293.694 96.5859 li
302.666 96.5859 li
302.666 99.3926 li
301.422 99.3926 li
301.155 97.8291 li
300.924 97.5977 li
297.39 97.5977 li
297.39 101.809 li
299.699 101.809 li
299.947 101.56 li
300.125 100.281 li
301.174 100.281 li
301.174 104.402 li
300.125 104.402 li
299.947 103.123 li
299.699 102.874 li
297.39 102.874 li
297.39 107.492 li
301.511 107.492 li
301.742 107.208 li
302.044 105.325 li
303.252 105.325 li
303.252 108.505 li
293.694 108.505 li
293.694 107.635 li
cp
f
304.832 104.898 mo
306.182 104.898 li
306.467 107.031 li
306.697 107.297 li
307.318 107.511 307.728 107.582 308.261 107.582 cv
309.664 107.582 310.552 106.906 310.552 105.841 cv
310.552 105.255 310.304 104.775 309.788 104.331 cv
309.38 103.993 309.096 103.833 307.924 103.283 cv
305.969 102.359 305.081 101.275 305.081 99.8193 cv
305.081 97.8115 306.84 96.3721 309.309 96.3721 cv
310.338 96.3721 311.298 96.5508 312.612 96.9766 cv
312.612 99.8545 li
311.334 99.8545 li
311.031 98.0068 li
310.783 97.7578 li
310.374 97.5801 310.001 97.5098 309.505 97.5098 cv
308.225 97.5098 307.39 98.167 307.39 99.2148 cv
307.39 100.139 308.011 100.778 309.664 101.523 cv
310.96 102.11 311.511 102.43 311.99 102.874 cv
312.631 103.496 312.968 104.242 312.968 105.113 cv
312.968 107.262 311.067 108.719 308.225 108.719 cv
307.088 108.719 306.058 108.541 304.832 108.114 cv
304.832 104.898 li
cp
f
316.533 98.9893 mo
316.504 98.9893 316.479 98.9893 316.42 98.9834 cv
316.42 98.0137 li
316.546 98.0137 li
316.95 98.0137 317.164 98.1797 317.164 98.502 cv
317.164 98.8232 316.95 98.9893 316.533 98.9893 cv
cp
318.203 100.147 mo
317.917 100.143 317.81 100.063 317.712 99.793 cv
317.539 99.2871 317.443 99.1797 317.068 99.085 cv
317.563 98.9775 317.777 98.7695 317.777 98.4063 cv
317.777 97.9893 317.455 97.7695 316.854 97.7695 cv
315.546 97.7695 li
315.546 97.9785 li
315.861 98.0488 li
315.861 100.096 li
315.564 100.161 li
315.564 100.375 li
316.76 100.375 li
316.76 100.155 li
316.42 100.09 li
316.42 99.2334 li
316.492 99.2334 li
316.837 99.2334 316.967 99.3584 317.111 99.8096 cv
317.182 100.061 317.229 100.149 317.342 100.239 cv
317.475 100.352 317.64 100.405 317.86 100.405 cv
317.899 100.405 317.947 100.402 318.003 100.397 cv
317.673 100.736 317.221 100.946 316.729 100.947 cv
315.733 100.945 314.92 100.113 314.92 99.0781 cv
314.92 98.0439 315.743 97.1992 316.705 97.1973 cv
317.729 97.1973 318.539 98.0195 318.539 99.0723 cv
318.539 99.4727 318.412 99.8428 318.203 100.147 cv
cp
316.76 96.5859 mo
315.379 96.5898 314.294 97.6973 314.291 99.0898 cv
314.291 100.445 315.388 101.562 316.724 101.563 cv
318.066 101.562 319.167 100.434 319.168 99.0723 cv
319.167 97.7129 318.08 96.5898 316.76 96.5859 cv
cp
f
164.737 117.5 mo
164.143 117.5 li
164.196 116.163 li
164.034 115.919 li
163.589 115.73 163.265 115.663 162.845 115.663 cv
161.629 115.663 160.724 116.446 160.724 117.487 cv
160.724 117.973 160.9 118.324 161.265 118.595 cv
161.535 118.784 161.535 118.784 162.589 119.283 cv
164.021 119.945 164.535 120.54 164.535 121.527 cv
164.535 123.229 163.007 124.432 160.873 124.432 cv
159.954 124.432 159.278 124.27 158.387 123.81 cv
158.833 121.662 li
159.535 121.662 li
159.4 123.216 li
159.535 123.392 li
160.144 123.676 160.548 123.783 161.076 123.783 cv
162.399 123.783 163.345 122.986 163.345 121.864 cv
163.345 121.432 163.196 121.094 162.927 120.864 cv
162.697 120.689 162.697 120.689 161.71 120.189 cv
160.062 119.352 159.575 118.824 159.575 117.852 cv
159.575 116.23 161.008 115.041 162.94 115.041 cv
163.737 115.041 164.305 115.149 165.169 115.447 cv
164.737 117.5 li
cp
f
168.828 120.297 mo
169.355 119.96 169.639 119.527 169.639 119.055 cv
169.639 118.636 169.328 118.312 168.923 118.312 cv
168.099 118.312 167.382 119.23 166.99 120.811 cv
167.841 120.743 168.355 120.594 168.828 120.297 cv
cp
170.449 123.176 mo
169.544 124.013 168.733 124.391 167.828 124.391 cv
166.544 124.391 165.774 123.486 165.774 121.959 cv
165.774 120.567 166.396 119.243 167.437 118.446 cv
168.017 118 168.666 117.743 169.233 117.743 cv
170.058 117.743 170.611 118.284 170.611 119.082 cv
170.611 120.312 169.301 121.082 166.923 121.27 cv
166.896 121.486 166.882 121.662 166.882 121.852 cv
166.882 122.959 167.409 123.648 168.247 123.648 cv
168.936 123.648 169.571 123.324 170.449 122.54 cv
170.449 123.176 li
cp
f
174.446 114.325 mo
174.419 114.461 174.405 114.555 174.365 114.744 cv
174.338 114.906 174.311 115.067 174.284 115.217 cv
172.919 122 li
172.812 122.567 172.771 122.824 172.771 123.054 cv
172.771 123.5 173.028 123.729 173.501 123.729 cv
173.716 123.729 173.96 123.676 174.474 123.513 cv
174.474 123.932 li
173.663 124.257 173.122 124.391 172.649 124.391 cv
172.042 124.391 171.69 124.054 171.69 123.473 cv
171.69 123.176 171.744 122.797 171.933 121.838 cv
173.23 115.217 li
172.028 115.082 li
172.028 114.73 li
174.082 114.325 li
174.446 114.325 li
cp
f
178.539 114.974 mo
178.025 115.312 177.62 116.352 177.323 118.122 cv
179.228 118.122 li
179.228 118.73 li
177.214 118.73 li
176.674 122.567 li
176.472 124.039 176.215 124.851 175.701 125.621 cv
175.053 126.594 174.229 127.188 173.553 127.188 cv
173.121 127.188 172.823 126.891 172.823 126.484 cv
172.823 126.256 172.904 126.107 173.121 125.932 cv
174.526 126.297 li
175.093 125.676 175.323 124.918 175.647 122.608 cv
176.215 118.73 li
175.323 118.824 li
175.323 118.379 li
176.35 117.96 li
176.755 115.785 177.876 114.379 179.188 114.379 cv
179.809 114.379 180.309 114.73 180.309 115.189 cv
180.309 115.527 180.079 115.771 179.647 115.879 cv
178.539 114.974 li
cp
f
184.089 120.338 mo
186.913 120.338 li
186.291 116.446 li
184.089 120.338 li
cp
187.184 115.122 mo
188.629 123.445 li
188.858 123.688 li
189.521 123.757 li
189.521 124.27 li
186.562 124.27 li
186.562 123.757 li
187.359 123.688 li
187.453 123.486 li
187.034 120.919 li
183.751 120.919 li
182.306 123.486 li
182.414 123.688 li
183.238 123.757 li
183.238 124.27 li
180.563 124.27 li
180.563 123.757 li
181.306 123.688 li
186.291 115.122 li
187.184 115.122 li
cp
f
191.502 123.297 mo
191.921 123.688 192.259 123.837 192.69 123.837 cv
193.894 123.837 195.015 122.094 195.015 120.189 cv
195.015 119.189 194.583 118.567 193.88 118.567 cv
193.461 118.567 193.056 118.744 192.271 119.271 cv
191.502 123.297 li
cp
193.258 114.325 mo
193.137 114.718 193.016 115.189 192.947 115.568 cv
192.366 118.744 li
193.244 118.027 193.826 117.743 194.38 117.743 cv
195.42 117.743 196.123 118.689 196.123 120.081 cv
196.123 122.5 194.475 124.391 192.366 124.391 cv
191.65 124.391 191.11 124.229 190.354 123.797 cv
191.935 115.285 li
190.759 115.082 li
190.759 114.73 li
192.813 114.325 li
193.258 114.325 li
cp
f
199.593 117.919 mo
198.741 121.864 li
198.646 122.297 198.592 122.648 198.592 122.851 cv
198.592 123.324 198.877 123.621 199.35 123.621 cv
199.917 123.621 200.498 123.364 201.295 122.757 cv
202.309 117.865 li
203.403 117.865 li
202.443 122.283 li
202.362 122.676 202.309 123 202.309 123.176 cv
202.309 123.5 202.592 123.729 202.998 123.729 cv
203.174 123.729 203.362 123.688 203.768 123.58 cv
203.768 123.959 li
202.768 124.31 202.431 124.391 202.011 124.391 cv
201.498 124.391 201.228 124.094 201.228 123.513 cv
201.228 123.459 201.228 123.392 201.241 123.257 cv
200.403 123.986 199.525 124.391 198.782 124.391 cv
197.984 124.391 197.485 123.905 197.485 123.121 cv
197.485 122.905 197.525 122.608 197.593 122.297 cv
198.377 118.73 li
197.256 118.527 li
197.256 118.189 li
199.377 117.73 li
199.593 117.919 li
cp
f
207.358 118.5 mo
207.197 118.393 207.088 118.352 206.927 118.352 cv
206.399 118.352 205.994 118.757 205.994 119.257 cv
205.994 119.676 206.143 119.864 207.008 120.527 cv
207.696 121.055 207.791 121.135 207.994 121.352 cv
208.251 121.621 208.372 121.945 208.372 122.324 cv
208.372 123.527 207.332 124.391 205.873 124.391 cv
204.805 124.391 204.103 123.919 204.103 123.216 cv
204.103 122.797 204.386 122.5 204.791 122.5 cv
204.98 122.5 205.103 122.554 205.386 122.757 cv
205.143 123.432 li
205.413 123.77 205.697 123.905 206.129 123.905 cv
206.858 123.905 207.346 123.459 207.346 122.797 cv
207.346 122.338 207.143 122.054 206.412 121.5 cv
205.697 120.96 205.656 120.919 205.454 120.676 cv
205.237 120.433 205.13 120.121 205.13 119.784 cv
205.13 118.676 206.184 117.743 207.439 117.743 cv
208.197 117.743 208.709 118.095 208.709 118.595 cv
208.709 118.986 208.426 119.23 207.926 119.283 cv
207.358 118.5 li
cp
f
212.64 120.297 mo
213.167 119.96 213.451 119.527 213.451 119.055 cv
213.451 118.636 213.14 118.312 212.734 118.312 cv
211.91 118.312 211.193 119.23 210.803 120.811 cv
211.653 120.743 212.166 120.594 212.64 120.297 cv
cp
214.261 123.176 mo
213.355 124.013 212.545 124.391 211.64 124.391 cv
210.356 124.391 209.586 123.486 209.586 121.959 cv
209.586 120.567 210.208 119.243 211.248 118.446 cv
211.829 118 212.478 117.743 213.045 117.743 cv
213.869 117.743 214.424 118.284 214.424 119.082 cv
214.424 120.312 213.112 121.082 210.734 121.27 cv
210.708 121.486 210.693 121.662 210.693 121.852 cv
210.693 122.959 211.221 123.648 212.059 123.648 cv
212.748 123.648 213.383 123.324 214.261 122.54 cv
214.261 123.176 li
cp
f
225.174 115.203 mo
224.756 117.325 li
224.107 117.325 li
224.107 116.041 li
223.972 115.824 li
221.243 115.824 li
220.567 119.392 li
222.472 119.392 li
222.716 119.189 li
223.025 118.216 li
223.62 118.216 li
223.039 121.189 li
222.459 121.189 li
222.513 120.216 li
222.351 120.013 li
220.445 120.013 li
219.783 123.486 li
219.973 123.688 li
220.919 123.757 li
220.919 124.27 li
217.527 124.27 li
217.527 123.757 li
218.379 123.688 li
218.595 123.486 li
220.04 115.987 li
219.905 115.785 li
219.041 115.717 li
219.041 115.203 li
225.174 115.203 li
cp
f
227.997 115.5 mo
227.997 115.893 227.658 116.217 227.254 116.217 cv
226.848 116.217 226.537 115.906 226.537 115.5 cv
226.537 115.082 226.861 114.758 227.267 114.758 cv
227.658 114.758 227.997 115.109 227.997 115.5 cv
cp
227.349 117.758 mo
226.375 122.811 li
226.348 122.918 226.335 123.081 226.335 123.148 cv
226.335 123.486 226.551 123.676 226.956 123.676 cv
227.24 123.676 227.483 123.621 227.982 123.473 cv
227.982 123.891 li
227.186 124.216 226.605 124.364 226.077 124.364 cv
225.497 124.364 225.213 124.054 225.213 123.459 cv
225.213 123.257 225.24 123.067 225.295 122.77 cv
226.092 118.744 li
224.997 118.541 li
224.997 118.203 li
226.996 117.758 li
227.349 117.758 li
cp
f
231.197 117.758 mo
230.953 119.055 li
232.21 118.067 232.873 117.743 233.615 117.743 cv
234.264 117.743 234.709 118.189 234.709 118.812 cv
234.709 119.108 234.67 119.352 234.521 120.041 cv
234.061 122.135 li
233.954 122.621 233.913 122.878 233.913 123.026 cv
233.913 123.445 234.17 123.688 234.603 123.688 cv
234.805 123.688 235.034 123.648 235.358 123.567 cv
235.358 123.945 li
234.508 124.27 234.129 124.364 233.684 124.364 cv
233.075 124.364 232.751 124.08 232.751 123.54 cv
232.751 123.351 232.778 123.135 232.858 122.811 cv
233.439 120.312 li
233.521 119.973 233.562 119.648 233.562 119.419 cv
233.562 118.864 233.332 118.582 232.886 118.582 cv
232.332 118.582 231.697 118.919 230.832 119.703 cv
229.994 124.27 li
228.846 124.27 li
229.967 118.744 li
228.859 118.541 li
228.859 118.203 li
230.858 117.758 li
231.197 117.758 li
cp
f
240.261 118.284 mo
240.166 118.271 240.098 118.271 240.044 118.271 cv
238.49 118.271 237.314 119.852 237.314 121.932 cv
237.314 123.013 237.706 123.567 238.476 123.567 cv
239.03 123.567 239.436 123.351 240.098 122.676 cv
240.801 119.108 li
240.261 118.284 li
cp
242.22 117.758 mo
242.071 118.067 241.896 118.716 241.705 119.689 cv
241.22 122.081 li
241.111 122.594 241.084 122.811 241.084 123.039 cv
241.084 123.445 241.313 123.648 241.773 123.648 cv
241.936 123.648 242.098 123.621 242.57 123.513 cv
242.57 123.919 li
241.665 124.283 241.273 124.391 240.868 124.391 cv
240.314 124.391 240.084 124.054 240.084 123.257 cv
239.301 124.067 238.72 124.391 238.03 124.391 cv
236.909 124.391 236.206 123.486 236.206 122.027 cv
236.206 119.648 237.854 117.743 239.923 117.743 cv
240.422 117.743 240.773 117.824 241.246 118.055 cv
241.517 117.758 li
242.22 117.758 li
cp
f
246.283 114.325 mo
246.256 114.461 246.243 114.555 246.202 114.744 cv
246.175 114.906 246.147 115.067 246.121 115.217 cv
244.756 122 li
244.648 122.567 244.607 122.824 244.607 123.054 cv
244.607 123.5 244.864 123.729 245.338 123.729 cv
245.553 123.729 245.796 123.676 246.311 123.513 cv
246.311 123.932 li
245.498 124.257 244.959 124.391 244.486 124.391 cv
243.878 124.391 243.527 124.054 243.527 123.473 cv
243.527 123.176 243.58 122.797 243.77 121.838 cv
245.067 115.217 li
243.864 115.082 li
243.864 114.73 li
245.918 114.325 li
246.283 114.325 li
cp
f
249.916 114.325 mo
249.889 114.461 249.877 114.555 249.835 114.744 cv
249.808 114.906 249.781 115.067 249.754 115.217 cv
248.389 122 li
248.281 122.567 248.24 122.824 248.24 123.054 cv
248.24 123.5 248.498 123.729 248.971 123.729 cv
249.187 123.729 249.429 123.676 249.943 123.513 cv
249.943 123.932 li
249.132 124.257 248.592 124.391 248.119 124.391 cv
247.511 124.391 247.16 124.054 247.16 123.473 cv
247.16 123.176 247.214 122.797 247.403 121.838 cv
248.7 115.217 li
247.498 115.082 li
247.498 114.73 li
249.552 114.325 li
249.916 114.325 li
cp
f
251.469 117.717 mo
251.536 117.703 251.576 117.703 251.645 117.703 cv
252.01 117.703 252.252 117.879 252.428 118.271 cv
252.591 118.622 252.618 118.689 252.995 120.608 cv
253.44 122.891 li
254.293 120.757 254.617 119.973 255.563 117.758 cv
255.818 117.758 li
256.887 118.108 li
256.887 118.393 li
256.197 118.797 li
255.67 119.419 255.455 119.812 254.657 121.527 cv
253.819 123.378 253.293 124.364 252.591 125.324 cv
251.699 126.554 250.793 127.202 249.942 127.202 cv
249.32 127.202 248.82 126.797 248.82 126.31 cv
248.82 125.932 249.077 125.661 249.551 125.566 cv
250.347 126.364 li
251.145 126.31 251.847 125.607 252.671 124.054 cv
251.834 119.945 li
251.712 119.324 251.536 118.893 251.293 118.541 cv
250.146 118.446 li
250.146 118.148 li
251.469 117.717 li
cp
f
267.029 115.203 mo
266.651 117.176 li
266.002 117.176 li
266.002 116.027 li
265.854 115.824 li
262.949 115.824 li
262.287 119.257 li
264.341 119.257 li
264.584 119.067 li
264.881 118.082 li
265.463 118.082 li
264.895 121.04 li
264.341 121.04 li
264.395 120.067 li
264.232 119.879 li
262.165 119.879 li
261.436 123.648 li
264.881 123.648 li
265.124 123.432 li
265.584 122.067 li
266.205 122.067 li
265.772 124.27 li
259.233 124.27 li
259.233 123.757 li
260.084 123.688 li
260.314 123.486 li
261.76 115.987 li
261.611 115.785 li
260.747 115.717 li
260.747 115.203 li
267.029 115.203 li
cp
f
269.702 117.758 mo
269.459 119.055 li
270.716 118.067 271.377 117.743 272.121 117.743 cv
272.77 117.743 273.215 118.189 273.215 118.812 cv
273.215 119.108 273.175 119.352 273.025 120.041 cv
272.566 122.135 li
272.459 122.621 272.418 122.878 272.418 123.026 cv
272.418 123.445 272.674 123.688 273.107 123.688 cv
273.31 123.688 273.539 123.648 273.864 123.567 cv
273.864 123.945 li
273.013 124.27 272.635 124.364 272.189 124.364 cv
271.58 124.364 271.256 124.08 271.256 123.54 cv
271.256 123.351 271.283 123.135 271.364 122.811 cv
271.945 120.312 li
272.025 119.973 272.066 119.648 272.066 119.419 cv
272.066 118.864 271.838 118.582 271.391 118.582 cv
270.837 118.582 270.201 118.919 269.338 119.703 cv
268.499 124.27 li
267.351 124.27 li
268.473 118.744 li
267.365 118.541 li
267.365 118.203 li
269.364 117.758 li
269.702 117.758 li
cp
f
278.63 118.312 mo
278.44 118.284 278.359 118.271 278.265 118.271 cv
276.981 118.271 275.807 119.986 275.807 121.892 cv
275.807 122.973 276.225 123.621 276.914 123.621 cv
277.495 123.621 278.035 123.27 278.684 122.473 cv
279.278 119.082 li
278.63 118.312 li
cp
281.183 114.325 mo
279.738 122.418 li
279.684 122.757 279.657 122.959 279.657 123.161 cv
279.657 123.527 279.846 123.702 280.225 123.702 cv
280.467 123.702 280.684 123.676 281.13 123.567 cv
281.13 123.973 li
280.346 124.242 279.859 124.364 279.441 124.364 cv
278.847 124.364 278.563 124.039 278.563 123.378 cv
278.563 123.297 278.563 123.257 278.576 123.135 cv
277.914 123.973 277.212 124.391 276.455 124.391 cv
275.361 124.391 274.698 123.473 274.698 121.986 cv
274.698 120.622 275.212 119.46 276.157 118.636 cv
276.819 118.055 277.631 117.743 278.413 117.743 cv
278.792 117.743 279.09 117.797 279.482 117.934 cv
279.954 115.217 li
278.766 115.109 li
278.766 114.73 li
280.832 114.325 li
281.183 114.325 li
cp
f
284.599 118.5 mo
284.437 118.393 284.329 118.352 284.166 118.352 cv
283.64 118.352 283.234 118.757 283.234 119.257 cv
283.234 119.676 283.383 119.864 284.248 120.527 cv
284.937 121.055 285.031 121.135 285.233 121.352 cv
285.491 121.621 285.612 121.945 285.612 122.324 cv
285.612 123.527 284.572 124.391 283.112 124.391 cv
282.045 124.391 281.343 123.919 281.343 123.216 cv
281.343 122.797 281.626 122.5 282.033 122.5 cv
282.221 122.5 282.343 122.554 282.627 122.757 cv
282.384 123.432 li
282.654 123.77 282.938 123.905 283.369 123.905 cv
284.099 123.905 284.586 123.459 284.586 122.797 cv
284.586 122.338 284.383 122.054 283.653 121.5 cv
282.938 120.96 282.896 120.919 282.693 120.676 cv
282.479 120.433 282.369 120.121 282.369 119.784 cv
282.369 118.676 283.424 117.743 284.681 117.743 cv
285.437 117.743 285.95 118.095 285.95 118.595 cv
285.95 118.986 285.666 119.23 285.166 119.283 cv
284.599 118.5 li
cp
f
0.5 lw
0 lc
0 lj
4 ml
[] 0 dsh
true sadj
27 186 mo
0 186 li
/0 
<<
/Name (All)
/CSA /0 get_csa_by_name
/MappedCSA /0 /CSA get_res
/TintMethod /Subtractive
/TintProc null
/NComponents 4 
/Components [ 0.74902 0.678431 0.670588 0.901961 ] 
>>
/CSD add_res
1 /0 /CSD get_res sepcs
1 sep
@
36 195 mo
36 222 li
@
27 36 mo
0 36 li
@
36 27 mo
36 0 li
@
345 36 mo
372 36 li
@
336 27 mo
336 0 li
@
345 186 mo
372 186 li
@
336 195 mo
336 222 li
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/CSD [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 13.0%%AI8_CreatorVersion: 13.0.0%%For: (Bart O'Dell) ()%%Title: (SAFE_H_4C.eps)%%CreationDate: 7/8/08 10:14 PM%AI9_DataStream%Gb"-6HZL/cOs'`1l9"W&NgP[\M-G4*eTg*ufM-C(mc6ls4M.r)ET*Q>b2Sj#*CYt.qrrV+"AmY!ltXWX]BNcrHt3=-+H]4U$]-ON%=PeJ9I=688j7;W1Ip0K=d4Sb4EFFi0(tV_oI.=tSrd+Bh=NDHc-l1aQ2)Tb?/fk0EHuaH$iTB_)iS47AMp(k`=*N8?p[A-h=T*8h%]D1[h8,2.mnK4+Lf69G4QIk:95?2&1s!<&BG'/4YG'AFWrikUHC4mK%rURkVp$8eGh#),:s/1RS,D+bGeDfBB6W;>]rm'H:gg468%G^]B>[!DKD0/rCjHi0Q4Spl03q="BTLQ358j6E]FpckeimiUt8W.@/bC4)%N#N':&pqsS]?[qgpf;FO/]>a&r:uVFYi"3/P`?2'E%j($FKL-G>A)_+K;YpaVQY^Z*L_SJQr@)#=H6-#!(hpiLsCg-99rDJEZKjVFFF:ju<cbEfcGkM'prqta?me6\[;6Y.lp[72ArhoKM%=Vdq"L$ruL)NWeA)CGn#IWp)/meZk?P3*KKVuPgVQku?6(E>>BUP0em7=7)T[$<c>QiFS,r:s,BeJD;r%sRL"npGk4Fhn`>I/i^$%lG$cm>Rbo`2+.E?iVN-EDmrdYcs<+&NiRSNp\OG!\s;QP?(^.&dX3dhq)]Dfmem()b6K0@]B]u`N'AoJ>!<!CH?oM5jZQNB^>PK)%Qabl.r>YG'Kl`%ckAYBpW7h&:kNp'moTE$(RNSdioLd$g@Op)c2NI+b>9LFom]V)P])C(cn!bO=Wa!+ATf]PcgG2e.q>TZ%-Ha=\%>5lN@e/&'GrQj:($p6XWhT@N[Q)q^BmD-)Xonm,Gh-3u@\*$hC5%C;V\:?MfYlmt84ZS!OLBV6.^\D0&s'.+)H,-gc_j>H>4\#A+%FngBm;Q+[3dlI?U3W.Aerq,OcCNHTpYuH\W=,^627P#;7fpT;%F]bO,YY5:/=M*n'<7bP-r!gDNWRV>KX]APF[DG^?.kGabL7b'.%`JCqJcLCG31TnVYk5KCNpl52#f$r$:X1lC<=:3*%hm!lU8OppqiJ?tbQGF0lG9")$K'VE`n2pW',Jrp%''"gQ`Y%0R*&mjb.#nVk%ak5\K@jrB6I`F3VB*cu^_4EHC)2jG"r6@0FjP5+M484`lN]kuSdLuJ3V/UhW*F%M@jAGM]4Ce."9B#YfL)DLH(WV<gnLkk&cTcmA%Sg+BQ@jrB>IcjjE.Ug!\qsfY<"5%[k+.Y4U+(H<a1#<Tt4EBjQp72$!n)]jX^:8iF@2U&U;C7D6C\+M#;]Hm.a&5Ug3'P=gf>[2\%#"MaCTp2ZpLG?hf@-Uc2<a&@8_k&Z\0J2M"coG[MF70t3r*IA^p0;5ua2WPJ;YkQSSa5n1r5Ch^Q-%P"F3_;S(=)-%kr5ehY#BbB%X#7(3`D`X^VJ`7-9Rg/+du^a)4NiWD4:g'h`?a$[f[.?IJ+^M10%VqWVD%kh>g^WZ[JWVqa^<orht\XL<F:EpOSk<WRYLjf5P_?s%q<tcBGIR-cI*A5DTDZ*%o&'6jIoTjGS1l5gjKI$2r]C/@Y<%(d5KC=Pml[fO\,O?2@=6Y0HoO2J6[\=s*G4GE#sVYOqTuXa3>q^>%gn(&nn322&LO,6c6P!6E`!%auIkBVFfMXm`IYNkU<F9-\bt:UNJ*-hnCb:'Q:\\Q)oXm4nW4(mIYL"=\kCMFIZd;#X^:!_L53[*'%p,(<SG9=^anY\OdrY2J#hmb?5FEN2]EQ#G^`Gq738aiS^FR:?7W9bHdOg3J@CsVp`PM53.m&<-bYZ-TF>Fe#p-e&6GQ<]<u0k/1%%W>4F0GoejB03dICSXhISY]ZV)*]?>TD[Y2A@`lMhWMMj)Ki7I5m-GQj7)5Cd[J?B?DF6#'=6m++r!c9%J7?e@LY*)%i$XI&qr6kB%9<(;HOEmb0N(p=W_H&qEp=Ml=%BE_8s5P&P)LtHG-2&@+CuO3d5u/a)B<8m$cT$Q>_'o,WoK</6IGs(P'5X`Bph9`rL[EZaB,ekq%f^egq:[BV*^sNuc7s*D:;]^Dr*!j`-M9t3pNa&"]/9uW_,K.;`cTCDZ%K-dVnlVqGpc#!bVM-EKT<V!5+?\j=A/NU9R[k2>&'n@!%P"SZE?tCCgo\1!_@SC9K*$P"_a&<Y+H,cclD"5FrR6o2&_K#EJFRFZ76Qb'=!Q6Sa#(Ii*O5&fM5B/O[phkHqp0;D'msq_Zf"a0U%O4:KNO+V-7N9Ipl'nG1](@ZMa\8@RY%@#;lg0Yq*V%K(La1pTcR5.+Lhm%*Y"o=cL-iU7?K'u1CW?q=P=UJqQ+.ADR1]A@uC`W6c%H]B=;WXufFjUkccO.4V)<nAj"o'/WoXSbRLf2[_b+tJ19+%P=H`>l:qL5@t\NQdNGTtTL[p^I$n<8V^LE(%>CR!P%#\CXt)5<2*6%G%T'2)hZgfZnbh*5P8s_B77qoM5u;1Z)epm"1HITlqDbI`cK3O$),TMYBn,ImpWf1(rJ="B:(kkp!CjupCe:;T85B(NA*[=%pNL(%j4RgXcL]*6ETJD++kCn@Gn.1aY&jMHq&Fk'36*(CjA4,V9,R0L'-%h'SZ.Q^SuGrK@(s]aJA6mj.MZ@u*&YG65A/8r0WpI$E@5tO%pDpCC^q&BVCV#Y#fI,]i"e:r\C!nSQKu/c^Ve<S'CUme^s08,>N&?i'GWsDV`XPj7s!Q>_C&gBdJ,"t9JEU7:JU_E;=O/jEW"&]E%`0$m4[&n@<fU09Q%tA>pB>b`dnO($FTCR?PT2bN;C$iE!>0QBps.FStQ;<<pid@7*bE`*If!&rj8K)c\1ZUTdrr\F`1p1!6jU!=(%P@[2'^Z!LEj[HsgnWtsmMdN"2^.)<2s0fMN5mu1h[;pYAIs6>8,Cc#.Vb^W)5(%Uqjr=0oqlfI]o[PN3;6$haPP4llY<TfmJ%i\p%nEqs=DsjVi*5B5biH"JUq8:t+o(qqNp%ps+"NGpD\->3*?N&oI@7TK^n,E)qHf*YSU$Th=2a@5lji%=$(-qldeVC2\bO#bP\j3mS%rF1'PiVhNMGB\8_WIOl-;E"bQ:b9@'n+`1ugjX=fQsP9+'H"RKq#4^jh?'N4^B$ORkLN_tf@O(ghOhQ0HZ_(:Js"C.S+s<1??UL?%IXddOe"?JX!a5MCo>BDWebbh0N<SCtoD=<DMsJPf^V#'+]\2/qalT#(qjRY("?jHsa6!!M]:tJqEdmn3naGZ8miH6_Vs2IVm;#fI%[%9&lmr%!UB4^VumJ4@elL)RE1Fi38!Z>@;hk&^Y#bIJQp&jppr2e5-(mZ'LhZI@>=l5,RQ!#YV$c_u)qt&E@^f19?pqu!,DpN>S%?S?jBd%^>G2$R=8$bKNTY5Yd(f*[m%m+0+_Q`r>h\Ds/<B+_QlJ*,[oBBBVU%Pg8=S?>VRVoP\U4RHj()Ge8MLW=s2@npfUVE-_#%3<@rYH#a<hGLE'>YhK;*r/!M?-O(h6OO@4/19X_OG`Gk]WWeA:_@ot!j]6P9huOj;H+H,;Yfq-u4C33SG1jYEQXT-FDJA&ab8PQ2%;gd3el?IT%HjmV14O%k.%`eS$_./PNES[0oVn8.1<HZLQR&l'[f5qVuD%D]nChL<t8)KoH-gdp>@QSGY[VaL52Se?W#P*gflaEtq%B2o'-ib:NKB-kleSn!(-H!5M4HLr`7j6:RSfOuf1B'?5i$"rn#dW6VYMOl+Wa7><1&ZD1mOU'`>_)MAanqc3nO-,3V'E3r^;gD.%%=jaR?#7t(T2aWmMj_<r;Z05EebL'h]1%`uj!;?E"l:jN5In"lVI6r;`P%8X^XFL_>S$$Ip#*9b]rN<D*@iCGsBhDD_#p#^&&u$CT%[O,7N&GD+j?O\1"'1rZViKT)1`1_?2]LW-F1kZd5`2Ph</%5Z0l<NWna#]0#eeqOne4i^)$Ae<+G.+df9P]1K4)6>S]"0mXVre*f%HteU8B3Nd"F9b'j1Y/3^'36&)&Q#icC4XkQ,Qg:MZsBH;o7$fHpu;244Y5K^_pb7\$jtpJYGs7i+9-<U^?R^El%;rJlm&G0X&,4H%ZC=?P1V9&B_6:TRn%67YL<*c\;57NDFe`1K:k:M\j;k/kR6bVl"b_.d>Qb0fJAr)G\HK:2!.)t-%B-^cEt>dA0F'2R`A,RCn.rCk%<M1hk0O<87g)4<;>F<]GR+<!Gn#8AN3]/VQ%]2Di#rFmS*ROcuB]B5/j:%?5!Le!n3s!r9'2Son#/XOEJXrOR%KpEqn2q7i"@?pU%+HM(-=%*$AYK06q(`Ep&7>'XZkl?!b4NLP-WPd5:b"sT+Xc?IQ]]9[B_aE!@l`bNi3clBi?-2jV",[3"K&D27_*a)6W9qL^RH(j4%3%u<jXr![!S]Ghba"fIkgf^)lZ,,\;Xst?\:@?d(FHU'_4JZ?[CNG-jj.:"`_MNL7CUM01#/#_GO$Ea;#L&L$0`c&.(-5$W96h=m%0A7r*HcLF!,Z["LBWEj_4(P_J:MEDR[PD`;;;5(DXj(Uug9`be<_<22aq^J):h&YdAfcYd6T:"/n_M6"833\+/:9Ckq./f\$aaiF%2(O`_LNdAH#?^uPoo(D)f/0Vp8sh=am(q*k>MRGma7trUktl6T>A$*"h.P=!lrk6L[@(Nc/T!:q'uc)?7WD@9-fLugTh&<nJYe$t%+f5rT-+3e\'d67JQB@K\QME]4E1&;D4?kR?.NsmNW&l%CnP_.Tf.bW-7ZL-98R$G3DAXJM0X=**r2TO2^=oqm\<Fc"3MtIMPK%8d%Dcg0jN&\[QqN*qgO166\=L:k6eHO1&T^D:"<QUO'"\k&#(P3kJDA&"[<5pKdK9@N7S7"(KadE?6'+0n.><<2,K-/ZrI+U?8c5_PX%AXRVKC*6^^*5En1!SdBWkSJ+>78S'dJoM1UJQUX[r1]`sd<c;Bi^#l[^ma7!(3Q001-V0)MQ%>hF_<dS0F3bdiTV0HTa9Q#&Q!Y7%>G#(">>N(Wd3%?$+Dce^f)!Ec0H6'He$[\i%9!k>Q/i)_hhX^)=ES&7+hb1lm:k[kWZ6^b0i/f)#5!apfSIWo)a(F:,9&_MW?W?C%ZC)rl34b<^&edbjE"qGoCu!+/%5D\kX;]ch@?u$^-B2igaQAFtbW+if@`d9&7T[4cd8SQYC)9$ZMJQA]U.8!VUT4]IFIfo^7urtY%F,#Lj4B.NBl,En#If&+'h=]mhY5gPs0"'RG+2EbQ8cPo((O!+IWaqFgXK6!$69FV9N[dhp<if[<[&^'#P_X"K/Tg(d!N[b]0Y=2;%*Z&9f(;uC,$kI$t.Y?k<K*W/R80-^$o"V@((Wq4bd/Hgu!I^3t?`iYn];Y_5W(o9#QJ9nJqq+g^U=lEaDg=\F<;f%.;Vn:Kks#9h%O,]?>W+;[bP#/S"ZR2,#ajWiF6NgSuMg@^"+M2>T[T'W6*`ms@'cCD17E731.geBS"Zg%(BEgo;CBH,j"\&`U'NcFG@pjc$eseIY%h$n*>XfKO7)9?(;:dA@mlkA#-0[^VZ:=2$0;P6=l&m296TgW;&Y\O7Y##5U9Gm00&"PE>!1%=]O\@!V-["n1G<O`'IN[9a;\$*kh%I<p91$A3mukK(pe?or&k]s'L:_^9p=n.XG0c75!N%I>:!%'ot(hn]3m085s/#s6E=lo_2HZP/Wf)(YJ-bTLfSZ-s8-qY3>bSIpSb%@E:0X2W<g5nO(q`JfR(kc;LkK\3]I(C+@(/j(=+8;o-[=?3XL\:_Kc0-Q+.AUk]i?SK7(F!U-A2$1.`i9A%6[?opRTk(u]aKh^D+%+\&,b(,l3Q$D`1e8->dR-V($?;M%Cg7F^6T5`1*c6)$?^\j1_u[AW=Ra1Z-=HT8a?d$mc;II]41;>Tpp7K0U3"+79r22`2$T@>H@%@X=L8[-?i'F.=:L;jXetXHJ0YP12=;cM/hJQ?Fa-3IWI*j]%i[@eu!l!,Q2@JnLO3DRtNQZ-p[aD/=BTd8l<Lg79*u1Sh=s.;fgd%'i25,MAs[CkC6$[8#VK;c8CN+>pm`9Z(C#D9j3;W.Vr@`B40ETaE=/b\T$&P67:H_'"t,!!SA*Wk+^b3$<:^*&>mkLSL'J8llu$1%A3*U`em\'"=ZMn8P7>[VA'2hM`FV*(?G7KNbDef]rM[ZG]*hTBZN3#82?tZ#qm4>W:3V1;qJih:l+_@CIoq(UGa=!FR%I!#3U6lF%b7D:/Rh$^jR:9+b)+lD'aTmLKMO8YZh^$Z]BsUJGqa?KS<XhE1=N6Zbq:BA^me3U.[d;@1_.d2";L<K\S.)$i-VCKI<25&q:qZ'"%>#eAPZ6F&V+$]=LOb^lZWfY;VE`k1JUQ%i\`DcG_\+3[>GZGb*P4>P=g`$q)L<nO_%h`=DM!S\"4DS<S3bTp^55)2cYO=;K_a%oS%k^/^ilThlh,RZma>-:TrXdTR%U#;_CBe:cMSeSW7bUuIi,=S^I9oUu4;U`KQWG.nOZ)`a=[8YK&8i9Y7[?d%7<nBrtNE*DbBd:$f%'$[Q.h+j(UP5`H>>ZPW;M(;T\-(T'=@<ISF\r&=*eEIqV.g6:!C.Pg$m>gkO,ot7)6Zo?jOf#%f*bp%^_O]'K&1^ZU;"8<M`!o5D%,lMXM3oC;J_4?]88:6!\61Rj8<_1%<U`5K>IF_An,a-i2*p340%I!MYgIC$rdMMe!*XcS*gmg6:d&KQe=WTA5N>o84ZW8q+=!cFZ%Likt_KgifcPr=Ik@EL+/[If8S/M/9*-9FkpcZSM@H<XB4CVnGid#??53`RY(@L'LP#sOL4C!XYhoGGNlT[\4VW%l\/VSl(8%ml(8%3\77L1CXgBY[RYJqV+Dd)enaq]m<1c\o4>@Gb'.K]3a*i-eL9uH`B[&pB8ZPZ@G-5W,GVc8"XP./jK.TZ)N%;n)*eHqnSXC[aW\=%pE$f]lp`l%<'/gO\'ifoNI83J5Y'?pOPWIdRmMWe'4Wo!fFDEt69XX9g#t.IHOL?*6dnQ_p`\d\.YXMh%3T7mpj":4+9P!PnZo3Y%/YoV*&5UR5OO>7LQp_:V87<:5$HktS)]9#JcN]PK,0<:e0p>RjV*o,GKsa>9-#,/3Ru(6A;J`]Y:6%\C8N;![#]_:ij0dN9:*i5s%,/Y]P]TGHu0D6(ir'm0u)7^'!Z9R$FeXtB,e?63SAZM?CMHg`lD-Pa=fO=KR%JHnu(9TA2f;OsMB]g:;])&k<^9t#KGF_dVjAfB+%e?3<5@MHlC,MC((EJbmM%YCWCQ/QVgX$?<*`!5bRcf$dlD<lW"&cJaoqpHU&@q1h)a*"Zs5mFEU<?'0h7<&2Z;PFFT-oEg/c)RS.%[3MOO;eTgKd*@Z8G'5pR,?2dHct*sZ;/^]kk3lk59q:1m:1aW!\m!0eKQV.6&h!/q1ICuK)1c=MdY\U9_N<.;<4@^=KRj?Z<M[S+%e[VErD(m?%l<Iaq@#_<=e@I7MP-^.YZp,'1fos<eL.6q-,[O3O4,ah4OnZZ\:e?=2BmJnIeFZ+C<^"pL#^KLJoc__l9ApqgrF%^?%\>p5,2PZreKbZq,4aL]G-LOtNQ3`Lg=;#H]D%Set,7H,69&*+oVcAedq_j;)NGK5I=)op4BV3A3Z8#S:3e8XkYBj0NFKUk2[%;+O%fdkJY;m'o[\V[:%4,_Lln4R8Dk@dk2O,tFZNo%l8aH:;lcYV5g$oD54_77c2=cgaH]3@pK&2K&d+\8U!?`k3m*]Y@K,5QOg8I=q;%i*e5=ojCa]8)q0*<%Sm2+19Dd@XNBu`UA'\CH`dC@plg6q:+/U\/s5\pTPSX3^i#KTsO&,44[dd>Ng-<]&F`/C[C$k>rso\`f<rd%fc)u!6YC?$lj]N!TsH\"p4glLd+K@!HUDFakj/bL]qMbkFS:I7hU'pp3dX5,Ds6.=ppkg4qqp>u%@t2+ZT!""L<eZ&fc)u!6[s=:%:ub%DT`?\U1R%$E-?AZ+jm"t%A8Fo$R#`[f)p?Kpm4]m_fo$9@5!DnZ!^q&%SYeN*X5rt9QAgXbrmSf#l3?l06_\-.X%@Tfc;LC[%'1o%/&dKR/Xl:[D`BY!R>o3oo>,3T^:\)70e@851g]gbrO=g>HXfWiEq*:A&Us=skgTF)<gSE255.nQP7<;[7V+Sc8m]WMA1,c-Q%&$TtKCGQa+O$C?BIX8[WO0@`BIBhta/:F,C,?h\Ib-,>HAkK04K%251F%]#ABi-DjPhGEQZXoCkY\[;ic#hulA>pVH7l</@/Sh'4%VbGiK]Ogi9dj00D7-9jm_tEV!mneX4`?0B=MV%T#p@V5(5?@%_q4f%pO1rXVf6diAK;J9%B"K.kGE1Cpa+FH5_>m'<rm_3#s-QT3%b^[CiW36E^q9b-V,L6"B.:oN=H"BH#b7oeEEb_!t\I9$Ie^#ooP.j-#kujlrQ(F3!3Rt%5BDV+>N[6a`Qo&G=NMQD.PFS=!;Jl&W%:.fObE.19`a/\U7oR)sRcg:>K/l1"V@Za,PP"=^,>%Ic7S3ErH*]6V3[?`cZ'o6TMD:J9T;/7VUElP%mQniF*e8LiS8#O*?V!]0L%JF+VDLnNI`jaK9/C`nCG,\CPV'XeYWO[Cuq%mgc\$"AQ5WZFn,W+(u>[ZO!a%4PfCM7d&Y^CBnZ?$s9ur+4DZ&(i,`dkM[&\-$h9%)Jq;TD(XK[4OrT8ZjkDsRj-@@l2\_pWNeFjnOU(8BXMTZou0WSZc9=_Bqh[[nO+(1n/"p^lCl/FR%k,q3$p(KWqV?j:)K==69fn_%[ckYDoTA@5)?_\PdRrk:\@2ka8tVpgGF6<IW^3LKHH.r;214#AIB;]g/iW81NSU($Ap*LuS<9$$DodlD%;sPVOr.,n7o'H>23:gT%p-ERFC/RT<=%NJGV5?qQgGRKN?i+$XLm>'G:@e"'\L'j"5a!XNRS'a@J;;K7H#MTI]8u=Im<YeV_VcFA9D<GBdea=pQ)hr?&=/Q?%I:n]qZ6,+&(;2I9.3#<RZ`UNmRP@X9a6Y1pS.K2?_)X1u`c,<O*Ol?;K:pq57Ep#*Ce:`tKX]'+TFM'2M,b:^Ts3%5PRDK1-ST+W%H'%VWh^Pnr7[[[=p\Kk)jh1tHF$cVuZUF=UmCn[`PdJ&e%s]V5C[k,'4FA97MPMkNqFYg$bau5ni4I^Gmj8^*Z?]<Q.Rl:G`ghV:%F[o9;_lS_LgsV(j6R=W/j*oK6Ha\5HJ7BfM)hs+crcbI<BcEHZ=4l>t_YsjFgU\3#g-oYtlbSB>kXDRgUaI7(lVc8;,,ZkCGe$FE%DX]3pp8-<5TqX2Xp8,mF`0_gg^'*(E7$L$n^u7"NR*(`nPhU8S?"d-p:SY@9r&@R*5>WWQ^$8lBHB2)#*D\9#lM9&Q]2jpRQ9H07%_s<3+\3:=;^Y5CpO"/,0V,=B@O)h?hcpt!$h-a$]H3WJ*.8e]5b*t!L'lCKknSc=g-oGtDN.ELSi93qYEpUQlh/o['=!)@m)&IOu%O13r(Rr56e\)!"4DQ8c,h2IP3eP#Y-VCIUUL#/$3h=AQ]HAX4;g$MuYpO2=4T6e\YhXIM\D-eje1qaI0'=kPM'&6M,inR;Kn$;jk%QJh3n,On;3hgpG:JC6W8@T3V'W5:2kG6I69nEl6a.(>E8Y\5#4IBG#'0;,rcnf*A;[JO>]l1+IA&@d5qJIlo+QmaKo@it\R\"p*B%MKWg6ZotCiYe^8gcY%(`jPuhH!'$PES8ESPdQoVYN8);%NsDPc8q-WQ'7*G*Su-bdip$6;jE`_4QK_PoF-<-DCkjET&TtD4OZfEW%QmB\2&m8pY[I%)!66<.E4iP[eTgqbNjE<nJ=QC]gD7Ts`ft.Kc\-8^Tj;O814S"lBSCYKZ;n;;5']EE`oN>1!oW]slAV4K+jXhRD%iuDJgWf]q<<g2n?)n,RB^X)MNmmC77+1[cjf5UC;96fL^Kp>h9?aq>]G%AiuCQ!@Q_2b\LiEAr+[2N>NV;ZC;F?!O#`<r`u(T=F]%p!rm5g>nNE>)ciaj9r_(N\f6D.C$n+B]F1QZq;/'oWKR`QP-jV6_PG.f[\VS3tn0\@q%@P2jC0*/7W<!>K(@nY#Vi@_4&>X'WOa#%7Y/,P.ReV$V.k03gClbL%0,,@gu+ka\5u0b-9(^fDc!&FS/XT7#(,<l^Y89`2`M*-PYh)O95R?9!u]?fEthju(+("Y^s@mGKjAGU%AYRSQ^cM+(;,i1&eY`eP7kaYk[Gn)e/a?3>7GSK4GVmcY4iZTGLmD?mbBVOZ=B+FKC]:>*0q"Laq-+6GXOcAbf:t$TiKqI/b9H:n%>>3RLo[IBeZpb8M\@_$N&>.CC])FO_WMtbHktac/"b#Hu=>-pRGj`VbQ3]*_RrMWkZg1&/A1Wo;Yp-4K+2g>i4$cNZcA'W*Z,oq*%dp)+G*mW&dlK),r797c)N8XMB]oeNOVoc6H<pc$%ou41^d-$FIgY-uJ[1."i)lDR5:W1jbO5AX"iT@Snl1k+k3sT9%ppB2rPN4)1%6QS%8lt@4bCn+^@m1%Hm@n)Ys`,[VN6!:[k%'?.49W<>-d(UC)[&]FWQ+eh,>?Jth;QUg?$F=DSD&J^1HWHK)IC'oNgX;`H0pAUT%VJdsOa13IB9N@HR9=%<+2@\Y3bN>4/TIJ-`A3d7BH:UaffiXH_W-q$JEMp/\DL0o,=2"Kpp%II`Y'O2>b"jln-:?n'osqE&EbM6g%?ZhD_[,1AR[X&a51f[S;GSTS2.*#2/6F@R7Q57NVQ/G,kQ0lq#=fJfLj'Cpp2lR<.#V!q@OF!1Dp;^&_%aC8KB?4/&F(M`p(,-mc%i3BeBC>#_C"n[EKE_(`#Xu)uk1.;8#_6Tdh!"K&a@^(gPr^Yjq]'+L%bs_lni+G]6Zh[`sJbQ2k2;9FRfq^`Aq7t#"XEiPVOA/Ab%2`5]l>18eGSFCdiJ-TgieXBoUj4TG_O*)_9VqQB],9Pj2%@M9iF+ZP4GT_abOTPKsHc_pX+*ft6jZ*g\`Fp^TMn4DN*1uMb@do?U%W:ms[d7gRJ3.MAu&3*l$TDI8R+.ZZsP744]Gs`R+4ZC>oZ)-e&4.h3IA07SVqWcN?6h^[tX'H3&oA5T?q/2)9n"8ts:Nl!5/j7_g%6_/N@_(b1Y;k..@"'_SB<&4I3=l;S,GK'ar.42%S,E<f:#Gq`I2BU2k6P:d2OP92;NXehIPn)rH\pgOQrpY#m@=XtqL]8?QYfn-#%B$;6^1-%^Yk.s'C%p"iI7'=QI(-5$A:c3qbFmPS`Hau)YbaW2#bq^1ta!-RNU/F-pMi(\UGq]>)YZc[e`G+QuMlT8rBjYdn;049S%aZdpek#(>%L8dPlhgM#LUk;:W_KT'1ajK-e/ru$QdotWHZ@5b#CD$@jd?6qC(":JucD(jcG;hLBRe`7)Bh;I3cF;(?aV?h]Y(^:c%RlU2pdP`=PflW0%o[GV3:Xqh[Z;>K9a-OpfVF'kLA8D:\WcSU6OX%O7,Z`mC=kV1YMq.$b76\$PM&9A[f[\Fiqo?6B#BXG_D/;!t%QACZ1'd(_&Rs#-_10?`/m&RX3WA]pcX2t8$li'mMs&u6u8X^PhEe3o<:H?OKUjeJbM$fhZE92O7dpq3f+,UFbM8qjGZ5Vj7"GRR@%+099d2.7ss4_gBQ^p[Bf+DE`fpO9SdP+bZHVUh7[&:`Y.=NYa%\:l"G"l6-nbLs;fU+),j%F4H'G@Z(Pdj@bi5cm+B6=j*\^jHD'%:C&jK*fmD"eu)R,lrA(R&HmDb)hcJ?I_%7^49`&'<!S;0W,!?L,$$59$T^[Q:H]7[YAA*'>5:rl-Upo!qL4Yt4u&PQOKY9#=&gIq%)]R(b=6YZ[.BJgAGW&n8(<?-TWn>`hZLNn19Jab@4I0(4j-!$:jV@V,dn3W$?EH$JB]:@!I@E(+2/I9%Z$N^tGa$g*7r.QYNm<ZV%dd=#H7NV0qN-]lO,$AmBkqe,mms0?(+SF1O@p<"D:6"mUeK7F-X<Hn^>E!TC0=Tnjo1<s.AXCcrq.B.*<P<c&V1WG5+UA[JSu!ki%PJ+^WG4LcaN1]c122%Ytpt9g"=YHF4AYeQ:#O,a\FPnWQO7")M7U'^l8NS4-g;m^VC>,BMlr)S]"3Y17Vae<1eVN*kK86/@/]O=e%_"Xj!K'Ggg*KCBTQ'i,_l%om?Eu_>o335S9lf*/&h)(>9FG%K,ORhdF_6#?'*A8!CZJ!:d!;\+Qg#ERK%G*W5F&s>=*Tih.944G8%Z.Q$!XH]Bp'k/,JD2qj+@drl/mk0mh/M3l^2SB51.HC,hl$.6.:QtH@F,^3B^4^^EKQk.`GCpQV^4^^EKQk.`GJ8`S^4^^EKQk.`%p[J?d4/sbT9$;SgmjC7D2U.TXIR<,\HjT8^KtRsQqY:c\q%DQ['&NEshHccL'&MNK_/3EFU].r6p">Z9k=^'_96fVmGiq_Ek=^'_%96fVmG^jXun:o=`"9RC&OE)S,\jA;<'3le_h_S.misq-jDI+RhTc1osoTI]<BkgQ.Jg.l.$&1H9J7K_HM#[`=(?Jb)MX-/F7PAWc%.0r^YbB"r#*n3F?m1n^tGq'Bu7&"M#Y"!So,5M4AqYcNZr;A^TWq@)(jdia,T5dY5o&s'e>^Dl&G\_ahp=*qT+4[9c4r"M.>H6QA%<pS6k7QWW6`!G=$T0bPJKMrWM*O8bL'W"IV=nQH@kaWmWWI!(3pFXNZS__"$F(#j#:Rg1[UM$J`#=MR-1c(ql5%!T=a%4pbC6U@)%&X)>k7*\=Y\G*)Y_F46RY_`eB*65*=CTb")0bVR!Y1!g_crTHneSfi"D2/d<+6.WlgbuCCiHqSAHGiulNVOnJL3AMF***`*%`bbS%*f2qZeq4J0#FC&IA,13gQqCKoMSFW9d11;$H;#MXMXo*V-M7"gnfmO:jZcHp)Eei9clFC,8YI=Sj]5S2TM8j_)b$B6ddC++5/"!8%F/#GJZ`;FOC]2,]X;L+&#g4DV;;/[_/\BV2nl^1e%i"0+(L,=3f<=)@3IZ0omfoM$r!K0tda:NUBM8i72Fp-o1=1^@RFOdk-]CS\%A,G&3GcHamh,`5I(O`=?am.-VcRAIFM9XS,o[D^qq@qEpq5[!&P:E9"6.!YO$0`%IBUq)CkE2/J(-X2L<FZZgB)-'^ra`<*9Vl8K%L%M_5f%3DKW+o$8I[lC6eXie:5';nt_*A,U,iCPdE]%`9rcfmV&L"(+/FRBiE@(uLO,Gc_*SsA*W<T*?R)h#qGe3]i7+GKM6i%m&%ro6s21qsrJ`\F</ChqkB'!$"n6=3WJC9d;TBJKH0.9G(HV&ehpOHe*qkBE#P;Ya+PPe'^`W>iJBFR3]"qYA7'aeYQ1-(4;J=_4M$%T$4+Aq^sCYjSmZ`=F1O3h/?dD5O,bHXaGe^1p/?'nY*,_V*F\1<';"5-)4>CD3!GA3hc$j;/7/rWZEUi\t=(7mq0.5V[T8YC5kPY%+r[rhFRR=TR's1>afmQ8O32R:A!S:$Y,aO2,>fFPD*,BXXIn%/Z]p3EGIWcr2sT81/.O[tG?2qM[7&C\d:Jj'?Na0TapD++4Gi(U%C*XY/'i/]prnRE&#L?#7Wq^]a<j7](o_j]uaHW=jR"?9_Ua-Z9S%srH6e-ntheiU$Q\&nZX540?YtO&%a*ZDb>LOCdRBFt;+"''/%T4U5\<bIuc[7Tf20Jle+koEOdaFqtj@=:lUO*KBYlu_RNKl%LP$Yb)_M+N"R8_3Lc'_tn3?=NnBMO*9JU\"][JP_L5&k[5O;%hcd%gR$WBda<f`%F&\DcXo;*a*>MPLfN.PL'bZIdsl-sj"^^]c2fP\I^PIM]Uog!5KaM^WrH&;Y?S/VfHto_N&H"#XLS-ndqW(em"Dn"%[0*9FK;GKc5kb>K\&LP6+&mUZWRa>(;S>hQMQ9Uskj-/8:/a-*T#e-&r&t9RkQ.D9?)(_4UeXc"Q(4_T71ZXP>XG3:,$foMb40e;%$IZF,M%#R"TR(=PFO!F<F(gY3P6-Fp<(MXqkg0p(p;^L/]dZ$dp#rg:)_]ImI*fY)\4a0iU;,\Wl>AsgDEYLqRZj\0V/WbcWF\42%s&nJ^.jI;p8J>/PEmsWoF@*Ab1TD>a=>%8GPcC;U0'IM-M6&A8olW<9Y'ccr$ouEj"'T>:,I+4HU+<QQUKE+i6LL)Zp4OWVq9cBU%%SW3Z[s9<M\QWDj2`<A!YL:Z1]HaEW9X/[diU$J=BFlc0eZldQpfN.'q.V?_X`B+)X^I0:kNI+cJ^]X2Vtg?+i:uc;S:#3GT%-C$%1)@N]#4KTb%jSr<_>]RKSGLj.O'Quo()L:FL0)(8n3M#<M@AsmL,3-/1EWSie/+)de!!SJ7,q"XV&tg:W#EjaqKQHl*a%:b>u(G/%`=AD^e#gagWktp(NEQ4,Rees"ol"L.gSt\9n$AEsh))_r%M#U=8KW0E#VeE<WooF6?OslO1!NgV)!9=@a@6b4Uka_Me9DW7TAM9/%G.E=/"#di+!sWZY+]ogbRGJi>K1/a4KBobb4c>e/m$m9`XS>@fMDgJt.0*Ot+#eis%/htl*h"bor8i7s/G!M"s0NT?;ATC`s,rOI%G\oilYL`.2fl395F3j5F/KW#G0p:F''KjTLZ,9LW8:@c:n8L5.1\REeH[P:%]r-A;NN%51j$>GU!M]Et-bX/h:IRL6^#up"FSr)4%CU^h=/U#KUPdO<0SNY9MX3DO>qU'81X*mT%R2AMn2KKtof(ohqYrgNHlTL$L@bdo$%Qji)MaW\Dj0ZTj9R4P;DY5(24950Ulatni%n#pUNY&8`:nY0D^jTj>fn*h"2T6u"bn8NZ&$_1u)p@@2ji(3tN/iA;i!%cFh+rkm[KS;.b^!tE^#(r$'#"J69[N?_5d,0>H5Q<\?%qHj7#H/TQH/cPAAer/,_s8-0^a.U\H![Q#C?34s<Y!,Z3^Kb[f6+?KpDm7+<8,2Kf5Jq[a\=bSPc-ECj4tDMFoo`K_Mo,IY[]SWc%@B-:C5>arM3cUYd5La-.C==3BfQHt<ACAtY-2`f5]ZjiL?joL5h\8<XPT2bP4_ss-mKT%L'\"?/[JhRr(pB,hR#)P7"KDe*@0se0%"AkKl\Fs)/r\-O&fM-:E9^SbjSmVEMn>gEL4Ucjsd.K[6/3Fbl3=pjHe+I'R[]`tFdV.YZcAZIuXD-EO,l@fAF6$'MDc_L$#>EqT%EgdVXe0;-22-B<!-&sZehfVFChkie>h*Jr7L_s?J'2jEj(c7P_&f9C<]jsrtiU7!'CIVsCYg&;EF^a29@)CN'`CmV&d2miGhVdW"%)nIqME]>@()eO!dm3@$I127@6"\]4;X*2L$,2P$m+!VRA9,EY:MbV&j@"1dY),U4TpmN=%e+>\S2.8/4NX+kW=rG2E<iBnTlh'5h%aDA*I$;`'aHnu=0C\orJ'WA^X)8=pkYCb;$i]I6uVRj5"V^'>t'"c-7GWu7gr@(Baa26d@oEX!c4(8`X#&>e84uBs-$0Kr1XRT8F%ad<<^O7V8^Id_V;mQ=MBlf7MTIGf@MjQ/r,H:n=O(lm=QoDKttfAjk^M_NL"YY2DR-rtZNb0ltP!IZ:sah7_=1n;.-`W#f!Jh#r'%KO#iU'Kkc[-4UeNFK&u7,1=NVL2Q8fbMaj*+]u)h#*Xl1g!C\G^-]G"RiK:VKC@1qDZ!<p#T\oOJW`i$/rHG;EFT8T(j2hL4]9b\%p=E[qM"DLW:6REO,4,&s8$Qo4!j1_[+mgIb-e@/'6f8l$(iiRj&Vcg"N-N?uCi$)2XdLmj3Q=b53'N>aaN#4g5ar$U0_QGDe!`6F%FhHj:N4Zfj[SYJ*^=0s"AJ5;<CKfVJ=astO:<)QS%(?pcg4rWD<$1O\Mu&H?^U1aS,eBVfB)e_2DPFoiCn5YPo^o$75s3pJBd'Q*%&WKD3Di-]ZpSotDM$D>H;:qi:[J$W:-=-&ogZWC@(p'Yd=%Kl:f%=b"#21Eg]W%'aUnZ=4[7P<^EHqsN,'B0D2rt6L+Dc/K*Z#Y?%M7]/Y$JD.DfHl8EFtnZ0$78-Q.3DD.FAoup2T]eTkHMW@'bl#69f9XdoX;+-Ci#^]0%?T1:^RdRGLuq4:"U9g+INoN!Ucg'mO*.V%jp_!dM'CmtAXt[m[`io5$5eXuB[%sYknm+[^)Ui_ht+>BPcYh$\$*bGnPSG1Q9SO/IsCuogIZ!\e,HVP(WZ%Fmlskqi9?Xh`XNnu%hK\!rkCDE>IA'@M,Y3]sqZ7U=3&7bI"o.0ZCb[6B-#hPY#&n><QFcf"g;DH7+2t6#oup1knU<aUNn3(.eAks4lJWZo%'qO^0kns9%\!c=6cj+4rd.4I-)JL5-23];(K+a1EXU,%;$Z<H>T^N;Hh-q[Ko.;XEITp<Oe;5Mpg"!g!(-q\:$uCn4MpYj:V!^PYklR8X[(@0o%,iBRD%gMm_8BZtpEIr`B2$jJqYXV^B!;`ss!>J\uA_oo@)A;dX%p%1;p_^qDdhK!t;/kn:6b'Z]0Z)!J#g6.sBo\kD/#aRO7:fsr%P`coHNOCfk]64S5Ii!eAXYHAgX$o'`(lVc.-J06&G%ZKnGqs1F.'p&)U<sT-OM8N4o'6G47KoOipJM4S\e)4Pb<7a+cWP[]MaS"[%a#ab3lN#Zr9b2jGDG17)+1*Td;?Z?,"/sObX2q(hW.>_;5,SiHL8GT6D6uDZq3s(YKk_J>JSW(9;5M'IUQ>s'D9fYan$'@6F4-ur%Tqe?4k$!VU$W=`J/")>$[LB;\EKAIQTg_S(FfV(59i.Jk&m>J,,7OXNW-+*.*Nb;2FX/1>VN!I8DqO&tgZa;UXcr&Q\@)b<ek0)s%7]!Rh@GWC5_\rie[Q8YcOnp4X]Jsn8C=@cm]!c'EZo$@SZoCEcF`mS[/>>#</'u5a5c<Bjf"/EnZa!M:)6I7"&;obrJcK#J.GlNu%!V4VB17JYB"3f,2C5mal)c@?sKjkT%,it0C[5,,i%DHVc]1gd-$$;`PMb+ZLHY!9[%0MJk'4O:FjEG`3)i=I#/^lV6ktU09.'E0s%ia,R,GQSj,A8](i-?>j]Mm2]X?s4KR-=?;kGU8!FM6T;&SV7du]A+`7#J&-XYr4q<Go\/jM<d4BK[a[ghgk>4]rhh5QsX"SG`(#g%6Xl+5$TBCXmb0Y$N&9+BQ+FnSICk?L,1m^$6#.D$j1_11+Gq<>d[O4_LVtk#<k"XFGKPV$i7(%_crf?Hef`p"Z,+j52Jd?)p,W1!%@Us]6^lf(Jlo/=7s6JYE%@RK:Oh3$fBVUcB+ZLn"=Y6&O!tBg4D3q]P)L)?cL\1^8]XGseL;g3XgS1_Sl]>.h:hU'kq?XOk/kpS1%d-n>%GS3WM"7Bd5cu7JmCoYW?S!s!a6(khT9t],qY?fV2U+?@s##3UlaTQG\8[HqOE-n=.Gp#l2am3=GZq1Llp+.Hk_a%S1Gi1!o%#V>0``[Z,(;ZpM_LHau5/UMKE8P[,#fuQ4i];(#C$W/g6U_9g%b(E5V^kPoT2\<XGG>kF<9\9FKJ`p[#L<d5dg*S.l%C^Rf8PKF_%-"4H]PmlD/$=a,Gg]8*c)he=mOVp[7h)apSm:R3%SoMpI4(Orhm+CUI^d^9iJ^`qIK<tK8?<Z/1LqFSW84hG(.d55^fW<InLSc8j%]=_j3%&#N%NagacXY^WlMEW(7oO_L[WSCqrgB''/PGoj<(4tq9Bqbr<\_X^YP5N=o,*m>AOsb.^.qntts0f`1``>A*c`NqAWsul(%;<6H>=g/NKCRl@kN2NH@a9qBT93mCk;gYA%Nd"Y0#3-A\#hgaG8;*bi9kke,.1sKiNCnj0,'O)8Pm^]I8I[ML<[f=SI[O:8V&mV&%kh6(q.FelES#36(Or!57Rn7<CX(6%/6V0QqL;HeSM6ZV(?[F0q-Z9*j%$^E%(nHfRMbTCJ'glUKbflT-.KGVMU-KHB,IE_Ke`buu%W,`5J(ukf`J?9b2_q[Ld01^`#'lo6!.22!,3jR?.RRc<[.)$_i%1MkQ59]1D]Y6(i7/OcG!NkG40.%GKP\fB;K"U=%V"Qh">7fEe%-^$Atc"n3X[mnmdOEW6oP??>uHAV.R"`kkC?nbEE3O5Q[;fq&?8mDajR375a0`X,>nm.u+!W&`[@l)jA7>T[j;U!Xud#e"L$-NaJ%Ou,YI93hN:<D6e%iNf%&T')nXM$/@3O^<c#kdpk1N)$gbUD1*sG$uLm:A#5t<k17dY>8PO4n9=n6*6Dh_!j_tS^abu;"od*lGGO.%@D!`!3`$^uLa%fm7&oE%#NQ2p<7rB0)/*3Sn$8`@f`jimX!;JGeK?\G?fR]YG22!gF!a`tJYCH"5kjsRFI`nl?GPq4A@U&Q>;Ha-%c_;O@+CYZXK<qD6M&Ys+qGFm6fSEPhZsgTI]2t.`ioS=eY(Q/g+BgL#?j=8aYg<ZYEEZ8,@Z[-;!k'&E<*d9^9=2fG&?H-ST%fEZ%qBcLnYuY_62Vj]$G,EjB#pYIjXcam'n?*XKM<V$\hT0/a6D_PR>AYL/*J@qi(4iG^Jn]Y6H_th'OJfZNE>tO#WWtUdMRYiBT1YTh%0/eDQnJ"sS/lafhEYWW,,7k]*8/0.F+p,*e-8[2u,.L4F'dX=/C0aB6+UL=<DKXEhYTaha"Go]_+S?o,9C/0E&o#1'fPFuK@kioI%@9GGp2+U)L=s7At2c'VAFc-](%880"2nG*LM$-Ssehbb[=<h"21b:m,Z<B,Kq6gj"FjC%j4YKs#-im?r;jR1#Kb9j++`6l\1f;A^%/?)NF=(\%/+(:igb%)F_feSFY4*gqIW9b+p:%hWkVp4!%?F'no4Tl+r9j9V]i4&gKoh'<_/d,>f.1dUp9qVPr_Y>9k]/CO%*#CkJ%<.tdd6?W?.\(!Hii`+G(!G1Lb`??b<:#YJB?XdHfRA7.R>27A/OM[pX!OS$S`.6!DeA;HlSMaH@bXMaPfK<.oc%\a;2-Gp`H6>(1%h6P+qPM.$[OgKpUjelQ\Ynh0oXVs$Y)S'-=D;%#ja&6m@bU#sp%3(&fPOYt*1F3+);h:h6P1kop+PhOdHi8QGq$r)occ.lhp&IK`%P01muB+<!IWlGr6?Qlq%V7,kkTO]'P0XGkOJbl>ZeuF]Qf1,'F[gCDNGl\eV";k*;TM:N!SI9.LJrJ4_.'$7&Dj]UEBCV),nf/KJ%m,$5?f1/Cfm1QhPJT6AH71/GjZCTKS5t%/ODIuS9M.YknQpOuban>^B1-&mN944ZtJ$u*kN%Rh4?Fsaun\08*M_Xfcg[.M4aYsO-%PZJd/D:3]%T[$a^`O%tiTYafj`]F44A/J/_o8#R,NT_$!/P?_hDA8Ua511&HfI:<d/IO1l-orhQW'#k.K@BZ@@BXkTh*Z[m]#>cj%\G5s9pO4@=iT]aqT&XdZ5EVTU<kY_#a5UX=+tR#A8\quUOo@L)HN?^R=N09f_(Q%$'GLUcMnMS<J5[]%4#dtS"bUOk\oa"%-@"er%Jcino%.-;N?kZ(h99Wh?qsT<'/IUVJG!$%H'P'?2>)^]R?pp;=qKa>;^]SJ9NKikDnUe0i1,JTt6+2QaQ<>K"Fgu2hYiA/H-.-O&%>sg<br\-<6ULfu,1:GmDN.TmlAnp11nIulI\@'h!g'/\H.iJ^#kSR`NM]l,l@M-"HD?.<4V6bF>$I:f6>=cLTFq@1S2sqJRlND$$%>@SdNjJl+^;hU:M6pT0^)-BCGTP:1\>dR%>!84SME$-^)F1H(W2UEobh6g.Dq$B?>X0j>[;$ep$JNUUKUs58gJG@\"-lS3eJ0ch8%6+VoD?lZX2#'RdPV5t,bE=`C\PURsj)n-2_*'2Ck$FU?gb;TN#E=cO@c#@&B40b2a8GiTu`tecKnrA(I@C1e&LR;$Ig8"aocT"=c%dnX$kI&W`o9117aU(9sheo6$K-9A9TH5HZG,+aA,]t"0N8886CU*=!sFTNhR'7lgaU\r?G7QHtX!3f$n?om7HaF,!TYNp">K"/.G%QEcEMY$/))G&;+up*9!D>ALhpH#gM;Y=CFK3UJI=*sid::/,Dr:$n)raSeP/]!g@&8-C^ZN0\*!)%X4`P"Yl^kXYLf2dgbP0gN&=%[[.%B>=q@'"']2bSiO+W0cGj0^tasdUq1QXVUYluU081`(`7[m8[%06^`@M@U>_s'!SR@s.5AtYao/>/#Z2tD@tBYeCE#_ELaf#u%N$EB[@&lZ!Z"Up7SMCh!#Y&tRL/GG\!V&3"GuLVV+2R.qAoLCB"4A,M1Wfn5BWSKgZ6R_^;qKen?90[C56PF:!2Td,p';q8PHh5!%O:d:q^mbT1]b8&sn>]GcH9e/_g&M:aE<Bl66m*u09r!M=5Yqr4m0X1+MVe#h9ct"OWT`>)'4K`H>)Z8iJr/!feZRH.asVlh+qR.u%:.a;(Y8BOXfJd!",n'bXT6;.m]JMl3J&X!-C_/9=X3;)C%rF2fX2ri4+:O7k!Ak+KH+.Z`#];^M9JU<,&ClH@?C:I1YXK!WpPBi.%m#I@-_.!cRXf`I$^@<:E(8oXIWir7)A,ne*/9`3:@HseIe*ssN$guHEe.3P0>jaeQ/pC,29p6KgBFl&6jd1OS"DXZoJ2bnAgF.D_%SWWthPtjD+DEJ,TVDgo:fKV,Ae-9*8p!&GebM#"ZD*6=b-+gatIrPSS^XQDbI4'%b^(,jH('D-K4,.HH<5LDih'P]E-7o^L_mV$6%n:$E`Q'IPXKKq<>Mg1I_gT[<(qb'ED(;hD7m1Xs\e@$?#_PkT"]4GWH9Q'K#[Y[0tC04BR#-?:q`NTM`!'$lP],Ij@QNAN*(k\TB%X@oiS1B6P@kS)hS.C`%<@La.s"a'Go0LR46p6ZJSZn9s4X\B7d5*e875_Bl_0PUZG64@qC1A&RC68X)^8MS[^Xe3)rk\3tk7U=_5%e(bd&/RW_WTS$'kYhNmp[/ui)qa</)0K>1S\ZfBI\8+d%`A*#Ho<cLP87\Bu3oq':bKUrcW9R(dQ>KSXJ70s?n3TSZVG*HtTTB1D%,0LaVcCl-W!^kCR;/i0.7?BfS7'jWb^cWWgejSn+X[<ArZ71ss[=QWpC'Z<O)GhScJ*RqbFU/iD&u5b-@^[*n(^D2+>@'8.EZ>j=%b;#JOTX4JEVsD?q]e@GPZt,LNT^EO\7;>10UQKF3>FX+BH2!"*R0+B78E\j81e9mlV50:l&d"8i_S\e]MZ>J="Lj9I)%=H^.31b(%U^"J1WCu;L6\8_X`),e2".RS_`N0Co1ifA)Ff>V5EDIJYD/-I7$M5Nm)j7D"1dH[Z?qAL&YhjuIQpdO]JX>.W9YptdD5AZ6#RM8&%OK<^9Zq[R')^`/-fTS[1Enj6q%(?5kKssr\N!BWH>2S&`Cm.gf+>.q&"fX;X>@r70ZK[0\X1jDJfQQh/U'>LulttNg'S:6_?C;a'%S.g5q>di74bcW&t(g1kg]0:K;inu"7)4MM6`sT,'C.0_42q1):[j2r]()FMW9;99-(3!4k:^5;o#sGM?Wsq%NZ!dp?P>)4s:7"JL%=mRrSYr*gC(`:\i8[9a2Ok\r^KYWU$F^WX*/H\XhSJ%(XdA-uX,iWu^h81LPUM"NjFPQD^p8=TWHo`P)*J8cD8PsGZ>A,3u2DPiJ%nS,@EZg(Xs-SVf1"u\Z/B<;X(2+Nm!%G3^U7=h4=);'0[7FALSfVLH<)\pfJ%1mW<HT%iGco&rSB]itM.4pr\C'3NtA[(4O!`2T[%C"4BNkXqXalVtXJ9ngk'0sGZ?\`c":"5?R"`jNt;&KGSW"N,#6%\UFsHS^b"CpI(*_Qslf_dlP\3X-M+Zfmcg&a6TtDlleE^q.u!%G\=K<)'&g+Yo-*[.s[cFqVoS[d7,]\8*GXM$XPNM-g4Uo9r\_o2qb!/d^P5m*ltsh=/`#I44,`D!h1eS(NPq1!iD>&frDE5`]9kt%a2V):qa=CoL!HT.aj2SDJe2QcdS4+pP_!tX*0&tA\:MGX0"h_pqt8)Y)`C\>:_i\EX$gonL>+HSZONqV8oULWin:`,Gc/rKas*le%1(%^NPZD9=UGWML<7D#8:amqNpV8&KG?/$>*`0k7W8S"USDL$S;1!h]FHkunmB,u:+U[,C+Z*5fH;p:?rK=9$%4F4=""=;7R4#sR%!jGD-N5,H:gd'&&cdDnu*k251m=CWKCs0DqOF[e=!V4q8bE,f<'QBBa:U4aiY\CfA5-`W_YgY&)-(or2BTtPmfj&C7'.kshbAnBC%7,!9p"'N"F-]-QW)oHj<G*Q*7QY_#qY,E'8Cn.XIPI18\ZJ)HZZY,1O"5?T(VqAOG>Xc9>2LsMP[[Ui(h&*@,dAT%Q3pi<'*!:-$%g&S#E;I80-`nIe,Gu;kc#AHL#>ec2'"[A,T?-VQd1K.eV)O3]+T`uLnDr>^]g.pN?SPNH/cT)&2PoRn0P8\+W&+H<=4$9sMCG1K"%aJ&:]2a_$WE"guHSP#qg:_\^.J3]5,KRp!)9\o@jPT"5a%a_%i=_61;15?`t\u6WjMQSLn7kr1P6!G_icZLSb2e`rafH^Zu?'t=T%H';1kdje.7fjGW;Qi0gU8^&DCPJDIiQ-L:3K&&qj8VR<j6[]hpZ,]*1fEPP0G77I*?smIT2dg%t.76qVh:]Xbi/o3$8C9%Vga\L3%3+haL3Z2&.,SlW#LG6<8QNVk^<cqG+iZ_dd?AW4&=dRo[!+r4H\Pbm1bm6[5)Wdtr[gRrmK(<L!XO^hHNS5S53ARhD8_Zeq+Fo_s%W<EXT5hhm_`k\[-6odb&@,E@c8U0pM809+!&RB`+/F%%_8I3.(4pfqq^_'R%e@$#uQKcN/a:1OrZW:mdC`]C&+#O7E@^^DRnq2W1%0goF*"4]Gh-"F"A:_D>615*cY2H>g@:0SQ.^3"0YX`YYr]F`_kT'"#BYTLA>f4E@VYrI\$p1F9";.7s_U+57MPVW>kD';Xj^oT5&%R0c6XS1[4X#GnNPd5Eb`/c38,?I]EQ7FPT-7:E!f;^Q?$m*>[)m?01NZfmFGqt.%X!\Gf&GC'LKOCa'i0,1>n7c\Q>;(;]d25\p[%nVR$)j+JGT:>F@g?B)arX3iOe%=#5glB6'r:\AkH9#Q"6^l2B9%;Q&_<c5ULQ2p<bmO5XX0_p=N2,D7jUh$c7'[<(5p5WT7"CS*%%[E*]YXM,mNE<DLocZopSNt`'B,g:nbd0TC+BQ9kf"6eB:Xe`@hMM8k\kq;VIbhJ&FN8&3:7sN>b+Ltc<'#P/HeI#J75C(Rf\+49q%#$b+6;69k*b`!`LYX%LV+0T,&MJ(&+!Ztl+!cB,+0f?7n:)ZZ(*BqY45a(DcnYj`l@$.f(/;E5jK-%8"633<5J=&Io#UOQ"i4IJ'%1s<c;A:nYkC5ibCb&-3!1OrtU;!(3(K2&cu,Efd-&H0%U]D&Ua(lTkhWNV6%5pnc(gJom<qid"/OV6$7l$p+O3hE-Kj*bQ^$F1jO%k,4IQM`a$_!gY`XW/7.'&d^gb]QAE:Qg<ft<>Q8hTi]Z9j;.9gTk)8a1"H#4JJtADR,W+k@F&FOU@pE^MU[2(.C[P#Z#$O3SlW3J%?Wo.q,f3C!YAPh,SJoj5eQ5/:"-il-\+W@8b^#uc6t^'G29>q8b8HB])?a*7gZ/:0Jomp?L-(s/$nGsG#cqpiOB`USC=52nJ;4RJ%-oAI83cl\>/ZYqkf_*0RZp($<k72#@BTiuA3<PKGoBI*2%tM&dTt<l3CQIYq<="Ik:\&@C$H46jeL>Ma';efk.D2gL#S;[SriJfn%2-o&%eU*$ZjFr^mLX`.KMkI=f#iqO!ZJ$]LYDadI2Ur;J5mCl[=qic_Qd_.DhR'R).r44ePk*AXguYjf&.>O4;*>mjE.u<hF&B3A%@%YC&)@Q!7K"]dA)B.PG,cA]D!=9U7_.lh@W]U@3]<Yone83tWg9"9U@\o+-I.1Zt39H@(CN'9F/?$69H^FG!!)mbW?9GMgkS/X:%2P$4P!D&!VA\W%KC=bs5Xu2bB:&q/!"2Q1")#1C)dOP'#]?)T;PHd=0+a%'S?-Pha9#m.8)l7&-ZW9Pm+prk&K_%X`X;GVEhXZ96%e3X]SIg%_\.R<&Kqj.Xb\qsVPl!80Lk68anK(>M8m:JXYisl(A[Q<Y^k,*`*-IS.OS#GAQ@[+nqmc&2H8[lQ+PEE=Q*@BE,F<N[.%YgKW&GBjtIkq'9KKhUFW5U%)R:^1,0ck9B:5k;te:i4E>.(&]HcM`9Ucq1o>MhZg@bUt1"%9pj11#DSDIjn!jAQtmH0NbdRlGXOF%:r&:>amR4nM$WHG?rfSQ(2];YocnCq!RDmhjJ":$+NGMN1ie#2X?smb\Kp5=[^RI-(RDI\A4g?W.mAXEq$<-;O4m7-l41_=6`RY+%=g'rVXHN-0EAg=Y49kZ98-@OA64G28-/g3OUdL^O2(i;jD,Msm!D<23dSCdaa`^u##,H/4A9pdQ>qDJ`">pm$=eh^g>0ue>af_hF%=pV4le<#8cJkmQ<k`O>#2+C0jB.C\6l6O,)@FjZ0Nlds2\p'7g8D1eI<515gIchGM)U4WiA:[&K<,tP/MVqD=:gag?!538Z&pcmK%W#R",o<;Bf)+?I,^D(W-X\Pu<;^S`'a%!LW8JC)PNpMB.+o0_8W*\AX_7@'1jYiT3[h.)lYYDB?WgFDq1K(;2)S(]4Q+_8Ma4K(K%OBgl&XVu<&DOJ)#]Y>A`O$-+TY>uVHfP$V9S[Q^OC6Ck+0lDA-P70>8K+F)MR(NV[l5[XnW$>0>#]s+TaKu.\Z!)0u$Jn781rcmU%a(1p2r>pORD,I*tA3iSeaa4PFVaA9kiHooI_l'8_fMtfZ%4?&\F88ot:cbjriE4RGT^8L9K$^J@CrH5R5Yu?^&N'Y(/'La#`([+n%PG&El>oHZgU,Km8'Adc&Q-JuMRmOq;ap<@EC,Drj.fe(I>#%k,""FZ?!&/43LG=Sk&:n0*(^`G@)0640[Eb+.Mrg<@4AD8T-jiYp%8YE/q]MGuQZl0G,PRXnK#(/tQ@1&7I*2kV!,4i3YOmEa%b9tb`P=k^T>AVfb"X1*#mIlP+-=*nFA1K&bOM-dH7=fuK8Xis8la';t%1"7)j/;=U)#['i=.4gr4[8^d-@$f(tFfdgjP".J%(*^G/]-0!!$;3@`mF6c]p+)];dc.36!=1M#dRrq6m6J`SQP_nQ<s4R2%YJZ7%FG_G77UVs[3[?cIXY4;B+U'(0\qn`W-%kLCZ"Bm7V6+u&U>`N6'<;+(WRR^EV#icKXZktQs%UObgD"PH5jL931$DY1#Ja83ZBuW9%Iagfb=u_h4`T#?TGlk#L.7qHb$9/ubE$(l&kX]<C8`mu4nP!Nb7]YndM`-QLC?s7V.dZhFU"*1bpp.K0&K#XqA80D&F+A!:%NXXj%4a0Oe1+_ZI/=j'PBEPurE>`an6ot7K7P:#GkYcdYKog'PHJV5>b6.>bqTMS^&cttp,+%C#3?j;+&N]GK"?VT>,)['m)\Nn.$&\pE%D&OCPgbEb;`ARmD1D'&X6h?.FOh'eWXYp@6@HN69k@JCb_hb"Bfeu\t#$OhaUEPE:W7_mHWZeq#-aQtdZc-G`NQ*kS"LC"ZHlBo7%ALWpYeFOO0<NkIW-W[U**$J5g5K"U2%?i[/Hb^[*AnR.3@VnA_/tEnrYQM303&WDt0UbtFlZ.C[:iYj9&F'O;#^2_mKn8N7GD-2,%^d_9(a!.PqUXA[jAGo=3<Q(aJGm"V'KJC0aV/p-!*D+)d+NL7'4hu,8l35YX$;/';9*99H6?nA-.Fcg=#bse9D&IC:n^t@S)C#:^%;%aQ4A>cA+/DI0DP]U(07U<J;aXKnU4DS'Ij;q,1.=R]O^W>Sc3XXe$UC;Hl:_QS2s7Ngf>$`5(%o.-YaqIEUU2Im";[+S*$$.E9%(@3fSX&FCp#/ZZo)^GNl^k9?U4VgVhp.O3Bdh0ZsIc@eNosCJDBe:^mi/[W#\)7;uhBp'=KR_6J69n.]asChi7CfucY%[P5lQ.B1%ct-Lp;*sos#DJUYd'L)RF:sj(WiE5Ae?2V@>F`<:?!#AO[OH/OPUfPCCV^b<Q!FYI$aL"!4q4:\!]?4SjG6/ZLj3\hUOl@98fWkf%[UeB3FcfL8,.2jH!Tb(-<d,NQJu5_@)1mNLTLhq2!sOHpdVI:S1c,>PJp$*rNONXNKY:"pBf`gjVGWmSNO/j3h)rV@=X0/80^?/G%kS'D4`TlKHkm@mPEY]*CFZ)seV;)9oQ;;DA-4(`Z[EKHRRIMFM&sL@0%H*O>>EaD1,Zgn14hMo`VoG6/G+u]Y+)0)9X<lT9A%Gej%BASi##,"7-(We6+;S];g\eJ_40&bAC7=r$`0o(M2As;Tj]ukorW&['JW'k-ZUkbQ,R[8il_scjkf@VCiM2)6_-:k2_8G(*G./:r$%S\bZ6J151Z"'*XQX<,-<cifYu/Opst"+%DqZKLeTJ8+4&?Ld#"YSF08XT7)j6\m8*:)Gi36Ch3f)49$8ObN+iFAU4o(PdpMJ9-.d%,@*iP>akg50Li2Wg1Z[;J9&f>11TV6VS&MU!Qui1)//*8UJ:Q.-upZcg423jSVU*/?7A95eUj=KQbg(=4Gq9_K`:T_W-tBmj`;,I%Uf:,bJ4Edc:1o^KhRETU%]8"!m@?ff90jRU-Y-!u8+eV-1/3AC#I\%Q88tLn[?Q?!@4=/u*u%;upV!60i6H$=)?O;6Z55StOmmrh%O?4P\JK2_oP9Oek+[hgK)d(Oa(e1jJn'=;k5&JT2'0*Y_..3s0Ag0:*V>S)bL6U".\C8D/22'VY^cjcd0#4>uFO__Nk"'U;_,1V?%$Z;h9%(hkAL7J42_sW/[)=m\[&BI.fl4c]qUPucZ!H?\/:s$ft[b50iTV,g4jff"30lX__V^Mgd30h6D-%ac'!t[4_*Dkq$jV5_a%!%&@sFDF[M<?u]EUJ!pin758]<SFLpRAJ*@9?1W90J_bklgtmSHJg%XNRl];nW"9.$d`&tJ]PC@0dp7n.*-G`Bj'+OaFBk^2hI-R%)A="Al$P#7/u,^34eEEdm'"S;FsN?>0[hAE"uNL+WI'h<gf..tG]2*ZC)&^%bQkt9=+/JaF:]ra%4lk^?I6O!X9#<%:O?ECS6K&X%T%7_"F\j4W$U4=>.;b7;p4A;lWs?ueB<gsq\X\>iUt\9UP\`UZ#]31@d`$gHka2T5:j6TEdVV=2<>)N:*-,4Fc@I)CHu7#R7c:.=%/C%uKLF/4Y:RN)h>"=Z"B50=SBlI_e-%+p@ZpZ2_TZ!)JI.W#2=Z!_CMf6&Tgo<-^=u1*\3@^Lc`=]0aY14a$";I&<&u)=U2DNZA%o`0Z<7R[ld8dU&s/TXSa%g=o"c9ob';$2a(r`TeY7%jAdC_is(=UG>C[@$e_`#-_WK(fd+pZJ=cXe[$$=6W!Y"KPTt<)j'iA=0Z;%LrH/OjJ*FEb,0c9J(-ko20K'X"G-%o9Zh+)TJEP\nHa$J-]_uicpoi%r>VRY6MjDS(_<^5<(R^ef+pAiaP8$'DB8<j.@JEK3E-4!%dAWKedJ3LB<^eiNdH`sRCe:RMqNt`e/RRAOi/l6C8;oT4IoCTtF:EdM5WiR)CWEP3=H1b^HCI:4&/[9p0]We)HtGMe6WB^t'TF(#%e>thNJI\e26J![\mu;o<FiL4PZme1*]NbkE.g2<aPK/-Sh3[]LQr"CJ13k*PCGhp)#5+*\ftAW&@<s)7+r_76ZD1(S\sQ6$O[l=s%&/pCI>OT?Woh:W+M+c6fjl6YAl9q0EHJ>;s4$].Lp$ufZG"\fu6!]j4j`u\QF`JQ5hQIs+Hm8WPNNZM"YV@&u<GR[_j%YC<Bb[Lc%N8uWlKjFYE78/Hr_]CDMp3;S=(qa2PQ,?UrF9rCCNOjZ+V!h53BEj@8N$1#$7jKH0#;G3QW`"a,REDC'!`f$e3WI1"Lf\A?&sB#R%KBhKY4-3V/X]+.2\bPfY@%G/[aZAp3]FeiuflPMB5a%aW"Irc7HAWC-&>]*-S2*B)QK:D7Cc6&,+QB1GO0#?+DnQ6.5BTMpl9#I9%2[\tNmKcC5al$4K=3tk=`uB:q3<28uhk0e!I",m@(N.cFU!.C!bbbNLk9I!JL0>FH("N-RYeO5fmO's?A\:_87E^g4a:C#/,H\bN%*gggn6/1M/kd,RBg2c],!*i0?mHa$P]]JpZA08_teSFFar+tS`-DK6'moBYrMRAXDK@@4h(e/Jn#NIZGS?<:p#L7^N[i"@t*;&WP%\h/FKl<C"S42%qnh]Vm"n)\9eE@Hhi2ZrUUFJ.m5;LoWaYBr^k@XP`:og)qa5L<XZmP#mm-ds3OTck-k'0fJdVQSn4'jIG9jDVu,%XaQB)M!F$\6[Alq`b$nFj.Y4hFKG&B*X:-/$g]-pHCjct[eFDA_Cg/bZ=s58a$<.An9Q:k,:@1ZL;\#+9"c[V"Cm17^?p%W&\-u4%:`\-qA/kToM$(tV#kXX]=Y\Hi(Cfi1,EX@);3iDF=#\5+6q=ED$9F$T=eC6gB$0of)q8I6A8ic2jHnmOAB]SDJsTgu>oCipC(j2D%o.`X)3IAGR:?4gJ`O*-9p$kl6<.=r"j,4XaND*Pf=`U<[dXWBJ_uL$'`ecrQ_7StU!d!bW7eITaNKG;[%Wb7hQ'?q'T$\"(E]Q5K%JdX^&,@t#f&U'iCc#?3u[:#VHe>%sIl=nFJ=g;cFOJ2g+3Bj+U+Yf7h4%9IEW@!7-i/GT-`s;RKQX6$SrKL!^ds!:pV:L"3U4MIX%9&LLrP;%+6"-h7KEL;;?2O;.'AXI3h7E-r'Ti&D4&0mQs;Wb8c&cq]09u)2g1:ZObC:,&53Y!dBA_nm\IPiO<J,k6gcaE0T,[$5"%)61,iilSJG!]47gPc5,Uc=BcVKf9Xl,@R9m4A,Il##jUg#(jjrAf=?$ed29@7M;<_c-HeT?*-[&!u#hd*2T\1kBM7To:6^D_Qh6X%=b]#H"P8W8h,3khgCQ<j8SS;0GD=A@VWMgt!/eDJ"duq]BG,l0U65h)P2?;VWimAP8<`P>j"cd(Oan59P.;,;?6D<ZJn*gt_,&n7%15oL6+bQe-'O]G^Ss1#qeIC!#A'8Y^'2J+5)ELOUqEV\dcl&[Q"R]aA@:O)t]3:tbQJG`k!=9X[]R&g%*T_,^QV&8sE$4E)A?DnB%b'T7IJ3]"Y;]O4/2?Kf+96f`j!\lAj@9<1N!J,@(kFsFR%)JGV^R/393D]"7M$sqdcMWU#,T.S>8t2`s7G%0g.\$bVJRj2g#*`d5%/E\W@GpBQe[^Qn=5!_527k5ab)S0OB%$nm/P$m9Y+jpe?!Ae-47]hA@Rn^Ts%-"k79+Et$W.?DJPt^prYnn(r@a)CobhlX1eA9<h%[djD1iUmnU>E#k>eSg]t4aa9TKKk8iH(.RU+REYML?jRfYbecb!n4aVU?1b]cqbnBiLF5F*h:Vo.VU9(#`LY^eeRK]-N4]RY5mTT%mX-fA9i@a#gYS%g0F<aX["-2P4G?%.qGtg+USTiLU$,`'/L^<\Opb.R@Do+S6QIC'7Ib[[!)q7M.>C,S,IQJ9XW][a!_!g;$$%g]%2c>1L=8'Gk`38p)a#Rkn@BHmTMl,-;C.*\B%"6ot"BirJfsOQ4ZB5UK^jEY^\kcU+LDR'aWjMG1;8PZjX;84q8#I,s5'c%%,35rV%6>Aq^"iVZh9X@bE&&erhKZD*tM))2\e*ha(XMq+`anNfkDSXj"qda7'UY*)J$Wugc$19BYb^.Zu,B/%$pH#T!ZOI0k0>;r+K#,BX%b7CVVhr,r[k)WjIgRlfpY+_9K?dc-95?7aSpTInPIJ<RNIm(?RGdt>s4hq$YYn+QRr8F8,f=17s$g?1?eIN`C0&Q\KnNX%'3PN6m%+-a9[HZf;`rpggh[u5b3bO%[r%)4t'o'R,TqZCZF?i4p607UUI\cD4MB_V5@IaNY8?[q">5@;*QGl)_ogjH=WF@Ah%O*r(sgWQW>%h`a^TOr")a@ljV4pW(nShO]48VN1$.23clO*%^^7LGF9ur],71rjgY@pgs"UIX-Nbh#6_LQPU1U]+;BSTkhi`/Qg?:H:+bBME\\F%4MY9os"RqMqna[%52?2-iVN-=ic6Mp\EZJpk^/n/<)^hYJ,0)]olO66`BX6em*l'lI^o49io0eWQda'cXRb$LG'iuKiTfB2b6FKW%pRY!,GBLU:!./iP5>+/>_pm*4E;ok-m/HSUI=O18S\YeN:#S>V#%AVkaS<bZE6cYq8p9cMT-'JTcTF@omQTE5>lOQur8$,.Mog"\%mGuC"]%qECG]gWP\b$)9T3sM1YargTp[7VOr8I'mnpkb7-X/I/]:4"gn#me0/=PIj"!kNqIJ:LH>eX?g3GX!=2kkrRpAD#ZN=9@K%p1A11\&Hdbqf<>?YJ7f`H9^_BH`lg3k)m!a[t"82A96n7m`k%RXR=?uhQ6/4U`B2CVs`q+U'"<fQC%W]]RKPIr:SmlcbRNo_EJdD%DjQUQW;%Bn2T11I=X9Ss)">H9LFl`h1KK1c5J01jr5[>JG%_+TTrdls1;TU/5J2JqFags`#s8o)HLfk(T$Bc25DB&LqEUo6p=E*V%fluBTqp*IShRn,`q69c:4RIukrAQRM"'Y3?M7fug0#i^fMnA;eq`k&WQ;t5IHd+4qe'4UbqQl7PrO^72Da%u?%u2ME9FdqEs5Et%%q8MHrMt:4$X&nQWCP%`T#F#&DqYYebGPhBur-%qLX]KlOn)gdJ4T4HT]A(Mi(hKjp8@f*UB^dko8cLpk/-#P^b%B:7.!r*URpDoQ%=4`sl',flc];s\AQXWj=$@Cjq.p8l*AOAX(H"b5=G2G`_O"uRY]/S]:8jTeIAD`cjAC9eBktC0:VcY\&#NDTk`'(q%-?%F!D&I@S%&@9sjfj`&Q#ND@lLO!LgpRS.2IGZf`Y9(D@^Y5Q%*T!B5IXh%[p?(pS3pHT\pWg\(Q$5/#n'"S!BHk4&]`7L70mQ#Nd&sJ13R5T^%f7>qmk[R%b1PZAZ7**a?md>CHIsLkIPC51_)_VmP:XG]&4a/$Vq4,ObT+`qLP>@\*T>/,:0HDHCr%K[kqlP!9*lu02B01,2M)4`;%N;rS$p%e5^JjWKl^Uh%,p\+%Om`/ZE82Y[ID!fn0ZY+K2Du+IDR@2=DlsjSsk7W-R_ni`Dk@'SQAd?5lG!!(;$Q"/a[=3',\'O`k%rXPa3n&p0k<-]n8Ie&<g?$MbW.Qh?@=<HI"B2P$iKl\#`cb:uJ$2c4XDn"[%-]5M84mkf:+,9@(A1B[.STXLZp3gTPlX\VulL"E7%mH+#AbNm?0>q?*D'gKGtEjF<_@gBPNn]CKuPH4HHY0SaRD_>rM^,gaf5b$0G3A`VHQ$3Mf;8(=hZ1b6_rAo)No\4K@:Q+ZtLYVWp%Gd<%k@!8a0&pGCI3G=+:J%nnTE@Ca&LO%PH2)8<#5F=;`GsqN^iCuOnr-8pYm*"[@ZVtu"S#bl@>p>$+T4"PBYCAb9AW(BO>DWmR%pH'rq0)taDW6&QG!O&l!DE6_)qn"'0gu$p]-TWaTq+\2Z-g102aSsV?q;Edp`5t.AiGQ6hEVBS<\\BC)E9_Df?ba=$\GF6fFXgI;%!fQmAoPn/AI(9!V4mo!`=]+8ec>26BSkhQLEcHPVn^ZI]l!qmO56'$Aag+>iHi!TBBa@WbY[?^Q<0Hk-X./].9+?6HH0ASAF"kh0%Bm(<=/f83sL^qE#0aGV_M7Ig8db=G,s6P>GVN5EZ%6B]D"`lNER)*OO6ZNZlfe>RQjj1gML\X+$8,FA<F7JV6@A]*!htP\^*+f\9%fpBtIG7Y6oIP9Y64)i8hhhdt236_",*K!/H0Z.=BR"p)s,L7t^B)7>W?,G@*E1"?4ru=cjcOL)h/+\"[3BY6]JNH9Ec*Qo/c,+Cc%:#l:$iOA-g'>=>5P;XK^jnf_654\YiG+r>8`82:e9K2hh8CjMJR07o_P;@9e*B77#4`e!PK:b0XbgC$_[c\XtoH""=Lc.&rI:m5[%8>n=/S,(_OIPqRI1I%B)g!%bPT:_BDSaUdo=[+^N2L4f,,9PdTCo/bQk4cN)-4bQ32Y46Mp?J9:fABo,s76,+kN2Clk2Rno$i8X-%%-g9K*'MDLrTapoPXUR!idCKe2g=$))pGj!k$0RSrclZZ!UYAc'XKK#g3R0/I'4@Us%E,-IXVSF/=p(ep=8Qrb;WM3=4:G&pQt>$%cQ>o*R)Yl?B-6$$,DO6]?o_]Q^V_TW;b)%&3FX=-,JU\j1&E.^4i=<:J(W_cnO&/_hdoLY*ihLE/G>DNlpPK5c3HP]X0hU+c0oQ,%h7X$op6uRs(t[`O\SWU7fFG6QcJ/FTKZRiCT;Jf]T:TNF9HV?AE1q:pmO;s$P6\C)aQ5\2?4US)B<WA357ij&(n9]KHGLbAS^/nj%iq`Q'_qU[(LZu+imrf4)*#HXc;=&Z1E0h'Ymc7`mS\//J`dK[:bjOQ4L,Z`.f?l@cP@o+1lqSU50'H-?op7`pRb<BW]9$YAnpJ^'%g;mkBnjn!!a$`&%O:T2l1qSi^(\6G1fq.edf2lnII$fAPae>qj*J_&kggG/K]([<7hgf87C:?&"]h4oFE5,Xa?f1fEFbJ@J5JDPr%cX0pbZIm9/**1g$mjtZ1h.ElmB7G[`X)`?,qu5RPFugRFX#D!RAu"*sFPFAZT@4gi]M!YJj8J*$m?\rH?%.'AqtfTu].a2(Fa&90%nE'W1lS%_pcYn<'][UP/gh_t>X`:[)DId;,7EjF1pI%lJm:<EDq0uc-I!F:a3F=cm>5kiA?CX-TbA6l_-^.>'j2pXN-W_S.^Vog<%<"Ui4X@p3j21@e9s.%;.n)%DW^rCNs$mY\pZSpB.^Vj-MG\:lC^#D6%Tlg##TC5%rqhS,3MGG@>D_ZV<#$/4dDDU$aIdM."G+1Y'%gPD,Lm5AFl+nNrp\!cVAZe]6%gWXi1fktlhG+38%BKV2TK@pP'gDchmM=Pk@<iD(`h!DX-l<0\]I`</33JYVg0nnkK%e`#?`q4iK%Gn,hua["u.)LJ$VBtq.&?/obqIbVNLHMI43C7?7DnFk'dGK.AbSTFe0IG6jHr)<L$GOEV=pO1fo-me^d[a$o%eF.VM4<4+pcI=o<%SD'eA:\=3jO`Tg<g[j$@5L9'?rU!Mr:)sflR^3AAKG6+#s4_oFs0FAPaVSa,ragDce1XT_ACCdhKpS)-q<+>jJ:6TmGAl?N^O3gC%EI[e1-U.LV]^:QAs#2d_hhM:&n[&'321^1DQ-\J:3IhF(<O9A;c&Aj@QqEN+?bP;>FA5AWIZqI75,,NQgS<P]+_gJm5,PDH++D5l%(FDhITBQF9;ojU'N+BMYrY-RQCt+i3)I(7&-q91U)`@=i'Q0P$;.KGfAu!?HW5#Z9@t1uDfr20:S:!50bXRS?2/8eqr,BA;Cs1Zb%bHkY9l)K=3o8ACql`]c[VMB#0jb]AP2gsh.?2Sks4J-sGPO2D+U1I(AdCp]_SY#iEp;>-6YgEBS6`,aHb%DgLmG4guX+uTb2XAd6%J>L#m]&$kG]fMcM)Z",f<i7%bhd;u2?iIeNQa[d[Q0U`<6eW:;A4HlgltAEp^U_+kR6F>Epp1Lo3Med:O!`c<no-NnT"99#U!1'*%H@q].(X9LKIUgjtFG]&PQFc9=0cGK7iVnTCf7<3TZ6Se18+!jIq^b[Kb]ud/b9_N1VH-V[]D/WO7W^oc@sN.jI`kU]"#,X/T:u4D%+IbQT3I^>ah%UBrI.hBH'KE,UB&'!uh(r9Rf*D*#(@c_N9]ECipG(H4<qp9\moNgOZbeXOI(qn"Dt8WB.su\"N`k=&I"h%"`hbgg%Q#C]/MHT&q5F$0XjNSV#XRXORhlQ@m)W)&$;0[7&h[Ukl+H>jIn*XN^G^ho*4n#MapVK$/Kl<<?bUVN/X*i7a7Z?Mt-"<cnmsBM8%B<q@iB>"$+$t2okq:IspN#/+r.=_>U(Jcg'hi(Ju&Ms=Vr#MEaP^O"`"^aUoV]W(f07Nb<_4\Dak8.21^\hdN,M`0O?`p<]\>Ai\%5N'/sL!,7WRW]V!Te*&s,fBdg9=mp8Ze^3+h_P'+GLuSR<HRo'EeW2:rC#f7IGoCr8`8IqEmR24"2!E8]&u1`Ekp0$&,1"f0.pU;%SF7Yap*tLa_>X:TLEl0;k`12>?VD"lMBNJ1I=<!WDC]P4$1-3qhkA/d>i"5MIlQ>/;.OB@):gkp"1iK9([q0L?ep+^_;1L$J+b=h%jn*@%7`EIUUFrb/O.D6S7?&[YYthH8h7OHBmo)U`5TaYK^D&jo97)G7VsU0KI*YtaR_6W)"Rj"DY#g"&EsoU?o(8RCmVX[B@[+F_%mmPm#je\lAQY(5O(71oliKZ*s"-f-96H7Z%Z0>DG8O$]fE&O-Q)cN-:Ac+B5g&1IVX(M2n[U^[6#NGG[V>+ata`8M9Y@hB=5Y!gG%s(&ac1CLVHeIf.^gZJ1Z_mef1gN:`YgG@1EY9)QW>jcRQaLl`b)lMQa]lX$8p3c>!^?*RckC.I5IGZqI8r9.Kc?\a2o<%V'm*P>U%NVb+3rT8M,!9W:MlbEN5_K/F?oF12!s).!V_2#>dcSs)hDN^hVXmSBZpR?5;C2udu6X]7m;9Lch>CoNh1As+ZX_I;-@/g&;Sc'G+%^>Btop+,KA:T!>]hq`dY$h-tP`\S=!T(>7]3Q9&</u9AJ-)5n7naYVl,l.3dL8`E\VJeZuETAKV":(87@qQtJq9n!rqc1uuO!FPi%)5a[16i$G821,h?m5oM?a#*Toj.S"I1]96.=kK<ig0\>ArVb"&rRoa"5+"n7AY(!hJ!`F?LLAK9Mojfd)Z.;:B!L^QH+Hs[+)Wb2%H9g9HfhpF"Z`"\T%m'UZ9P7-lBBJs*cB_6@@RA3IT"=phrquKgRgHPpljpdZN)6kLK%`_d2`V"V#S6=/8>*:PjEGJPTuae)lg%^*%q8=R=a(k%jJL>d>:=h^YEVpVOIt)eA3aDiATR`-m^V7>Y(7LmQ,qg+J]_q<b[eufpqOOuZ+2.O4k(gS7l4;)0q`e-SiY_[prTEGJ%r:m/3_)-ZA"oe;SnB6:^ki[Y,I'raqs'%-_A*La/0A=!QN`tc8U:%Bn1=!7bRfV._`Q!'/"L^g+*?>4+Omd#m5Z?9)ef.fn=3prs%4_d=<(>tM^p.'8gRpHcZKd5'b[eI'?-lq>k'A0``D/?W9"EsI#Z]/,[?KTI/JF5(:*E+)hMo1@R.EfFN4EO)r2JoXS!]d\Nl<N-R%JF/J;9LJ3-i:gfjquOn,%tD2[&p_1cnc&IZ'aTDL2Z@^dU->T:D`S8)p7d1b4K>N+S]iI2?iF/91&QW3_K]PqDgPp*3HDriKmXZ8%=$^1(rU5=sMne0AC:b]4?//UF_JBCCjlJp6g\RZ^!:/BSgZGGM>IR^`e@TL?jI@t"mPdD?bG@m+m/\s2EB%uUU>$*2a`!+O&iFh(%gf.Rg/HK9JV@<]jkmOB!/W7=WC2Q,sC>"2mrcb(#]rHTSYIIG`![=@q9!\g2lcQZ\UA#iWXj6M6corn;.5hW#_(VkG?ul\Z>4T9t%TQFs,NnKC+lN:"co<rWc;64QF`c%SRk`0Fdj`drMNJ#LnXBEhqUT\k^E#,BK:b:0%W&*1D2_ZQdDZQkhNk$AJCS9Remqe%if*%mK%*6qD%?ng>N"mAnFUmCiVfm=D%aH#One2(ECClc5gNRtF>91uC`>BaG]pSrYK9-\.-;QIDUor'hBie@<h"aGM`66H\pZOehg8U^pJ%9L=2k3!#V%(DHR7^k=hVPOO8CCc:>+i!$ko<HmiE\%B&,2.P-GafW.Pc8g%4XEAI37378efSL3UA\h'-NIjW@NSIThhDCT)c`<![%*hIq`'mkM/14gbgBl6;6TQ)0E&D[m@gcuPHM\MO<a3ksq/&GBcKgc?YM6n:N"YGW\GgI)5A]8&^CZ'GIo8'rFTfj$d2/>a!RWTlk%p]BR93#O^gRKGEY<MDOedVOi]N5VSr6aBaGL@Xgh><5ZY\S.d^]\#&V8ChNfC1N+#fl:a:^,_N'iQI_]>3E2[jZr[XN^J+0bGHU0%M9+ebpdWf@P41Gt.7_!'SPGOpK.404dpIo$8ODZHAkLIE6fbOu*>.?ob8OH.l9g^MlSQU9RP*Z1N^3H4<,"h^i?WsdO`mu2-\>sI%(KP'k*&M=M.J;ghhK*,g4_oB]\E2NNDDN_/>=ma27`Z0_lRi7J]UsbED+8-TJkhN&%F1FVGmIUIGp^FUGQA4L#njmV<!+I\7P%.f%;(KUem*(*3"a).HS#Vbg%Y<AeG&rbj1=_FTm6iZWj/UUcoC0CDBUrgfkJW7K^n&B5kp_961/arD[,=g0NpY".FG,ul_%=gVs&@SW%(EeI-0*61+#_`7#nK='gs%n0L#4OrCT/HrB!r*gT7Z$"F*N1)$kb"_cgPOQZ'gk=6+:h+t&u3SuBl9dN<-fZELO9*=(Bq)J$%#&Y%A]>?75W9\&[DiJ=+JM(;c3u3(!h#b,=S5.K",oK`"pL)2a>f,\)-29l..\bqZpp!>j44L:O3<']<!L9eahLP$&';_13'*JHUc$&?%,['7D0gXURdEj11"'A--;DL)/@Y,FhRpdTa8pHNdkZILIZ^A+3(_@q@%O4l9aRHhbQl+0g<@JMlNNi8`FJP`G5XM3)RW]f$)`^3u%TPB[/__QA-Bdii.*IC6>!]X1T5U@N_a3#JRVo7+7PTXKS8k=hoG_<jBLN7e!OQ7?c"Kb?;%g*Bm,qXQ)E&4WWTtDf3,[I'?G0>t^%>=i==6%J#rj@LRD;2Q*G$mbJH!fIl,:a:?&'V$ul-#TG;"+AT<Fi)<VO<-`_7(`N:aY76X7#k^"oMMCGLNHjr=V/udK5jir/'Tj[%9*tAZR[.rgI5IJK<$MYT$mY;lAh6QEr2FT/<PW#F*&[Sb_+:*>GTf*^:W,<D5Hr>'%-R-FoeHXTR$E+g#<h^8n"8J"3->iP(:@:4%@N\;oN[4pT7'%K.2XFjK'7hCC-%hY+%]irl*@Ktq&C-%m*%WVlS/T'*Or\u9-/ZN-aN3k$:TE#N*F5SLYPk#5Dh%XghtXe<@V;gk%>W80t_ZM"VLJL/*aCd^9OU$>NF3oK-DtV/#kC8!Z?bZ'&huE\*IcFd!rb$/*H#H.=N>)'a_-_]kRnl6HgiH7Uq9@7aec#;`-YdQ:%^\dd*lCYf\K;X4hMl33BqBHNb4a414[GTuupoX;ih<2NKh8^W;mT2XIZ$3m1[J*]g[m0TPn+a]U4oCB@q!d2=q:k=A%B']kan<]'%m1!uZgY:T_Rs2&hfK0NEF*34l7RdRa;WH%*Es\!b"FVP*UauVJ(-n@d"".q!(,ZVb*ML?N?[\OKWM1QFE%[nj8'<TP:US%mJC!A9%1)YQcT#npuZ-T<05WjhMRV5Ri@-[/^2Qo#_@Kr-V8<]".HEU6o0u4FK)F7SW6,f'6(m>l\#Z/;E)??LA2d0@hNN!\jfU%)0IMgb)%a`:o+(H<<aLQ``@7BFZ:!]:Q<nlp.-Q!.?H)jesZA;Oc>DHk\a:O_M[hlGmP059jnVcpef`%gW_n,"u.o>1=I23sS]p[^D2rSW/Y%a0D97n&79[S+ka!A&!<Gm5Xg/fA2Hs^NnW%3;/iN]bne=o<m=-lo.^e0ol4pB=DC'DdN-H*;e"$_&+eBra.*a3;>N/3VYW03VYW0%3VYW03T!%;Hd;7Uah85)Yl?p(HVOH2>M$A%a'lse.qK,*b;dZ7IkcnW)ZDDNEGUF1$ZR.JiVu4_a):[e&B:skr9rf.p6,HBHS"?<%pQoA@0,O*?@k@Mr]A;WOiVAT/W=JdoV3bMC5F5]&\7-h9^ANk`='^4_5$)*6jcR_>4'\or!^D"tqO;B9rJhO=m^W5H=5@i?<C\YH%3qhK5??>-I:,aPCFEVguS>XJKlO>^AD7U]JI/20YS*k))6^+ELA*`GrX%Uo/4\X=])ki0YO$f7?EV8i8/b8C/qDH$/mN)&Zs,OS&%nTB&ZcOEDs-]VP^`MLO:%UFDARTg]LU#l2js7$?ojqA8Tl;J4Ciboq:PIJ;UCM?=U]]GS,76M,dHM"d1gqJL/Da3_mTDmhO^\+/t%plBq)f%7Y6\PG?_XuC1AqqQC#GLY+E_4RA*A$:=D?[h-E^[q42J,7[@IeM8eJ,I67Ie1r_s5c=L)]PSKR!J`sf:?;=2W+;Ds6%eu%r8=LQrU]3DLX1%VGkUADJ,e8aIe%o*g`0`t>c2XckjT>=gd-uHJ+(:9I/WT-4S+II?Ml,K]_KA8^NelgO+7+j&-#sVKYHK8.o]Xl%^AR8#gk2*2pQ<dOqoP`Jpe/a7p%cSU:O`34+8NUp62)s4?Zns\_!sm$m#<+dr-*V^bk!kTl1<p+chuugTE"C"A%otCatO<4??8G<%GjYALq=]l@/V_;/T)I'G+*la^SDrusG53:Ji5V(VX`o6blVB_9HndVKo)(:>IdIeuQjP_,E!20[d,i=9&=7k3,@C;NVk8Id!rf$_%?@;b:s8&&m]l&k@odVeU_agkRL=5Pge@0quM\:J<Y($B1Dg_KMlTL8DJ1':=-MQS:55<+;s4`\[_UR'7q7/`#HcQ@Q6&2LYj\Gj$%`ub-:c`J'O*F=!a#@DrLFYiEg](49:LG$48Ft%J"j59^tF*7[o'YjG5fDbK'9AHXNTao-2kZE2P_r#a^Q6ROBgeY]XM75sMgL9NC%_hkPhq`j`q5:b@Eq5=5jiHMAGhJl6RYjqU_Y0c-?s7*)cf=OdoVo,E^Iq'98.Z_EadN+l$V11-K-.AO74M:>#A`plT<]&8uDuA@n%rTG'+1CY#l,CSQ(^%,0pl.:CZb<L76"^>8YiL(d8q89D,p)qlcD7uWWW:8ZiIeRK`4T4i]T7-I?mk"qkK0]-Lc!B/1Et<]lLX4\9%!8[P2=!'I>lb3b+2cA73W2X-Rhrh`Ne8po[n]M`@Hg858Hf)#&;7BeaN;=)f:kNujgu!M@qu:MIE\BWVhr"IVhjdpF2I);;oF_`%%Xjm,/%m9cL-VKs6E>q]&j5C72)5h@Pr!`A*lPpp<YCHRb^\pMm2tOq*J+iiE?g;T8Vg>X9QX+m3/$S`e%tF"O`0%$I'M%l!c[GSJ%CB<%H="94=Kp#rTHA4?8r#t&LT3$E:jsiUfk05'qXiL(<Jt4EGSFIsKrV#u8r:I>1Gco[:;[1iGh"S3(..$@drTH3?o8+QA^Gi]M%lGU)#M?Cf)&5_MuhXIZQ5Ol9;J*gJ?rpT!"Ep_8;&4Ak9damaAr[/6U/]=a]+\N3#d_OZ7h621c>Mi:,-n8["`Y2'?cd;=4C2>J&%+m^\(5g9bI3gr/ZZ<%J$8s^c(?$!oa+Et>jEpA1e*'/K#j[ZJlfguq#$0e2G5LlPo=ss1M9Aec\G'KDKGFUL+iB5aX[mqD$39?YX%[+1E3YWUdmcZs&U6K_PY11.>jc6H.Jh@;/`-m%ade\A&Ln8L?Z(6u3K=BREGZEr4b]ZohPHaOqh7U#mRf!4;o=U/lY+&%GU9a$LS%Y$sU4,749SDd%FS4r\Ehk6(1,cNEW`e(H3t]_)A6H1IBdSq#^QkF[+`aaa8I\#`ZtEqYR/r8\7*OS$C'O8[&Pb0jLDkJ.#'1fD'W%UG)SN4h9o(5I-=E0E(+`"e.]d00EmrkG=N:s.XY>g_]@a(Pq4G^XoL35F:[<@J<Ek[*$i@[-lTo*Sft=3O@N?V/dZ>`]k@f^]';?%=4-3-Q_&T&U!pX@k,8"GDeZ?"`g<^lo?u+VdQ5)7LXgQokt<b=dg'6Y%'=o+n7IrtY>j?@V.W#gFF*PBeTZ?(s&5`mc=aT5l%q?]%:@GGhmaBE;Imc?2\%7tRTB@7<Sc2^`_?3eamg_ClYbOtnlXfDShAo-_'uU4/R3u"qgX6@MEo45Eh0W$so<\J.ND>P7DW6<!9B,,a%Xr?8'ISb0ba3U`UU=Jl006,6.4Rc=8I@g@(h1[/U2>AgM%?BlfT;\d9j$m[,8bB@>\E0?43c=;+aZX2:Reh<gF63IQ6;=:?07MmJ%98Yt.rH!6f07L_eJEG%$oG>8=*7>O)T7>G#ch!d<$h%;\r5>JY&-(P"9qP'2fmMtLIS`Z(g$et4]?97sZ+#,UYoaj3`q)Fiih)j$%Qg95fn[F#;bE"m\bg1e<o4NOKpm42>jsh%L94G[58+1oQHf"A^5Pj3Y1bQSi.sJTi.M\=#p@;/E^&4tLF?3:H7fJRnQp.I-G?GfI%F6QM09E?W/GMiR7)3-4g!]!S[GbC`/?U"i++13;#IR,k#3rMmYLbI]H;TL;HkU7.*62t)Qa#XVmdXfgGX.h_R76u=Sb2Xu?m2\6`%h:8QFKC6%gY;gk#k`o3j4aQ/rZs[JVGP'%YCTb5Ag2!n&k1J3c*jpP^FQqmWY<$joof!l*kuB[uFSpmZXuU[eOio<l&J&5l`KeKH%^#>iXDnYPHgMajoem!%+l2#1V?$XD#LJ%W.>ZGkD9t/o$a,.FrE]EKuo>DZY!Gp"\7uBPB?&$r=DnG%)7pUNFI-U#;GMYV$%PKWA%Wa5^V2rB(^UV<G,aT\<6`eHOpM;)nP:t($ZiQJF+6%H?PNNUhj\(f`if&CF\W4hfrS'g6W@0>nla0'pBD0OPkRp+Q/mDrhl4`)cF%!.*D#Y!6NkJ,&T8Y.a)N'=CS:X/DM#=SORl]=SeC:Y^9F[9%*6&]u&1^;J@FeEWaC7=^$K3L6@$!:%)SAjEA:HKaoMYIt6U2n$4F%L(csPP!kGq(s:[_=Eir1a03lk\IW%ep%8TeX0!BCJqK7u8JF.q]a^([ri5:e]&Kq<U*I]r\E*jdo[#-BarT\hCkjS4/0K)dhJnHC%*n\-fpoSbk2mjiokdG>0=(eE^!E)]D-=:id1(EfOg[;([!oaJ3!!4Pkjd>bmVL$1Z#)NOpK^@s>O?<W(f&(bB!O@$A^uoQ7nl^%O%XgV_(EQ\gFfKi,qncUjV=IrTpdtst#<PYQX*8P_]Q'\PX$070)@\.dMTD':b*S'R\>^GJrl`efg/lA&iH!4KKX@ib'7P"2*aEJe(%\#Q'nFNupDjm)rDVTQt>Xp+ZGeMT1k@%DMN[CVeFlL"_E#;-JJEVQi7<s'k<8%l7NeH-goPHu<hj-J`W?>VGXFN<=lFT?aIY1i^V%-[ZitC[V=W"2L[D1WH*>*e2_B!:-S;O5mAVB_<GL(>nGfr92\_>`W+q\jp_[mC1nloC;./[?nBM^j6.=c1U"[DSG4uRr?"Ii4q'M%q(V1#Xu^aN[F\]6_[Y4)GAYSZ>A"0\>^#oTm;[rW7kVR#_UBs,LCOFU'h=(P/antTV_Tm,!2]g!qln-/5Hik<G&4dG<1,NrAsXAP%cD&PG?AVoel*>b']IYiq:>'0?iIQ[DH%-gp\e7An35^#kH8@o`%7^.7je5,7,oO#ageZ&=8?us\,I%koL)"81.gip,X.`BET(o3@%dtfPHa#0q,c'#sJ:$K%=85B(]\M_7hj"b!oPsOKJ54O[B5_/KkL!#=Z:16!se3r69mj_4;@4tD&]AY@i"9Y">EC7jElQ#>aTrGTu%q72?UT!mA=NRt=Q#lV*Wbe:4UNSf!*]p\)#5CZaohQb<e]5c0s4SK*LIa<Ato`oF2^[KjCl"a;2+*75od]Yh.mLT6Wh`UPXa8YYU%hf\?G;Y,@h0lls\NnNLZhYsF&q=2f/dhfaf:S7H<O8S7s?CR=EDoWZtC?Z8dqkaT^nqk\Al/*P/lmlFjjPpb7n@SFLqcg9UDP0MN%?h:`+rI7$0ci<_3Dgh6C?hqR:rqastp6tXd)NX4hC*`N=DuI#WrmVauo!NCbj(n\kq1h32Vf2P,Qu_jL=7AoBGQ.@j*r=(s*rX5_%*rWrgrpGF-r9_@hTSlA:2K=-CJ%YU5+8jb=5P)r@TD@RJq7n*Pm]WaR$b%Q0C?V$e^\833^\7gPq<1=5nq$PJj1"H:Nd&tp;[7[d%5I?[Q[GQB'rI=TtpV5fKn(V(ei9o*KFij:co$CVe?+BXC696k`+?#Si%@l%YoaHgU:QH$.[ag\hdNt5"^T4'5Z/O!g'kY&2cRV%k%Cr?9jkN#"`'FSIKV%Y+!m!NX#8r>7fA@2Q8f\Li[7^9!/'9$@$CF7?gP`;#2?g7hJffSEe(@l/E;9\g9%<"U4'd9#PN@cAt(gG8(%Z?O?`bJUU^Q3iXn,^=YjL#Tl'1=+)O:K*EsGW9tiBf_aMJ1o;ldZKG*P`M\Xn88o#YW$5tH>i<"Hc-H4=Q:QGjj6%-hCb]uZj_ae%&OMaM3BEG1W8)1"242PJ_l61C)0sHf_#X8$9QR30"n.F>$>?s3%L*/,"*c;d67;VqH_J^0:8bRN_i2$e96lU`e/_VE'Bpqe^EeN!%4:D=hSMW9(U5))`4X2o$HUJaBEK#=.XIP2#G^,).%#sO50.X?@)-.A41c`Y-J5pMe3D`MI=.8Xe/6L;.`6,<Y8*%(aYR(P<,?a51%\M_7hj"b!oPsI8X]aR=NJO5-Dj8TJs5fE7&IeeZ<$7/J5TsqK:kW!5u68@3oh<G/!('u#=Mco!A_clNF>jZ.+E(*;PpoRrf&N(hH%1h3nJ68(SRROJj6+8!,d6p_SUmJh(sJhdsrj[c?1(oc^]pcUe^R6hFI;.qgm5lXt,O/tY*[<+_7YO_5)'"@U.knhFLS;NqsD+iBt%[N4aEg^<gsn@[Ac^RRFT(%;%9o58j2:S)dQqgS.K'AiJQc^jR>hu)kpp\j5iVnDIW:HRN^^\QP3n,(AQ:AE[a5(6N,<dES@*Y.s/%pc8+0pc8+0ppnb$/lr"#_"Rleeae-nnU@ap3u8RfYEXA4@c6(&kDPbs$^LHY4C<oW=3L2h`;=_'^(>PH.F7n5qeg\.\U!'_IU>kL%cPOpjMuT,rhnA%L4KrkicscRGC4F=`993D#r5K[o4FYQ&8fLPY4`\g;>FN-Ya2Z/S]:3[uDK0'O%X[iXZ[648Fmf2=55=(5c_]bn%\t-m"%jY(;LQ<En%)gK*s.c34m!DMjn\k/Cqp\-nIkDdU4FX)N^E7hU4]^a,huEG3rR[5tIJ/@2?[VBtB7Kd=Im*N"pW*5Ta"AqI%FtK52kc7KCX.Ag9:2P@OafdmMDS]<]Id+-"1ClVE7.FE)^O5"n-Q[]o9X>TV!PeBdT!C=7n!>[iol':VK+m18fpk(u1Gegb@kN+9%"l+5oOj'LDFUJ`4"(Ug*(@$nk\R0[<J*t^^b+@P_e>)4)a"]6&N]+m!HD:<t+>5kI:u$ni?[=hZs&Yi#578'OIei>?kBa:"#7hkq%`ZKN4dLd]W4T6-q2ZkRcY3A.E=9[3iq+i&,2B=r&al29tn,H_5dn:6&h:DZ!NT1O5;>I;M(V]YCiT#\H\b+I`^OEJG6\_3-nG%uu%%ioLZIHm_qfLF3u,3Z$2WBsZF8.GF8Yn-l-M?>_ZJpVilDbh]NhB/k'hD"OGeM+/MAT`s4H30$Q+9"hX<aL#K0o&D?T)+BFWc/0d%0;&4.rBY77LTg)oe!J50Y_p$^-pAgG8F>E/Ie2aa37h"PGN)BrI9A?q7SHW'42*FGejUDq6q-j&4JD1j1tQ@$1]d-mOdFT<>8`3T%&HD*ds%q^kF_>WC8+-A58,kDG)BG&-JqJ^HH/[GK4T<u#k8)l4Q:;o.U`f0"&;<@+HgK]%S\nmV,-'VNO&8`#;#.d(>]QjbBc5>u%GUEj#pk.Slc.C[)=!\^@W-h/&[Y;]i,UK\:$d'PbBlO-.H8K3tUUJ8Pi)/8-J)%R)_nO:@P`3h]rLZ>]oZ/$>TKSI^ZOSo+1].dY%P@Y9N#r6m>=M_oF/</!;TKP+XUBe)-as.4_Ujpdp_!$%$P821<(P/:adnuD,7O$#gs'9Nn6ZY(;Z\BJ,5+abH.3p:iq(RCXD0_j<%SGgH,ZH^EV@>Z](6tOFDTNruUfaG2<[8HZbm6Yf/pE<O$([$(aP,%td3^4L?UpEqFB6:\IZF3QK_MQYo@([:o^[ldWq\:oS7b_4i%-&YJK+GHfmI>QU^:>^'oMl:H>0&UBra#)9"/FcdC"5GUn3Or-&=lQUV<mVFp/uXp(YV_+S@<Mcbo,2kGSi/KirP^J>P#)93;J:!%%$)cLQ&1<K-D.A*fZAVjQa0Ha]P^"uu[?6R%fJLJ1__baQ*]r*/Hsn$s.ftXOr]S;b")W=fhU$(n_p'$ar3#0e*i?fOk)Z4Rdsh,A%O.l#,-E4qEd<?n!H3&Fq:>1's_rDtGJ,"5`pHqaUkb3%Epm&JUFbf.0m8=8:bKfql7i>*AhYmNtIfb%2jtjdG5IM>1oY"bpp#k3.%5L4MIn*HIo]]i/jf*[;Ihpo3A[C+fU+MD!j\loT.E?!&6d\ei^W\&fo;>X,*#skiFJ3m.q?%`nYIQ'RSA_]m`PQsa+\WM"WSW'!1%Xr;MfHI0*L)BC"taV6>%c'02$8IS[hFd1e:b&\V\'1J&ddV+Aub(1k%.&%]J@F8CHhD%pX%#LteBbkE;8YTq19Jc.2-qR=*dB#,2%&f)gX1lFVkB356`Ufm2kS=1p32,h.X&7G\d8g5OeN*tO:6Z%D^S.R&k&O]g2D`/ct"d$;\gGbT=//@LWUcV0lX/:Z.R-YDF$(ife%GW9fl?W&nj7RZDrkfk>@c%:_ETO8]f6=SEF+^%`VL8BT5U:a2!-mED>2IY4"fJFP'<iku&CEA*WPe*'a_e^VNkJ^7_QAic@K5>c\%KOdh4'PQW3AO=bCBo68M\r.np&uGA,LsN.jPHD(%#cQ8NR:l#g&P,]BM/a(E8h?_oC'RP-!fY0Z:uecV\4)YA!Euan;$7VJ"?phU%8UCSH@#Gp@%u>b`&?*jHp_:Ur`:,LMcmXG3ZEb*1,Z0^r,DS`Z&AZ@H>U;2)-tO*BcVUpq`lYM)!uU#\T^lV=j`i*`+jG$?E>*pH%&Qi1?2aBcBXc^K@-p]('4Ih-kD.[p)al";GdR#0</k0Q>Gc[AW!J(tSXTW)^=qM/P[C-_%A=6n_#\BDO\J@`"*+u'*&d/VhR0Qq!%b<j9[NPs&#BT@B:Laof8"OSW1R_lSMD35sbEWcEo/QjtgWcLGs/6`5bP=UO&'W5W51t(:rBSO`_bR0(LWg&=#Q5dp)"^!r]P8WCO%(bdm(i9cg/L/sD59NDu5A9NRa"@\cF'aCno0/`rhj:\:+%7_is$UU#ua]lC_*D<?6.5AbX_l-!u"@smXN.CMUC4a9A'M"U*5qHaQ%`F*r(ZdK11!9@-VjffR?CkV#++F6G13)ueP;aQ$cL=Mh!Ub"XS(H$e'B-CpX><A2TERpe=4IS?ZNfD88eKp-B_+2;r.4-B7*#]$8%d##-H0igNP;&qDbN55c-f#I1f_9+Ki_"C1TJ5K)k2Dk"H<oQQSbUDs-]WtXnf#'mcUFJ'W_pQ[.CD[l_'q,^TQ81^`#;%am#bie`%\a>-<WE;,!fdM_/gA9*dVI,E=3Udo*PX);6(MG-GM2L"3:TYrj(l"E6)HBnd,:*W%[(>HNo9*Q?3)`j*S4BId@;B6s8Y%M8i)nML%1]uc?`>CS&@>K[/i0qGTaWu[Uj]G6-5Qn/U3O4ZGc`pC^0d$JA:2+6L!RJ7=JPdk^c\(iLAOYd4!*2L$PecpJG2b?q;I"[_e+"jJ%E#pjDN^u4!8Jb9%7rBQAM)ga`BZuRR=3OD&l>`)RCB_C^6`PcfX4\Rt1q(a2EktWRQD,i@X'`bMFC@SL?nja/o2md2$LUe4;/f_h%PbmN-BW7$'ke`.!_*Zg,N2"7<r-#qHQu+\$"UT^pF1bUh_0[-d;7mmBS^$B;^VS5u/h'pb&_pm%Jf7e&'",a9Yqo6)HKX^L0Q#cF%e>(N:iDNYHfnEA0>sm8!>:H.Zf6B9iYng,(@p-iO+eF`P/!G?qHk5#XSjaseZp._Uc4sD[Zm/DB#'(]g+X*'R/JF7W>aV2F<B9kF%j<4n/$OC";]?.`8R8U=tQprr]L3c<3CK"mN8-L2(`[FG1d6!J#)$R(V&tOYS?_ggVs5miiK0s[9&k8#liDW`J8gc>c8uF)C?N,IM%0To>KitRLj#:KX@Ea03QAJToZi#A)a>\J4='t,*p!g6O6*@+rS,?Cp?J6A25'Y\*I3K=kT3Ojg<dHUh;^BfFd=N)IEL+ijqTidF(%KqM,%JkHeK%Ym(,3:/UZPa>c.$I>HPC.E(6,XJ$eTit&(8LbCFjgDrlQEVg4g'HNM<?)1g.eTc+bA*JK,Qf>_gUm6^W?UGk/?eN[%E#Dmn31tU<Jn+F<G>!$:GG)S0FZ6e=\iWic3*Y\gZ%XH\!Bj6N+RNdgRB8:j/*F*%&MA)dXX9+*.]#Q3*@mDD1[J5Ge/JD"YUY66%=*@#q3XUeo;F=GEm7KlKgq1p2/`GNrSuO_cG%%L@>^#DHT8Beo/@Lr[QTG$P761+q6;pA.Y]BbjU/J03o1G:QNUp*[<0bd2:4]KE%IT'Q`9`/UGikOZ#Co0,=j:6P,U)L`>GABH0=;Di(<.>>&-oh`S`flFK4OlAV+Jk0a2,bCK6[%JnGtJXt7Tj#s'%&HoDerJ(+6'S`%Q'\jI:/j4b,n0mh+b]/]QD.>\MPZPXQNmpK#9p&[a&oUsFHNF\f$LLY9<3YU:3Ka^_"Lb@/poK/i0LEid*do?q\bDlb%jjb3UI<N%dYqpTF\s&??n*ZWk#d"KHl#&Y\Y1p]G6()I^Cf6,bCVr)*lEM.CK*;j;e!.;"OBB5GJ4cm#,19$QisL3COe8N=3"Jo"!h:AmUJ]W%,fK2c.I9&TA<oVZH#R.HB4r>`T*],OrAOpDC!18cB,QT^WT#(&7'0Bq<'t%4B,,6gW8=e@,kZ%.U<Sjj1J0IgB6ce4>;R1;4!2R0%JVOUIGp!mMk<rknS*(sQ8]pFM)%@M#.s@uKoTEp/H\s,s9tg3/_*p6kIS.;m6;%ZubYk0AW/s):`UG;8;TeAn!KBWU>\D/q$\4Qi%Q;c`c"pl9IKEN/5<ih<#hdk0)&U_u1&;m+<3?Ru@VSfH'^6:GrB?jNA*#T)q<Q*3p:^jlpS2</\kj]U[BU>u,+Q<Hja>/%'%Xo7N%7RBJ%U5._2@jA^)^nM!#Q8UR0X^tq0-(-Zd?tjXkfL3s1W%^^1C<c#t7]]*=Jf]]VHjuoG2e.uD=!-,1G7r`J"uC4KRhjBYUN-D2%!/=s@WLZX"]?4,q72c\?m-mGOMK"m&EE*YC-(t^00=%/V>p.$o^tN`Dfn30p\j@3:\JpR@TLT2SY#6'X9,LnGmX]8d$D7nEHD%m+%TEi2Jb73:XQ;J.ZMs+@Pb!/"$U]!UtFT!l,YQG9K.B&L@O:/\+!eS;+%W"TqK!SVYJMgb:<?oU%-fN*%.("SeNn9%>XN9lnISUe6%5U>-d+nB7k??mV/0.Z"tcj]?6AS"Ff8%i%L@>/YiZ$=bLV;:I(d?B<J?t^ft%P#7l]V0U=Z$oh0,@Jl_Yd0+MYu+p;A(@(!6&\p,%NBAq<i%nB*8R<?+aV'<aT&H"*)h;IZAgMd/l:*WgP_!][F%.sZEXIA&Jf<%t6/?LN6-ib7kfgr/K7&IgV5bhqrRCP6h,'2*!_V7W%f80].\RHq.4%n!`1$Aq>8pqgfdpdkIV9LbfS'-"B2Zj570mh_kAPL!@&PUX>G7RqqWN3FU%XF+B^a*jq"[hkVJ#SK*jT?7aGW;=V%AQ+eSl/qP>>\[$kQ\cG?E,U78VU-"PrIoJQVEBUXPbJQBRn78a3hgKSg@7STlHMVnW0;IFJ&q#NR##(O`i3lZj(T2]m8dO1ZrAGV%VrU[##db3U"f,VLdUl,4'R-Z:K=4';,[3+380)]s5j9dh<XakSQ"&1==lj24R_]S`#79K$N&l=ldnngL:U`UVT`eOg0j`6PU".ZR%2T_2G"4[/k0'cNm,M",;&?!l]"-bB(<K=p4V`fZl1J4)e$UFfOcmR)_7eAT<[l[ZAKGGj9aUr;`#jW,F^C^"DWc]#d4g\odR:W11%.3PHiH"P[>)0hlh:9`?B29e/nV[Q0F;>*Ng84+(dAbA(4@TcpXA%S1IWR<(<ogeO<.P+aAe#Z`$0&N8HOpSEo'a#)<Ag9Z)>U@0)%V3XoS;rcfjoAJK]DSte(N#-5(B$_9L>T$<Oi:kmhfiTM,UVmLH[ZK6_N.t9ioiTd"QArnic/l,ha@1S<ObcAbR+[9c'Zb"Xg[,Kj%Oi_qi@s<^eHRWX7_[S#Qn9eA`'.Ac)0oAdOS?E2o:g8HZ'R'7!d=Qg9g_b`Ig&\'l/;;[N:!im!E&Nm1LPVWXMA";+==OqZ38BPY%NHhHc<aQ]=8>T^?kXqKbMJ7!PG_etB%[e#?Ntoi-E1fJ-K"rI)pnN<?eGTlG8,k#hZlG]",0O`DJB>+d:PO?K;<g7V`<r>:V'ucO%)#in_?/@\GhSH7n?Lmn=W_G#g8n3Hjn9cdT=o(8-'oR_r_S9ppGqV&4aoHuG`<'ai!UUB)bU,"Dmblh?l9>tL3W.M7`)M+S_4eiM%G2binQ)Ho/T?ZrN1:GE4AnDo,5o)I[^/AX@70KAdguS:m<V<K&]J;OOLkU!WejJ0/S1fmr0"cul>-d:f3aT7sV_YfWSnjIhBcg*H%mn)J&+PAG"$auZ1rh+:HpHgWUG>*^(pFE__6h(;D=f;i:4J$R)!7FKjeCt_"2QKSOq/BlNHm`8\(QTD[ACI$QZ<\=F4Y`7&?i`j0%K1"?!QngKgp!:\<KoYjlCsCAlW,]<UBMbhal+g7=SMcH$nSgC)0c#7"'eRAq2T%4lgl]+)W$.RnmncbO=p7*RMZrR0V8f6Si;lST%(YtI$`G>KuZ#:ASCR]NYn4JlsGE%5)V=%!p;UM$CU)j![LKs3U2k=@tJITZN?dJ='WggG6NM<:U>:IE*E*jPk,96KI"(/Af^8C`g%)&JV!3=c=@;(=k3pFE_P.Qa9`P/VUu1h;"@h\2#_^uphb%NQ4YGX%O7Tmf%o:K2EcR\]Lh:M'&808lTlG*A]I*3NNlS;7V*LVf1$%3f>Xh]]n/:nou])!NTl\GfcdmqJPLST$K85WSn=3nPi1.;iF<rU\,e>/atJFLj1Xa<lD?.\[0q/+L[l$`H#"G-Gbe].J4=f"-=uX%rTR!<B')&l>>%6(HjV`O$=j?]piKc7kn/kASh1hcJmeR#DV#`N]K:r((I[&m84'Plo&AE.N5ju*,McWjY3<:rflY4g[1SFrmjW83%kSh!Bla]aGX7P.\2+hjKd;X8mGZ)eKU;Os/DJ_7n_UCcN!3:rCf&RH&db.\@HUMo-#]X^E$Bi\f,;tZ`?)S@BeKkg`b!QII\S&@/%5amTVZ3p%gZSLKaG2Gp#o2)c1a(n9P?Lq7QCQa210e]Zml\rk0(:cJR.CcejWK+*a$cU!Y%4%Mpr>`D`af$ftASd(U[PI-7QX'eY%9$?[Zh,dX'-Qb=J$cGnJ9GKRa4p`LX%*bQLb;'dmS:#ckh?@8DUO:4m'^)DXWl3;:o_&X^'!Cr=%X6CoY3PKa+bBu""cnSk_"YG(%UM7">M]P??W_[5PI,bIs5O]P;]*Nc"3<d"<inRkN"FAfQF4>p*&ZCWE+#)2uOA2G^J+"&n"!<8GR'Lgf\!'`3QH(AHEThKIFE9d1%q=EUg/rVZg8h3q9abl@tb4Wn^ZT8@K#D$Jo!mU_b)>8HZ>$R:X`e.M-Kq&aQDLt]';SW-p0QadE7)@C/Ys^VdF+@[[k/,f1XX9d#%<<ih17/5OKbU<s]Wcf"e#1D3"X)5#aL(f9.aX39r-,cbE93O2m?nOM\??C"i^=+YFcXdaJqoGBGWs;/XqV+&NB!:X`UZZg0l,HBK%g1N'6Eu2M/kP!emUN/X5%QsQ4.Mqkl"lb,_^m.*uZ2Bl5qs@ijD0-g-g/UJ'IAJ2Rq,Lb!06rlN!d\C[R'DR\?J:_NjsZ;'?T1u5%0hA\m;sC^f_/7_N]WGA'l&4>bn&ZgE4H4:"0FZ,'cq,_^lkeBnLqIt=(,91YLJb'UMr/:Z+@@/R>Kb"VBFEfha]QYBFNJ^)VXE1i%-'F+0;H\stNr3]CO,nM4DZ?TcEqq3Jm@mKkN\KYYYU20<cFAA#*q].@<`]lnK7L@J!UEf5(0.<$H26QM9&P<66[YO7AGq2;TA-Ia%;OMiM6Z7HlkT/m&YEBA83*bfh"mR:7Y=<0jmsV3`;<e.-N?^*LCl+G)fmERRU\<aAo7c\,&llNRNiob"c<\u,8m7L.n>t'0XMD/R%+re-qOfb!E28QD^YuaP:Hf_GAoOl)93Ue7@ku8]lf!!"M_qN+04IJcSCE)"7Uh*:;EKF[!XQ-0maQ!h!o(K^l!n*F'FaB*Nf:;QN%!n+mddY2k:rW5Ykpl\=)n^'V!<!BssVBfA#G#Zp*\g1Pnq'tqMZ=hM$OFsEqS:s:Z]hF:*Y>faMK[t)cO^G-He9.ORX<sjP3JH=!%8@4@@a!X=\;c3M+aGPaJN^IOakoAi/I'jkN?&Q^ts-M(@T$#Rt\(6L.$kdO(D4pVLil5_rCR?T-&LnE9G:KSH>a,+M#=M\u)l5[#%Mnns4Ftq?k/<KqU-?+Q?:DpD/6dh<!Y4K"+h(]sSgB*;,r:bnF+A$$E*grBDTX1`Ld30n[H3fg%1$X"J;rA*]UZ$?OfO4rF<j6gZ%M.1$A'3VSN8q;tYHZc+X=nHpEZGY;=n`m%b4Cb^;(]#he#^mNrqQPPu7o:ijAX.ZFbg?D!fn0T54+1I:hMJ-3,Kr"B#&$V]AsGrQ%Pd)aS4MhMi"^kY;H&#P^AMRaHqWQ97@[b8@Z`8tgbR(X#,mBaW6Y&/$[*#aA15ZW'$?777g]FNjU3_PVH7p!K%>![3(aU)N78BD#%m<!`O.-)6s`"+G]4r?M>7Ok>]PuSF%auEf8A2N5LnS8=$SeN(JYKj=B:>i&B6[8tdb@up/#87j1E\HBNnI%m;5Tm'e?t#eW.-MCJ%N_C96^bC@$FQG2d?;WF%?CF<-,tT,_VN:![D\P8,(ir2hQB2]O08E]i#SeO[m1fa4;%bY5GbU=HdM,\<FddL=HeFC#BF:^Q?poZI%H#YT0dur+'-lOFtf6'M]%?BRM>p0Q8-W@9,%o$A'62L'`oKbU^RcY6DJeu!tM@,Q)!]0,OADN>He+>>OM&Qnm`BmsGe^6)).F[AX%g6C'lN9='TPHJqZ`5FCmaY^UJ*k<2Xjfj2jRSf4!KQqb4???%U$mKJA9J5R'o>ln6Yt8,#@OnC4iiiPp1;F1KEIk_oLb)RfJM/&`%X%oml.2&%#AY;T^i+K<<W.r>Bc5Ztj=G4bh:=r%?ifhXh;F;A7&;a9].]*H`.h\"EQ5T@,m[?MZr^8Ol<n/R7OK*s)YiIAYMP/=$%@]-1$>EB$q'tRggMP,n/GEicXA?b?$3AlbQ.P44,PX*)#mYQ_A@Ug_L6]+IB`"L@1AZAp,g/X:On-Uf>W\e$>8Q:bZ'OGDa<RaHJ%.q,dJU#X%k$en$^fu8!ij+T&FJW?Jp<'YBN#n_]V0,E5onL1GUbpGR6hkC/9Os<oZL\Os3?*M]`^o$keo[q9Y6f^KAr<VZ$28tPY%$Ko5UdhJp.")BOR7G8GR*p&(Vg/XZi3D+#Mm>Afs"<$hr"$^2\V+fl<6I.M*>BT_iM):ZmF<Q9o_=@1j#Fo22.MV&;3sqmt$:e)9%Mi.A:ZBepl\&Qn^fTC46,u/U4NqF=BYT[&qUd5GF*esSEWIM88DirJb"TDVuZoPsPoBP37q4#iB1&5%u#!EUpRo03O<JK#<<J:/9%EM$:.W5Zi$cGUfUU;L)rC!T)u0?'2Z@+5t.9[<^*'NUUb:(HnT^U=QE\HFXWc_j^dl5.KS\r_h1!`3nq.k_KXq8-;*]BCGfl^;N2%SOEJs9VLQno($_Zle>]Di3smLc,FTG,38-HTh%5+NYIX!*;&MUr7X3nDhllTn6CmHZ"Ue3KF0;t:)&p*;;9q4%+#In_,MsmaPcf_%jC@D-($!saH=df?e>P\=m&*<C:8Xd@92_;jf=f9o$8/pk5rQG\aK$t]C\MGg%!T>m./!YU!@kAe:IMNDjlPmpo:P;JoII,Y,1"f,%at;KkcK7.s!]GYeX_u>c=O`qKJP0_J<]J3hrjkXsP=h`^<<sq67\R++af(;JUmO4af4mD_"\.`+`WjQd-:Z4Yo(\0jHSk]5PQY8m%&ljoUNnup%NT+$0eVhPr4799*e.Ln.CGZr9Ul`ctPPa[fcCZ/$jMGSU(e%7TZ"hhZ]\<VZEWNH99!Hb!g-$6k1u;k$a<fi.Mqo1*%!p>\+rIkN#A%a62c#6Q;_[>?$\mUs>4Y3A#%Uh;rNECRVUDfbu6143Ogh:)SW1T8^CQMO6j1Z%ZO[/a'MUQZS25@^#^IP'T=10'f%C)Y7Rj@F)=5F.9r+^3-h9)DinnK0j,WH9:&M>>L3*W)E.5a^8D(6YqM3/V'4^H4X??1Li7<E:?Ed4PN?n_<JGLO.2Wc_V<6I*AjQ%Si9K+0sUu>9L2gL0'"&=ADn0E<e&914"*0[A%<&hA2op:A`Ku6b<(I/("._I3(?dkJ\$N@q:0RH)g+R<U+#'CWg,)-R;e3%neiQV%*kT5Z/8pT?G-'^Cl.*VQC9k#KW\Ma8T^[$$R4p$Sj?=\+O#h=(,G.tl5potNe1`6'1j+&..XQB`0cdkbmg)DCq=&,]&^T@4c*N#/%FK'%$S6@S!f40j2F@Mhf@\:hY%g?O]d:e[1,k2p7;c><4/lp#3,-H/L;3bBC'DEmW=!'.hPK/$S@XA>#hEjE.ks;C=B4XR[S;CfC%fZ?H(XQp(-/&P9<;3!MNXY6GA0n"6sRmHA#\PbLDFoWIQ`)AB\*i**`FX.RF!"5ab\efI%*I,hon"JadiQ(ang$-(^!mY6m\aPQP%#ETt,iC#X?;<5\6KV9r4,)7pN#UB:eN1_J.lWH0%TrD.'+Ii\u)+d?8$+(tA_q2"WQ3I_]A(e\K&^koL)O4H]WhotgbPDld(rKl8%;b5uV=Z):[l*m*pZn!(Z%Z(r(%r_!/U!`UHeBQWr5.Z5D3:ge3)/hDK2Xmd$Nck^nJ?"X+h=)stOT^Ra'f/Rllq!sq206]7=?4g?%G[:g\'c3ti#?XNbKkdAl@9>bB6,0.HP=?QLWYG^a2V1,coZ:aq-W;-1d+U'LF:'.I$q9%,jP`ZXFR'RQmML/bDQC:2fu4-8Vojsk%'R!0TT.-Q6<-'PiFY4n>UT=`?e\WNggQ`Q=<EWQAP`M0=!jQ$,3866WX='SBs6n(peIaBu#>N.fWeATo1R]2H_F5$o7N*@A;$lS1%,FGF]L":?;c>C!t,NRPMW[A_.`Re%C\A?et@N/TQZK-$C0jo;ZSqpAI(XB/&o>tsK4=Gd&(<s6%F<m"A7+*OV]J#/WAQVB_RdXCu%O#<*jMjD`CW$e-))B5ip!!'0QKrPXnlZ'TT$9L9n/rM_[<.W(X39/\j'(0XahD4E=9b/Mp&9!g2`<CELPDVjQT2s4OU]Xa#f&sB.%4tp\ro[L=dMr?qF'$t<.%Cmn)Ef2O8),TUCC+W]l/8KLg[/qc%LK;=G>T)L05S.'L$H?__qC7$=)nm3@i-D>Q2O_'^$_@c>2fiT6%WrU_\Xod1iFVW8g*7A"?mtiAHfsPq%SEXX+*gA('5KK+^ig^7D,t\_I!,;ci-'7k54P=3<K#<lhjE`\D#iHC]ABKhR^l]Vg*b.*s%c'b]#[ZWTS;j63GcCT&%ktuO#8FjL>1+l9+9U#'-C]t<BLU[_=Z3VdL*XYd:L:.P$#,`Td[SXsi9luaWGa#(9ofbkg$TVt1K"$@2%qFX)B^h[sdG!S6&ZJe\I+s:,;=63"Nj>6=<)8hWa]2E=`Y#c)T!2G2W_lhm+./Z&gMQ7q+R8?;%15X)#AJ>ir6rLR9+pF>r'`!L&%*,A?B;n&*XJ\g3N;T-YVhU.3likS5d@L85KXK&%)XW:J001g"cgM.^>\Re')Z1Y>-W7ea[8Cpc$@1kD;\7(Y6l\S."Fs@udARi8+%r[C4IPO=o.WrraaU8`[PF.J/4RFDfKd[<XoF9)L)ap]9m6jmSlVD8nqh9-`kERohCUah.MTu3jo\uqj\CaDoC]J0,&>t\HZSgf_Q%4K9:EKC_4mR[P075Mb\9RjlYq%Ln.thl:o$(s&pkEHQ8%HR9;$CnH\WA*N^7oIAdt+AGDXcq\Bg];`Lt+dgG#e-L\jHSo84O=ogq%_!@1b9qP)nM)(3nR]/u'ff/1_k#(HlW@`7e"V\'Hld1uZ[_'[Rfrc2dQfK_Z8C>kY.#Rka/VN_hoVuCPK4ZUrR*la%9@dQ'=!oIs%nCBX]lU_p2`7FT:PCUGhS+-oOH`8b,%g'q+s39\8LiAc8#=0QA%-M,$'*N>@c[M=\a'&\Y[$<5Mj+3;tmXhI<1m)D?ig3NhV+.0+%.%7;^?X+>LGKN-0..Mj*;F5JflQ'bGD!d\WDX%Y&C)^V$a5"DCCk$K#@m*gR'WQ"k2>Q9@:Td!N)$gTB*ITaB4el8#a2mMBdCsE?%,)1]nW8sa7Y+DA.J[9q#2QEISo8KTDYH'7=lcT_nm5<2'cB6h^$8e"AXUe*aoQ>/Y.=]"B-PGonRat,&NC;r\Seq_n42cjPI,O@S%O'?S4H'@KTS9Jp%^X:a[e/(FPY$oV"2UO?_is`"d6`ZNo)FSjFS=NbEm@ErtB'kEniB!;$\i)oKI2t=DZ8L"k/;.:,dBsl?(05*[%H)qQZ>FH4RM8$p-N]#]`hS13dcmEb61^5/raAuYLDpo]B""`X5B@bD)iEP>C?naWDlZ5^3)n],;q@qoI<&e'[EQVp"Xc["ET5aTb%\E2!gYENg>opoo'C$kLNc%Q#"6;,Yk;#Njr,SJs%hr:cS[?1nbRAS]U@Q*)IdLe]"'_NcB]hRp2lfj"FA?'VWn_`-R3OHWR3/,Z2%V*8fIdZeS8*pmb[PGc%QU=c&AA%gR:+PjW^6#.;^JYCjMLeV]CM/t3_m>1Yo__AjtBXc1@(@rijnK]!gr.q]*5M/t#(Mo<2*6cUa%U/9_lqU9(\]4Rgr*R&9s&k:W>El*?QKU-p@-&]X10Te\BlLA^L$Z8BjB;6[c]i737BFf;EL2'p/ZA=Bg/tBa[0M%1e>-/b)nFtM*%:m^aTCG%S?_#8,d'nVC4B*LYE:Jn5W4i'$'d(A/:i0ip!lAV;tGm;Tj`\?<ioC3/&!:gS5$nUWOd&ue.";Km8)dhn=/7VN^@_#f?%=:ibI][MG<Xb!nRiN6KIgsk6q<bEc?ETa;=n!Muk*a"nhDtRs!Ffa1SIGFbm1(iZ#&7#Poe#fr?mZ_oH'KA1`m#RbRg,moLcLm9K%Xb?r[p8j)0A2LF;PGYdO_qqY\QJkZ53BBiEUC*IR50SI>j-aTJSIKM"!VH^r\?Bs7?g!t$aqm[*<[:h#*7Tg)Q*"%`9nDDbq=?Jh%i'Pr(cE)-\#,oo54r11af1K*m!8>iKf'5oOB8Ylp/6V#OWY7ZTVfs@e^f#ch)!*S2ddLH_U9V^[[:VI$6E[_)O-f.#?=93@c?'Xf%bi00@PB&58C<SO32h];t@-`UrUh_Fs^jI&GR&OI-BkSS*<O*3k<o<7Nh[&A_cH+5*='T.qMW\Ap+>IZK?.U0?\#meR;^-/"LA`u)%n+:;#'g,0N*:Ss3Dd%.=+UrDhoAUZ*9ou'9IVuMlF7S@bk4(iP.)7JiXZcV5mM_ue/f7T!/JJW_U/,`hc!lIgTa,2a0[W/_8uBRO%2BPZi&ujQkGC&:K"/$KKd1Bi?D<[6XW6m1LH7.<&R\8EW7Ykf^37nU)&O+k`C<j:YYmWMc8Edb;n*FDEM6NjIei0Dh`hq/_e#n5A%"Lkt!gusEq7@dTb%TaS@Qia_">n9=:Mi3#:qGV[qBB(EA?^_<@k%/k;+9s-\>E+NE-<l;L[(Qf13>"le=^KEL%%Qrb1Qrjkn6Cl6%hWUI'YA=F>aOU3-^,r]lnDq8]KnahkFZS`<6-_%cL'MLl[&`So-Kdlc,60QZ6OR]%K&/Mu[<JeHN&\B!'OdF8C\sJAlO,J!,irN:%C>E4oNG`h5AL9*mlsZ3D9mqc)Pnqr+Hdk$7OO4ilOU9SGIaW4iQ2OCtf055l.(rU^":mfL2%X4`e")[rYb`k#5nr6b&5gj.6U4+'%QjPg,+qt7D[2sF#;$[_N#YTt6N!8_O<6-aJ7`88>aZG42#VnLl63[$7&s:I[&^f/%`@`>RKF^Xj,1gVoN>r6FE@6+t87.#$+A,<k%Yh7=#89(#hcp^4\l01g1<3T%SH$.6[3/]-+Eb`'H&Ok0A;43p;-eon88_`f&VFQc48K7k.rt?Wp_o7ilGd&5^2,f)s5ea37Q#<H`%Z!+rUfI;Qg>'O4O7LZ'?<Q.:,p]=9s&f)N=Ob>1o_jD%?V,4F7(keRi:mG/1W)4XjSqb,+NPS/Bfctf(;2gPIKr\l<qJ;R4Q,jGD%`8F0!<i2T.,jL*m^n@J?.@GU)IG:L!Ub>j2=>aN#RZ;(qYP5m*:raTT+disc\4C)]OqI)CgcVH]_r=2(+=$:Ib/f94F'G6G(ZJb*%)Ue8J9B_f&:3u$qKOb?*q2rLu^22YK3Z'<q9.1BhKIAb.:Q%iXPF#)@-;IJKJ\aW\$d+^U:h[DMFp!H(QGC)D\X+RV9&`C)P,(,!%RGcX@,IiIp\Rfaqj_iGo-$,#\2&'r8D`QsN9Ju_Gd;7.n:f*T#cj(h>/rYIr*)PlZ8I+7b(7X\L;5*:PAt*'(_:Fh7kWo)WGA#<'%+-b;^@;^(a,;@VQgJCk<.1+Si[K0kBCDKSo'H5G)qH-CR%H$Gs+P%0q1_km["HgfG+#h5^Wp,qu!nD)<VPghC[:;Ql\Rh]mS)'Ij%3_&:YE@rd3nZ8t\>S^<TJ?6)b]AO#"'"!]<i]H("58@6UlIGO0POf]j8OJ1IXi0Tp(%!?iC0*f)4\DSLrL(5sXs9Cj>Tn0]k=6h`%K`Mp5R-iLDgTTI1DRnU"D;3S[jN16!nZ*EO_Er4,l=pXDZIq,c2W!8hc';F,"/c7=5+r8sUj3]U4iR'e2lUPqL^eI-@Su+8)*uq?%DmXCn2T?IpT5e`u#&l%M(?jXt`ZXfBk^n(G)'u]A0paM)'U:,<K=UWC5G!c@:o*sIrf'?r1[mB8;MqoYSkq]'lSai[3>EJC[%A9#%KhE(rCu`XJ$0?KEOV0S\X5h^Nn7i.IQ^b7fX%o\(Es7gKIVMUN%k=nmR!3ks1;3cWV;S-4[[EXdE\;WF?5Ck3jj%;DG!T&M<$P2J%`*f#l3CDJ$;?K^QI@\:IFeJUN[7Z^;`8?-3;9$7IrR%sFY$cI>l'nZ;8MSuNd(\0".PNU7^i\TT\Y,4b;SnV<^gR@=S'RoXI79BW%<>O'?CW\M0<@%eji&U2P#`,019.fh1@&gHJ39?s3j-IX)aH1=L]Pj<SSkkq7be_6>WEH<Cb([C4XBLN:mZ+Z(0T\6tg+hR[:A\[9%K&N!ff%/dGW<$#hqt'aom47F_CUcTh-@Uah$?#YO2luG<+\[&4p]dT.8eK>ShT!>\(Rr9&<h_=S]4\7lCqiGM<EcRI!ML.0AA867%^ehINV6]b4(b)K@+]eG/Q8d;ChghuhQOq^aF[OVZgcC0,\#Te:d<aW,PF=Ton.CjEn7/RP_O;O?gmMa2RD.@/I%D`np[IfUTKU6%%PKFt4VElo-G1/e6BM=F#g?Yu5E1d`Kf6+W^=%E'_TM9+eTV^A+U#u1@]J3m?7GA8HT?>F)GpfLo:BssS9HJUDCWp4Ca!S4k3f2IJ%MbSiF-a0U_NNl]=C^ii\R_-sV>8[4<G#3#<<+@'#fR=IBq%?S(Z[k5%]G_4_"3iAFC#=#?-o]Q)\Mg\'hUaL65)7]t!p_FEEG<,>%OK+Cm,':BlZ>R2Qa[T_LJW)t8hUH#NHoiT",CnnJkZ"4)^2GSW4?Q@8g`<X.:2X%ca-jkfA&D8Z\\@SB9V[q-,s#!2GUB3R^5eCi%2\"^Tc';*A9)4bF?);DV]f"=X"@\e.J<'F1lCEZ&l)o#0S*:MJ^>es@=`%L>YHP.5HJ*]53(P(l60ZaTE1G^KK%Vdf`:kpd=FeK,%7!ic4auF"\=qH`q89bthYg1;Z*F#Q+BHF$MMpQm-ejpbu9il;AI3E*o)j!aFic__-_ROfk,<4K1l,spL6U`6tD9[L"9/GTf,.l=#%F!/([:WC`QFU>I6Sc'0_XX1g+,YE&`34RsS:I(!Zp&r]pVoHE6CR.!anHCG6`+M0pn-p2-=#eb!5O"f:oupY!Cu)W.C*D2[:Zcsh%@E&&Xg=c[>+]#PMb?^SDoT*k7,6%uk`iL_hFgM/*4/akE9Q^`EXsMeRD39F#^!-1fp3$%=!oUpVV;O[NF[:qN3(=2HF^RYCofb*+%c1QEB7_)?4oB)bnLpYQTb"p>/F047c$[R---uXEadp>nC>_c_:J(?\Dk8Q"H!m4EULaIT#QQ5>MWuJ%$k*`KU5i'7I'[Lt0&77ca%*Ll=^%Cl:ILJPn*LTI*P2._tbM:?H3dBf)@6X-b]gZjd:9LP?W?>2:'DQl!/Y$uS(-.P!PS\Z)m+TCe;ek$<'p3.sIg3PfoDfV"5%/GCtrF_A>?k.B@.NRRQg_!o_)k!8ZTN[`NqB#5;WN\C*r#!Y"GQnBedRP7#2,EX&$QT,r?e0\/c:*obj]jpWEj<+%G6==gcF/95U%d"Y6#%Js%VPgdm4e1W41a>`d7F`1$-p@h0G6X@<&5._Q$6rA(1'fIeZ"rkcF%b@Xn=(LdPbWs62RI4DTnq3L6pl:TL!$ibeEHVco%Q@3&`%F,6TL/aqp:qt/-r8+:COMA8'0\E+g"pp%F%\Wkm3<Je";X<o,CsshK.L7FkDVT>h;DT(Hf&RRD)M\B0hB6>ACWkP1_Q)Mc%ncMO;hXQ?A=C<RA?Z/AEeE*7\QMYMq2!2JMp&6+QC7o,ge.ml%Wj,O0g1,&8U\NR&41S?&RHpF2?rfb.!lI[[Crhm5TT-am2i1SE%)jF;i\Zn*rf`d6dmSqrJ<jd(ZJ2--?J\f0$%B,L^"CbYLlF[c^mBc!\5s7i'BKkIJ$0XM\jilpR1Z_7T1+Qm46VA@5*<X-^W'6bd%$k+KCX!j*G1+'@87Y+h6-GhKs-j;XiOq4pZD+/G5"SL,R5niNd>UgSh1^51I_@kKjD:ZAV6"WsK)OMM\\+2T3P)YGtQ(A`'_t-g+%U7'TlqIj82%XPoPH^ZNrV3WWRc37FmRTb+GnVk(">gI*)^GajIPX?KBb)l4q[-.:s&trnfFk8koQ2Ag&4I>>BIi^%Q6IEd1i(5..%@S2W69FP!6e.C-XL:%EUb`aY.m7V\U$/aFBj*cKpkX7TgjDos971]+::(N*,>[\Xg0t@N8lTl,nb.K*cXcJ'cE,D7gbE7lNP,+(4%G,UM3Fg<mMNbC7)h/W#0C*Bs)L.QuIHWa)!(VE\IR5M98_fWq28f[97oVDLt+LckFKWfI,+`KIRnhq!NFUe+/7]Q[]e+F9CI1l<=%G6!]X:`ua/OTXLLQLR_Ig)IY"#<L;EfZ9'4M6:!Gol+?C8(q3$l3<i013L06kZAj@oLf(m4F,FaE]T`Ul;+3`Xu<%P_[+m1=0k_j%QokQCSnURXQ9d1S1R'`[Ms=;`8jPAlfNR>%mW3;;5cUs$ImKMe%5G^](Kfi>j50FJ=GpL+BMM1m:RYc;c:jX^+J&TRD#G<2?!AK@%GTVm@@l.7XRo_QQ@>gF!!tg$-1XHbQO,.(X0G[nq)[pISH5L0"ZBV=bW/o)V]oq,KLC0i+oa^0[JiLG!clNN.]];9Ifa.p99e[qD%mjQ?0Rsgcs?#IWt'k(A99;"NeeXt>FTq/.Rn]dd$@'h-YoukuW(VYdqMW3sNoqB*sfX*!;)<@DjKV#=.9uFOgP&e%8WG<d3[cFKC%^5P6%6s*`3L!t&*ehRqA4VaFh$gS[\lsbE(Z[stuc"Lo=Y>#Kuo3d[<UdFb<^1M:kXf8cAjKR`%Z8CO_LKoJj/s+`0GdJK,9ZTf;%er^$A"bpdDW)E*n/^/+7GtE7)Nee^!\-o"ML%SDQ/\TYk=#&44MkVM3K+7X)e,9GGk)=M/TiofV+3/n>Uel8))B3(^A[ZHS1UPpq%gL6hS?pXJbF>+1'coka3BH!HWW9lrH&Dkiu'ajD37d0TD[rUjOEBa_HUhq.(Q+<3@U%%EI5(:sip]MkpUS4Q6B4q:nb!6fL2$q]f%l+%!o@&UK)2c<E3)hO4&[O>=emT%u(FcA7R2"Ab?2/8i.[.(@Hp2usH(Jk.;$t1F8#Q`X"p85O.&7uG/8+<`8D^R#hHt$i0RLUmN%0/4_J<)B\^A`4YjK)N[#@)/Z7'+?blO(@nGO$'h0nuNrB`RffXp\Y(+XEFEo2cA%BK=jC7"^VG\CB8gi5@1tS'PqWCC^$aAG7(Ms%f/WS0IgZ]S7hR;gq3fc^Zk2Jtg"5k0O5QFuN=4YH%B=ZcOL'2Q%mA8u*XF?YVGla#7Q-frq=WPk_sp]K:NI_O&/MRV+70A0ji>KL%Zhfl4SE6=U,6R.[8TJLp+PPl=>tqA\G7.u.iZhPW\[L;$UNRmNapu7L^"N<Hl0RPg[ZAMl)=ZpP0%^rq8]/!\Z6DU?M!?1ifM$)2%ZeW3PV\=&mPJ[$<p),bMfat<reX^-M*f`2(WkC`8s*8`%Z+`Yu4Fp]8H#$E3MUVi/O[K4!R8J'+#f-F]J8JF)HB/Tn=#h+OR>e>g%e`V-.pDHq[KRh;Q1p&Q9QZB/mjaP0\=\VE+ck5XaX&@A&R3Akqb8\R#=2Xirn9qQXfmRk:Y-3e(Pr6c0?+'$8m7sZ@AYm&-R!jR?%gY@N\:RBi7;bgMN33bH1!!>M+<'eP5YH6E0XUj-IOZ&!dZ0@67E]"Sl-e'.sAS6:gY_ko>:?<jcSBL79;g\;dNi<WNQ<7@VS]Sk?%6h/W[h-/o,<fp,@ngd4@3ZH@T%,3"D!N5Ksa>L9b;<j&)1N!f5"eCUSO.rbZPp$kI4)Hr4Vi"5W"*:`tfm)kTo)#H;%b'*U&hu4U%g`Taj03)<sFJ#^R<r:Bg)55;`ET:ap$st_26&0!?G)+_%CE"+jF2_0\=&'V7Z!9Ifc9S>ZP8:\bPBKt\(IKh8Rbe%"li73.j>UNX%AUfdDN"@$'STESm&PG-)iOdJoKi8JVha!=T&^I(^ID:SaGa6;MeqR#<D_n]rdKN,FU7)1sBFMjO^l1etFR/-JG&\1h2?sfB\u("-%7m;o/6t2095-lR%8;-G!#A&JNJaeJNc4qNBLqQ*]C)UGTl"C@1'Sm$cQ_%O4aiAI_6>@1IdE>IZOojo>2P)A4&R10Ai:[D8LBgeG%VQ)bl)GgkE$PKH8_\mLk<'42n&%:/P`mmdTjY`+o6uR6q(2Zn=PN=_cS!YsCYrg.H.Sl&hVoh*Hnn1^_pG^/DR,(J><?\sS&PLU,%M02Wq_DRJeqmCBJ<DdHZAXMgP0(4Akd@P;$+%^!G[0A/m:3j^UogH=se6uJ`2.Jja,N<snE"[[kYh[!/KSKst=)u$D2)'Y@^1['?%!6[aY*eV).K\-9>'r6_4W3E,E#]>eq"bqqC/'K--'s9SMPk-&u6Htm?$,*REP4B>`@Pt1.D+jc+)CN3m"YiTfH<7%B/Eeo5IA:qM%_c4k"C/N&3as*sfAAG:oJ8('H$$mOk7X;!K+DVac:f4FIZE^N`Su@sa1tH.t::C)-lPpjM]P>L,2MAo8CpK4]:o,X>ERLm&2HAh`%W\GE8>HWX]DNJtf+KbA'S,B*@^e+r#(Fr%A_kad'f')CdTo,7XNG$]P8=IU]6S#3(q7Z\QHSaE*-.M9>[EP:&g)-(+VcNM:jj0MP%Nl'ib1d^87YEalB4WUlVPjtf:FJ2<RTm!5&eHIY(,^l[>C=(Lb!QGr\ar;O1XCd_+JDI([;FLVi!pd4UF\Q/kGN`(N6Dh)YnTbFn%WD*VDm?QY/"QKNk70ct+_C>.sSBfQ)>CYP9q$gJ_&:&=43c%*q<eJkM@uKHZ#d$8fMV-WE]@p#f[uRo(p28qooSqh@-9>8r_M%Ul%?g)$IVt7X<RbYZ7SeV_?eu8Bcm4-T=4Xk3s2R<MA[I3acaVnf/CX6ToD=bjQ\[H?"%[U5I4LM;FNiCa@d8PU"2`8`SmG7@d9V/H\%2c"BQ-8u:U"ZEpJZ'?B]-aAi=+=%c7gaf'ThO(KRV$<5qrYfE-gXEk$D9JFhl5Q%14jlUIS0sP-i+@VpdgK,_+Z)D(lLoBkkSC@h%;Q-f/'<Q_-b9YFR&aY6F#392_j9C]J$.)3qS*eEo"-L#XWh#V'_pCEe8YQ&5F!eTR84=J39R0<%RpDb/?%?-/[.a.D2WB;JGmS;5%g2g.V-Z+!tKg5GJd!Ira-@._b1jXJbRV9H\L@5sAj09kUVW$T,NO+GB:/m#[pH,L6G1F103SKn/-9=nok3A=o(7f,u;^\&MC)_<M%&EPiUiMQFD2,UOPFDD]!DEZFZcl'"+=[/*AN*)()$MfGRCkrGk%B4/b[gga\1K8&TjHNCRT-L(mmB>nlUkb86/W'030[mJiAJTTh%="mLu`RUW,:?Om+:D\=H&D?3o=`quqM[?s4LiV_m<>qQY$ISC@VBV`sT3T\*7!23NA='Vq)l[NjU4$H9$oQCt7*kM.9\L(!W,X`"%Y0PMIA*p:%b11FK-EW,"pmZW=)Nl=G6sD_d*BcG\Ql!(Y[Ic*DNEHqVk3&_*9V&O9=r1?Y)^^cmQke!e-P]fg$JCA<W-<-V7f@Ku%_c2-?b,dJJI`gCZF,BLU."2N=,iF&u>H^A8hX)d*E:6B$>7kfCoOc04FJ4U2&`#8fg/:>G`gNkHLo#gIYaY[!@]!7W7huoX2FN7F%EAJLo@n/@@NOCC[QmgCfU9P2GFnD6LSt*/53n;p%g(GEd9sKot;<7P`75m*3gg"JLem.&#5j[Rk6F4juk\O14h3R9S`l-"L-<fF\%*U@0!2*7>mZ6hWL3bLd-?/=("1IH:c7):5qZEqaQFa4o,09/nN]u'kdU8'lfjYIQC99qu4`\n&V;&!A0a*Mp#O+qJ,SsH=O>f(>P%o]4\!E_MeO,,.=+P?f5OVecO,F\]?qg(9gITn;gqO<mcgUq<e<DoiH;%*3U.'cTkU=^5!`Y-Q;@7ao"(&oPNRRAM%WJ9dq8e4NAh%(D1N5M#nD[(=8Z/;Or8\[[:_\h:Sh@c1eX^NO8D$Gd3YJp!(s<Ak1L>c->n1!YljD.J6;cDELrBlHbg,_LXb!&FH<Lh*m@./]4,)%ObR`:n.0$'Ll+O-+e&qEV@ZV)LhJ^4NMTYR*NC\8RcD_;.$:C9A&;.ihR[fFA\(@Q+(F2?_9CEE9]MO_L[EXf#s((^GBJNV=E,,K%X!O>Z>]6:_VDl^bA#itulYK6G\gg8Co!EEp[jdSEV3'E04(WQ*35tF(NmkF<-)P6o`W#-lpe6kuZ-qrEVK!bgHZc,Ae]ZTP>od/8%e?9WZ9W0&6Ml[E@oTf\"#J+MfjQ]ptQ<_p`VDYM'Ve^B[7u>/r<emPM<nE1p$aae`D6M5F=5.NXYFZ5GFK6%\\A$rb,<"1\4e!P>%%+nnBS7R']qUH48,r\1SBC'pH9,!l/mF<A7lT&N00kVc>3]1Bu]<Sean8sTUeY%,.2.h2XM!;%:m3UnsAK%"!Cp*=2<3Wu'*HR":%Zfl/ioL,i`\a&p2'jKe8oLaUk=23&B\@+tM"m2_W9oFJ>s/\0nk\<R97mkH^EBV$XmNhU?nmbA-!EGNd>5++@%i+6[C%TT$g-W2a%JOr*&22CKVXa23U6D53eoVnE8>K8RCO1Q-V%X!d\+7#n=S"Se<'&*VjF:8r44t<CtTT208!7tE+#kZ]Z1j\i^na=q>n4n,BCgk<C%2S%RY?&_c1M^oeeU-_#CEu(m7Eq9[I6m7AVV2On!j&g;t@nRMi]SITUW0&Je"Z<T:XE;lLAKVn.Col6Fip:"saqfgMAcLITq\(<N%c1AGk23Kg'\=9`LMR.dOU/2@ep4#OZ$=bfMFifpt#WTlX'1LTh/^YIab5XE%a4aPZ.7\KUad+@#.<M<*p.]'p:,-USeX3G$a5<,<%B_F)IPL[I>.3qh]gUD_JlF5%A:Q8A-j#7[c;nRep`dHL@Gfp`K?#_0QF=%G)1d.O!<cKaO;gh(Mh]AuiB[_J(A6dMrV-$5OM:DDc%RHCZ2L=(]PoZ.+DB/(2cErTSK**5+U.'pL#;TSS8S]\.EdBl4?Vnab_/[kk3?uXp>!`ZQ'"E)Q;^(C`4[9o-;N*0:>)q0<>Le>F%%\19q[b*isI4>RHVN@:JP[&DCrH+W'r%3l^.1^d,aE<Crp+l;J%^Q:e-RB%S`VDdPP,,U;M/Jjj@F[t2RVI%ELN`NM,Ld_g1EiIt9%XsA,]94=D+o+pA%WjNjSNDgoBrae0DlMOB,<M$sOD1!pmN`h>Q-*K+9KN8!KV6PK4b+_L:PsImKps+V1;:SX@m]*KPh:p@/?*?p6%R:oY$l)j>GhGWd'gajkB]PGVF^'/e\]\I;hKk5Ejc)%T+9[N-P=BjBU;b;+aV['Ot!GX0T"P?7MO1"?"TQ:ZE!Sd+m(2P51'\Uk_%CY?tECMhn9SQ4\B36S#?f56"N`[HQHa7deRO&cm9s)=`R2o1Z>5\ncGN)@eQWn=hZ;47@q2];fKZfu<9aNDDNmQ`dVarjp5%#oSI%dbG,PSI4"C;d4td2`(tO*lpDB%L#5Q8*Q"TCU^<(##3*q3nDC9C6;Ym_K%Tjj_60O]5X]P].7fB&1bY@V[@"uZCYs'U"dqt`E'lN%MA!;scfb]G>>6J9bW)<[(JLdA&7):T0L!_hQKlKBKZ91+00GPJ^EmMUrMqrj62"0\r(MH/(03IBHGqhs=umtWr^p<q[B=.@b1/Ig%"&fppUCI^cb[TEe/Cc_h1V`lZ-3N#KSuc`mg2H]6(;^tal[cMR9DREfgK6HoWUNh\8d?p#-ZnY'eMsV!6)a@t-5MkeIa\_&S7N@l%D9QAeGZ%%#1jKnYVG^F`L!C.0#+7KECmQgJ%^1J#^3gO!SO"1#\m7sF3P1%Z1OHKGns(r5_lS[IP/9*6PM9MhCqBWJr!Z[BK6@R'%AUnB?V`&9?pb>-fD/GR6hRYkV9&HVML@#_ujF1pe9Fd_"-6p*<:aNi(l-.a:<a0rb\Ri$fH?*1kY.0EuSJVhN3<`'&WB<m<\ah%Q%&L3/[Qa0N*$WP)9;/Wp#R8bke"!aU2DRBdJlN:hbH>sl]3OpSQI`P',[YJ#.Xa1B`g@/qjl$RFh"Dei2+;:h.PJ^M6%iYTg/>%+8%34He)r=0iufioYa>KT%NLZN7k^nC)qWic$_a4F:EaD7dh\g^^Z]Uhujam3_jB*ZgY]t(gQW^*-c0'2qPcX;&7cEcrEWQ@I#2qVm<%;n6C<:0?&9\8BoOX!A8-2GMsP/Bu+Q&%4d\Cc<=.&/pJ[`%A%Xb,\1.[<:$%OH`sB(b/jT/`rqcP&/MQ8TMnB_:o[CQ'Z#iBEgh%%Aq/RY,X^e+K[FP$2mb'6R$F@s3@sW,Gm!\HMnoM4:TBZ'<qUN6'N8l"I;5;6<p>c7kiV=2Y1A#_==UNI'tFC8obo(rTdibppeB40%6cP?_pD&QaC!ZtZ`C.Zm=-60$.1[5mdbBm)ai?)"cLUm4]=u)ScA51`)I]S`[M9('M_a7^fh9@RF8;M0f(3<5phB80#HQ7?iSq@[%2kV(%),1@l0aGC_3.Tj'-XTe\cDqW&EeQsYR\EVkQcju&M?7([3+U6Ea]JtF%c+4$1-WI(7KmYZ."eYP))U"Wr-5ZZk$:%1;c?`E%c?r^#l<B@#b\k,EC:0=+(3]#G#h_+pcamEaUT&8$qBcB;[IPKEVJ86U6?7G../1XdT&!Qm_4jqn3Yp6nD[4V^j.9<?>9G`X+l$B8%2;]Kl_V%AIli40U9A#t0RWX*Gs+a'45btB\]l7V,_0om:<!5[''G/X[]B?`N4hps8)j+?)=&i<TF2$grA9?oS&K,@r=lS5p0\)S9%(cFAKZo:4<$p,FfBIk-^mGhsn+qVqCXj^0oiof#uknL1=[#=BG6QGLQHe!]!JYUb!82b-im[d.rd9\npB!g00,ku+aUH)M]UB_*b%:!V-;<URL[SH26U?*!"!A(*WL1Hn;JZ<^!_drR@Q1;3.AgM-0^?!gsG?C]R&I%<)j3eZ@[[V=+&l`a\bM6FZBa'4_P1LqF0Cg%(F%3FDbh3,<+n*@8$$U@Y:tlA/RonDgcVC@'4#=A6.^hoKCWN.*/go,H8W9:GW$!Xe<u-)df"_i/K2RqU^3$JT!fS`rKa\<R8P]&IuW%h+lYfhU/u@j%\IOAmqa+Z]O=Y%-aL6)A7.')Yr5Wdeufl/uI4phS&;kc15ZeNMkaiZ/ke*)_;ns?G?GY<d,=>H\u7``]%T@T42JH%)Yr6*`L_dIT46SNNI5*bMUc#Pg?Eo%[\&8t@6U2UI2\Es_G=/r1&"#]R=lf9s4#%sl*IZ04QXF6)J+Iqk:Kot0BMj:hR@^tVQj-&%m/5Ac[++K&X+n(;A$&s9XHU/0FqVJFBgf=pK2-OFi]Z+jomF+"@_(b8:0/<2,=ZWgcUdW,*_[N*Q(_]%A$FZYYO$3^L$S1;)oM99%,M*k+I2Z8@D(.OXf9_EK7GC^MNP6?ImHGNc:Q7eEDEQXDKnY1\//qC'BS\sm:4=+'ZGB.C%E-!4)LO%Pd51Ln:4qhf&OXL5:LkVS%GFmVc*hUqs(4$KN>OLM:grdb1:NP.FI,(/p\JKZ^hV;.;#+aQ)149Y'Iu4\JcrDiU-I/<#c_+d>4G+Wb`_JOHXta."bT+4f$p$UW%E1.cXp'eNqe2Kf+?$cc].9gbK*4khP\s@0KZ#]'^1[$f&E!A=EmGI0`lD\jgL'Y8Q6"`'5.<F_,1[%p^)kB>t$:o'V0RL74>pjJJ%a1sWH!`ahX3Xi"=d^qM#E;NhJI&ZLjN]_;8lt08oXYC<-[Ih2j/>)XrD4TkMgT1Tq9Y=+ZY*IAAS1A@#pr+l-?q:5:]btBL.Jrno%)JbDOl8Cl8oo7+alTDq>j_C/h\hEpFpd8f;HlQS*C)^&VarKP!<mk5#?F*W<"`^e1j!@P#)ClLiil>ed6,ki&2]7VNB!A9%<I66_%gS`WgR-[k6KH/StaI#YJ5-;e+P22S^2J"IS<3f`7IbO4/n@7R\CG8:N2'&NJCfRbY8t!QP)CpSNWF:k4Qgefjk$p?A[D+kjd`YVC%V"T7oRR8LD8hoG_\&TMq%S,jYZrhIbCb(PUS'FJ@%_q0k.qTEoqmn\!Fom`T:8?IlQj)VD9%?&.O^_DT4MK^J@c5;Jj81S]s5e:C%B[rWAeslll/kQYp^b=L>G.D<`GO&-`S+gi3%".4dK#=.b"g`CP]&rPEkG*',g5r!JSW:^%Q6CSB4<I:c.H<6C)WSH5=P:JNjbf$k%'C@tTa3c5;Z*N=I>^s5l;@[f[?O<g;alM_6b7<3QLXdqKl7_GiQL4KgPpRCfpjT2i,1e[A3W,iFT?jXhID:E?B/RC8b21bISX$mc%#-'D8'/VH/C)#B7H`KWF<4Rj/kYj23Hncg>4]roHD7#G!f4pI<<a(+g2h^mA3HDeFC!I`(Sii_?.o1IYl;``^\TT\Ab.kI^X2C*I%Srk?nro_+Bk+*Dj8L1,E$$&C<V`?!e=7']cJNWY!/&aSrDj8<AGqbh8V`E#))F64M3dhrUC$8PrM.RG=diq^/;CN]U"r3/.rb*0I%R@$L:@P-m[G9'S.FSb3s\@*P\n*V#lm(\^H1^f5c6ak'0)5Tfcn<FJ!)=?H'Oe-W*D/aV9Mi=S&5FgRS6ObTT7!FTPL,OlWAggl&%HA`3[cmfg!VMs#%q0DL4(7A>fs2,?23Sfj>OJ55J2]@mlL%"!"Nh@pS5B=V]F52!V@6(pjHMMRdA8':\r:t"aOUTm/[H@q(1$[-8%eeUcooQEenRkTBK5@9L;eneV1,COAVFJ1TsE)^0"fKlj]&ZV@&f.gU826Y:u*Grn4*c2%.e9X]O8%kL1fc$mbD"oV\^cENY-Ki&k%0PNH@E9LjK0m2mZE9#h?2G$);>nlq;j&tQ_9p''C7Qt']K^.ppiF''bOod`+_q!NJg6ff9Gs5I^)TpQ4QutStp"iQfLmrNNgrN\$%As*[+nlU#?[@AciY,[C;\TO"U2LT1#%_.qG6rHtFR)gW-Z:dmPS't+eOeZUiid3Ma(pLgW'%:KgF$%uDm=**!]&\u1[Nb8Z[kiY1%Y+\C@Q5KDE*"C#4bm(H3G\?IsRtca^KsPP^&^Lht,;u8_KT4QSGAj?%6^N2]=V[e[6Y`^q>+%E8ejtOB5J*(eM_pIe*`$.E7C:b'%#0cIn7m7CXaOJL/&g928]:ECUgM+A7\D]?JVD.>p.tL4IL/t`T=)MeY\isrJ6Ln:V`D.WmC7C?c/km6,im#$u@c</!;YMhmlB"Ef%0dCi@d[)R5K+Y)31W`2dE&O2E<4"H>N)\kr9qRQ*<b@JVMKZR:"'nc\lf.c.5aj?#*BV>UBgqK>R1.tI9nnp4\9^=slVoj(kAQ@D%R7/T1mCpe,'lJ'(AU28KFn[W_asg6Ir&]]o)=Cj'Kr_I.r!TKCp%GYNqUo2E@-Fous8M)f`2@O5Z)V)IKJ1MY)hS`;;:e&d1mN0g%.!@9eUTrsNmDbB!L+X>bf=BgNU[N>IiO%Fd9<>eoaE,%R:2[5seU;,D%]=V4)!bk[n_iUIYJskOlVHsM5B1uGl*m3*DtZD4?9\;#%[9[%Jqf2M`m:TXI=+;e5kML`2-emZo_`.VJ3kp%1Ier?g`qnV$@q0r[&KW*?q9p<Ro0:AbeeY0(/ll9/)71Z[U\)8\mjrt&p<6%1%EjFGZK;XcYj0R?Oo'P0/c+2<#%(gcQ?!FVhiG)l#_=jr&[LBeDVggqfDsHt99;aj%L"C#r(Mdm`_R%*ZPMP5BhfeD1KU!7U98dZ/%DJE#4[/;!&NT6lE]Cb[UZh4!IVI[11D-:Mlm2:)FY?j)0H?JuGgL4$Y8+#d84b))=l.2'm4,qF1jWqG-WN"A0jU=6-<?bO.C]6ue%q-(i-DUa(^<e\tgnV>pq/]LH0j?%d3m\VjnkS'^;h;8/0UO&TAfoA.Igm08=jV+%Ta[c!ilKN+_HU^N(<im^nmoZ-'(m=%uCDkX#%i7(VD*hp?nng1iXB1H_)<9[drC3rNi/1]NQc-@Jq,I/Kg:<50LqF3Ulf,E8m*M5e`,1efh\p*%$4Z:`2I\Yd=ke-,ShAN<JV)H<i%ES]kjkG\2"U;h0(Xq/me>C%[=VOPd>1N#*VSK;1qiga:4?,uhNVTbp<ZO'[sAbp5S\m2g<1EW*ml0<*Too\ssACHg07FQ)?rF8c;%e($<5ieEO$ZKW\uOiP\CX7OfmZZ9[2FEP-9^:lh$Cq@2_\rO$Y@q='=g"O[Ym'Fm4X4ppgoZf:_Y"lLs@n10q9imZSf5TLB'\RTG%6i(u:=]1\FS$#LGmENs<S$$Z/C8.E!bbhF!2=aK#M6cB7ABWY<drf$&BsQtQ9iZW$1WlSaBZ8!:VJFG]RTVOSI;\_ZZg$`nTO)6#%9ipL0WPlTu+IfNo4d<A+=_-!@n;PR>Rr7lo15ft[]#AX:poLdc7V-Vb-C_.jQ`fjA^?HBJ'rM%thA7-slDE]F]S7N-XM2s,1%FLE%"L4:/5<`q1b@^>>l@t&c$XTE-^K9#<?$';K?crgeXcltc;C!N.1.MZe*DrJoT[8engbbtPOLh`L%^4'@*E*U\#qJJt)XH)<[NX0+%;D`E]Q??qfG.E08iY3nY7!I.uMi't<>q(5_GhB[b11st;C4#/^l=]OtH`fDejHD]IfD)r4UJA?l*M9lXb2hiR8Co:UU-1]n4`iX=%?L@+Xm./:mX-K^61Nt&qMHH7FT=NE+9`%2$;a5=N\Si]6]'JK@qY=e/pKU.2?E<com%.k[BP&D[59DnJHfA9ORbFm?Y5$]6jhV%A%,@_6Si@!(;TKK\ei&`75Fbsf"NQs4o%cZ]B?V%l;KH6'b7#'6+2#W[o\_@KreFVdUC-E4^9l6DAh;(n%rgoZn`tKeCQ(jrXWCFgY%GE.EPVFJRdFcM3N`k"T\[g+fIn!co2j7KJc]I;EQ*Osu)NpUq7gU41!0='p*/1?Ta)9QKnbnM4ibKc)i8uulU"/;5dqsn8WZ1d;$%ltutp@l&DOQuS'SgP)'kB34+k^8bD[Omful`DBn\G3L1aD`E?[<>0;.Tg$'_5*O2)Hh6e&P/M<<]>&"OJg(*^XP$%tRJ(!Koh]dp%pC.Y:9eB+2.rA.SA$e%E>6:UkBj[p,<X]Skh/G>[XQo*]M%!m>GaF_3aRDoZ7#"GPpo.W11\m;1Dqn&PL,Hd^PJ16ah@"OER?(:.%Tg:O6_VImlar?aEeEs*FC%I2J96o!M@ET%&jh.BAq&ts7E7ag?/)IcTs+S(f\!eQ=C&5d%%qeY]C!p<L-e;1*UW&a0(I:RJVOK-A%[[R#Z9PZjZIc9>@FQi8_\`.cZi1!)X7%g*=jE!Kp]'3ZKgM+reXX#Xo7U7gdcfL.Mhd2YfjEj>3+Kc6;iS*:INTad%1@Mr"9Om@N%`3aLL@oX38:9cEc9]\j+YarA&m(P<R0s*$Nb#!"VgFZF./U!i1/kJ_E[n`s?pS<,s]<RNdRNdRWG%/Wd4.]jT:?V+AE@ZN-0W_f9%n_KeL!ATKPf8W)fX^]Xa`dNteXQLXM.@]G(^"H[c[E%.5)<JBr2-s!7^'sVp@]\`68%b(q3an&L8"V[JUI3W(kT!YB;Wk.E[N&@c%!Q%=mB(c*?d17+5pM[b!r2qs/=!,04]R9A@AT*%hcLT.[[n].@VtATd1X>FCIeR:J0O2,9Bi>K_2XPh!A,TIX$1H!,(Oi9YI(8&2%`T9%*c[8Ykq&QoONV@c/q/B!O8U0F55Hh%A:TgMP"kT2`s3f(lZ56/`2C7=1B^CuGEbYD`e2Z&fkOK^u)`q>Mn7D*skoI2Yf;[$U%EXVdr$,'*WWG*.Vfi@d,?rY6g>["f3r^U7l]m2/Jp!($F)W#p#pWm4'7lR%tFIHO-O.U6;FuIuf7bjo-:3Wk:c(48b^\gT-Vu5se%I_V+N=mbiMgH1"JhDBGf[InjX'\Pq2?GZ*^m9_m\oCoXsX6&/Upb(8+)Sbn8.tc1"f'[ZoEI$sDf9SKFC!M'F<Tpg8)K"jj+.aE'%G%,gFFUXb8789*#)cV.&CinTGLU3E&^/[mD)JL@/:.Z?6X_Jgg0Y)I*)dQ@27OL*"bj&aT2X$0GRAHr1BsTt0Wc@?Z?=ol@?B,\N%es:G[\Tr4QXL&QOR^,Q!DYR1NHAt!NCUHXgh:Sn^2@O:J8ukQ;SJQ^U.';?RgRt#&`8_;`\7K`OQ6+@KCi"f2D1/pBXmE^W)LaJR%10&q[IaI'=lOc&-O'As%]Q%k$Y1jD@*O:f2c-'D+4<M&0\V\o!,S")t2c6kb]ut`'H`]MM9k[Z^hkGrY^hGHqXh-*d0jea]ehVVS%>`/Y_D]^J7NRYI?pUA1hn"?)dCsPdFhVYJVQq>!JP&T#@a6^&LrHqmbA5t_kBTjIOa4G!)M9gnX#eoKbj3&YVDa,i/HIqL'*&!Fj%kWOhQSn2]`A/Zu=WYk&n")g_qr0P<l2V[amBtQ8J02u;*X$*I'1DTEVPn'd`r]O=7WIUb81`ioOcLZLp1HJC21GVqd26M@=ArO`!%]qVi0c)tntXE(=7[pgS'H+HeWm(&X,`C@S>1Y.HN`ZH*;)bLpLP7I8C9pc+:2$^AW4X<`.@\%N>>GBS.A-$ku!?ANqO-9b"2$_LC%iGe]G^of\JCpfio$a>:6/K/4Y%X,K9^of\J=L#uS!8Vt0o8RdNe[Sb4?#p"JN]^/S@)J(\EWCN;V2T&3<ms:UfDS.HBccC-k41/h%au<j2pfANu)tbE0C`_]%S<7sqAbnpmHLj!liQND*)h&n)hftBhq0h=,50DLArQ8gqjn#S](f]3K.(r$D;M1HGopbquW/%^h)lhr1%I\#n]Reg;SDe_)<)li..^[^<J-@OLLrDgUhmY7`ef<=![<3M.>s/o]lo!R<`28QnRUG7$0n+sF^L02XLPjeI.b2f"R6+?Me^Y\lj%#2R:CrS"/MZ!C'$Y$Ylc6a->\n,c/J]70,\Wf']EjB]OSFMtUlc+>W&k=jR_]:^Nrf<>/80C':Dnm0#]K5Q<;Yo14?f5;?FlNXAT%GQ$5qh:a:@$/Y?U99XIn2r/h.1WXh`lWq:!<ab*_`OgTd%[CA`G,@iYY@aS*qQ=1bW9M"\kJ,:R9_#8mKa`V)X+$m,]>dTA$1,9Q%,P,5Snuc?sX*thJVgR+"4lG&;8=f$O5F9,bLPqFEXsSVLYC-FSJt9`iIP%pMnNE>gH[OH!>Nu&,hh^IV3kr]oe[p:=Q!3_r2k+=@%?,)]<LQTum8)q>Lf.P2*`e.F,ldp65^DZ_j:6rZF6(Bm*`)1&)l<V/JIrdW-@.JO?b,\gu(+4NkDnI3Pk4eX_5X+mA^ZjY9l]T1C%lLotk=H2jBii?[e:A:nuafmr#Wh3f1:&hAg9pKI?=*3_OrS#5\"rnTZ?,-)7rMI<:8\aRMV6-r]]7(dk?>&c1?i-mQA&$&C;&4&'%>7SF62gI0kpSsk;b>ds,%@`OZ=8eS*3?.]u^\70"asf7=]70-u:)08H`:*QQm#1V<?i.NUh;@mpghp8$Z12n,)YD0$hXtrKX6s!&%M5(;+n+sG$K_GPhFRT(6$\kCh:B.J(HU=etOf*Z[Y<9qlX+!G,=Qc0Tb4#0a$UGuSN4@!0j1Bc2A=0@Rp%*BJfR_M7?/%W:p$_ab%*tGDUS23foQ#hG_k'6Zr9h'L+\j#,KHEYgW\P]VP<YDdm[+cXH?V+HQ@?\M^kInESl_g?[0=E=ceRIcr*1XTo$!*Z>V05"oPVgeD%$fo$U(Z4B==Eum8r;Og'@.i@M9Kkd,e_HG1[iZ$1`KRj_KD.Ujkks2QmFsl)/=sVj[^^@j['5"f*o-eljPK")hs9O^L],,Hrq_"d%507`u^\[`ifo+qXqqh5,I$P3#KDb95]>:8Yq-:5;'7X><nbr-O_j?G5\)1L44\<rU/0=b4jmBaXGk7P#Y?j?f^@pUL]@3N:M^N/0%ZEsAu]-lj,\[PB&/6n#IGLH<%hEQ7ho_[D)p[RL'UGYdCSD/>dorFEtjp'!Nn'6Voce^51N#(gcgZspOKC-D`*X4^jeJIE3T8U\[%Mu;spMp!3k0,M`spWmZQjf@KIX"/)nd;EsGUqQ`5H@GDC'T^KRQR0+eR"pps95ja5ql.)LnGFXJCAS,ZhNRm9=j:<cGB`dih.#n`%cuabC`P+`Ajr3F*)3'RO$V/Mq^\Qp?m40RIX4p^nq!7Cl57ZidO\,Dr,_s\D^A]p;Jp=]D-_-A[GAmB/X81\rd37iQcVDY-qp,WF%d+"Y(GY)u%hWdgpfNR)lgeR#kIeVt`s4BM]`t)j$r42FY?2A*lnC$.C?T0(`?+i51Z!CW6rbUofh<6(8gWAiR+)g"a\9C0.qa0\_%3A\q&o9kMOq0Riq`k@FWDsYc?o;q@#T)t5F4aR#!e+2(ZGPCVD:&*D&!KqW0MctTlffNik.9QPVLhMH;^P!9(-A)KnQWdqS0s*ui%6H/:0BDiI\H17#T\#qNB\\(2*f_]^kC^a"VmFCU+n8V4Jh@Go2YL!7*?G-<rJ\&Sbm?8FOUF#qqin(pC@G1ZhGPRmjDgts\J,5NQ%fcO8n++A*T[6H).LRn)oA/@A=k/1LYIc6?5pRb^bJ,1'*RWb82pjGMPs2s-t8&?!`Iq:^Y%uN?ol$%:Mc3k>Yqe^iY\r;o&IU,,t%\<<ss^DO4BT\$b9=Lk9td44^QNn(t:#?\Ft]%M`!YIRd][GJQTeQt^_0cs%i_PNM7df1h9=i.!sGAg#*2rO1SZ2S8&p"I)l#Cl,Y%5'epWd\3I2a4r'nY'!q2HFS'Hqdu[%_Qi?pID1'O2S5RYH?SC`kKcB`YP2B&^@M$L+,A/DhNq<d@<2/+muMZOrn_!^_<Tmta<93;%fNX$R45#2<]!j3&Pi:cr%@i,j<t,2C%7ll_'<edV<S#?W]]G@9'RrRB=8<7UHS_jk(kAI/"pR>j(g'%W!Nc7qoQ5*=mJ>julUsIf%O_p`I?f)1pYD*o[p&3YL_8U3aEkZ=3aa1%EO(hdFpO-2+Ac:H*MdZ5TV8;HSQ_%KBXq\pkJm`S;Z$#R7XC/?sLh8Ob;DDM;SQ&f8%m\75"9Xt,KD,BkIh@&9r+/mJS!71`S.#9#aYY)$@4q=5@hd:4SNnb-rQ<a*%K4oE?6(DTQH>rH.U]"sp&_Au(^K?l#/<[/$BTE?]%(\i;lFn=S:di_c+]c.*rQUc77p]4oVY>9lGWIql_k)l&-LO9$?CFNi4f.:SGS7'1s4ChJK]?b:m,hOKY33i-2Tl#2I$Y%0Jde*[R%(P&V!/H7:D?TlIPGlei#k'emgfEUEA<[Ws%M>5fM+MN?o3&mEmffVL6FaD:sV>3^GRk'Qe+aQ@X/G:88<lkY.^OBbC1iREAXB0EU%l`4>*CAZhIZI0`DA8mJPC6;;ie\?%;hI?CfrVQHFD8p8lHZNe,HfqGZ5<U/M3P'8&k3),-9CEHVo&NXSq_@D]$+DZ(F7.^i4C^Ne%mYE8DlNa&3]RJiJYP_?O-:@o*jBc7i^0Q)8*do3%?f%)-N\So>q[s=(P8b%`e#2lb(RlcpGnk\t\6S$M\O5=k:_K,id5m]B7t3ka%f@$/9r0!KdpN$)OlJ^M$Bk$\nV3U0m='2O`km:(32F>iod)\^&<dhOLiWC4snW%thfgU&?qGfatmSn,C?LpYA=aTkCG!agccJokO%&_\<W9roeIM7[]0m@+:a.ub!??]m7^;m0u2D%(G$?J?;fJo)N^^;k$[Bs?Cq5)Y07lnj^RCTFiPckq6..gC:d>!!o8Pn:9.ma*-p%p^2KuDlDF&44;;R?6"_Br@`Y<"ALIkfdjINjakicmG)(C?XUo8SU"SjnZZO.ooE:Z\]$sHi;TY(0E-$Wq2;g'h^[O9p@7PkImOP#%1;=ZrjF2)mq1`8SR,.=k?Z4aQmE<fCV8Ak@lbt`rpi54N7e5q@^\DlpDjr$.gO=-Rqi9!2eGXL`Y5eBi(\bT%Q]Lb;5Y)O]#P-uS%ncqL5Ys/e_LeB7q%ap?k>4s/*,[B5*%sU%E.RT2q:iCf;b#"i_e=3)(1=W60H'6VJb#"i_,a-T7PbCQH#eeGU)/<-)r1$.o,?:YL%N6m4BZlmt,ohLe2(.YAi*>BXDP,;-.g(ba#k)%VpWA0k#l;d2eU8dq_7-"3oUMI.]$b'GKdl%HJ(F2bW5]@(?J`tD6XaLuP^d3Mj%pD8,0i=j!$%e&t:OnmZH*,_pl?Y2X2e?m*&_pen&jZ>W+SOZ=60T_*ohKP/G#fKsG>eC#p&!3$0GS/BQ+?3V2>goa$H]=r.W4"mm%h))@J9_%UJ]Ju\Gp;$6f5A@!%^9@RHFL$n4P"mR'Lce]2UQ:!XZF2j(Xr6otaYJce:@Iu8gV$jgkof6RTu'$p07Np\3e)JTpXd/U%qU^'QHE6c]./!Gtn9"R*kigREs7s'JHLUh,ki>fpXhT2Nji2oXH*V^;E-ccYB9nm3cFiHYA-CTkl'lH]c:Pjtc+f.,n+SKM\@'*I%=0Qo'F'Z(4Z4u-027Km&n=hiP)sY\Yq'5QGmeXDB?D=q]!hpNLC[HhJBj9&%QT'uNf7.]j5MgfmTdnVHOrn&>c:EYD3dpIGZA.-!%^:dnRr$6ZX4h?"'3Y`0+pjCGs\rpX[ZfosWJ4YasF`hTdk*$Y2G_8k3dTiqkk,WRTQgW]6o\nTro1MmAQ4F0qnACg-Q$^p;h"A_V%ma#0#]1gFus"#gc8[tk0oF5q1,L?'2bPIj%3Wad+PE,:=[ojHok7R?/e@,5M.MkB+Mu'W,Nkia)054Tm35bFQpQp#BD/i"n$5F`N%m`)gE')-hmjo7X)Ya5XS=(/<q>B2t'1UqjKg&#4Xb/Q%)_Zksk*\"2jnbS:Al+sCs+hD^SlTOi,Ke@>;'1k0Nht,.5FjJ#%dI2GF%_#TGg)A2IoAQIlK'*%c%5J0ftN:+?MUZ/VlY3f$=i:1WQl1l7>O@SVqD/`M9/;WZTFNctGXaTnb'b'FiF`;MXMQaSDCU,t$ce_0m%O'd@V)>.at4/51GhV2>@SUNK10ZO,Y/%3""J+MsZf9:p?gGcV$Iln+FfUmjt=Y=;gR<=l21r>Fcf4&$4&cgXr7<@-,\%)&aIpV1t%gNOHo?>Vkc]JZUdC%%Uu(:]He*tieYm/?J=Z:;%2rRaknhaak':KR==cpH9Lf;fhW^Uss(Qe_m>o[eGdO-M@?_qW._OS7t_4rcoa%];p4sUWSU-&)+`HI-`$UF%9pDqUs2moji":b1NU:BRc!4EPg2P$G5->`sGP^hY^L=j+O=?q0HMY^t*c9I?.i8%CW66R.9\8+gZR^%jjp,&VleLMA2\f,G1i;.2I:fg94kNkroLKYpLD[fkP8ip^V;lmA*Y3'MqIe'#TjQ0pMT@=>Pm:C+Tl/cpWPQ--E#VK#,2@kV#bRQ%^6Bsda98UObLJq,gRf7uV;q4W(qN8Lin"/i]qf*6B@f!,qk[lj?Xa2e6auL!0uj2A$lLTV&"B^c3ZfX?!]q#!HH@"k4KI&-1V0u^%g]j[rFLCju1L7O!9WbPrKilW6>DM"K3RZu3h(uTU,?N-t[H?=ra\A;r`99$):.^dgh2'33o]F><?#WhB[Ue)=rq)[>Gl"pa-PthR%^@E-%K%f?a<1DOT['Mmo(qd)-"b1;8RRWK$p*6bCVeM6KnU7gBM*EN#mk8s3`BI89XBF;h(>\=]:#1^]ei/Ypb9RlEap%Mu?[f7c%SWkcn?@KQ*`YL_9=6k$&pAVE-D?GL\W]i`8]sf"NEbD]R2aqc)/cT+=*%OKFq7eJDHSYW9.$Dcm./CV/P%.i;7-GMGj?A@ppI'&e%`A<;J>9Z(HN.c4%P-;JL'2$eA0^7XrOlT]>_#6n:R@'>c-U_R"0*@$0364<hi7Cudj\13kS.2d`TuPX/-%kR-=B!]&igHL;].896%2e_Rh&rb^]Hgf@g9QLRc^%^WA:RauJf>kKFXR(>bVT!AeKY(Dt]j7cqgocIX<nu5*F7&A]c2EXJhsVS;KDlFuGid)#Dq5]9A8O[!%Yji72\A**/)</MC,6qTRn*Ss@>,;HrIG-_BoM%Wbq0@S)4SnaJ-U('bXWMuiqdapNIu_g$W\=A[k^WAG<qKCZpVS8M63?B=Qeip9%gK.&Hh36^nVq$.W^Gc*Uq"=CGao;,9o[a(hpNZH*K?aC!?bZJ,hqmQMdV+5.oJQTS"T-Xq)W@T#d(`*Ns6dY8ht0,_r1s?Tm0.eM%oZR82i?A0i%tX`7O8G"8n,EgmLT'j>[h<>+5UC,o74!R3.FS38Dl!^DEKWE1Xp&D4+NbO/l4$+nC?o5?8JY[*SEq=>*VR7>miVN<%@p6=Z,GR_$Wtk9Y^\1][6%Junl/u_V7+<88*62LCf=utA8P5Pg44_rVKW=,`#R4EML!;JT5?CuB:f.huf+04nF+)h-otmLjJhI(t%j^2AmeHlFW_Xmfa>KNU**+W2:aTlNJs&'YY5#>[Lp7m"sk<VBs;=eKiGX]Nk$+Kn$hkYleLpI"P3!c9%VEaWj&;5<se"HsJqYG^:%X%^L>X8*m`,>=B2[#!1[3`'fg5J66_?l#b=oOF7!MO7H-7h87UACQg#BrH`e&Hfn#VN]#u=O?R,Ro0?+>6W\&beg/O1QE1J]>rg-%4AYg2L79V\""=FG5V!SgK7k`D+DKb&')(?p:aB/TlB;(#<_`\;;7fAt3NPmcjLeSOh'D;Vfg)N%Af/Opg!i<Z&.PcV1qYdq5W$Pq%EX-o2e6s%$d[36j##UN'p`rn6@K?'?-.I%:\-agTb!U7aV=ZFT#a?M5c%l%])N@,<XI(n)aOC,X%m:^@+]bZK5n[e8q@U,rDi-O=%&'Y>=;Tg'rC"`)'.u5XU^AN-QpW;%diqiMb"(G%Z:4MZk;dg2p.Nocb,0X/!@k_0NjgV#`o.iN2$_dS0dK9(Y2=m3>-dRX+%>p*6%Gq:(APCB6>X&BQ1/T[R/!0T\1$n)1o-3=l)E=Z6.4JB`hh[#H$E=a6D;Z8#'Ergg?:g"Nd*)_RGAPebITE3bt]L\j]3+bEJ43`:0%8p-ss,oCPg#eA.R+!t,#eD_JR+:aR5*ttYE"f!JGb#6)EW^V"]K1U[)5c'DNks,);."F9OF8eM&K_a+iOqnY=6L,32RaX2F-JIRH%$Ib6/9b^N0*ms9$oIrIt'Ful=:fe5o)1C'X>4X\+&HKg#:&5_Z+E:Pt&Rc`8r@AL"j-Gjq!DuBM8]IRC0L[k42ad]R%=eFuOic)s%@O^pg5hItk@nufOG1%S$FpO<8geO)g&[t-kS:q'1&Xg;j0:;VMW5u8tB,1pX0FB#dTL^m'4JTaQRj;$\6&LmbQbH=BQLH/!:;;>^%W1mZ"&T\4C)MbW?`&WX]!Ye(kI$5s^C%N*SS4nMY7o,Ph$uCt50Zdh<K*dE4Sn3M("cnY18>9maepJ8Q6*sXjXImpm'HnQf"N_C<%-7-T&Y^sa"Z@^^_!E;<XOOcD5#.0Y(5:'!u8L?DHM:edB(";YcKaC]];1pT3l3fJtJhScF@l-\ZX+X;P@95cV_6C`IN<$3KkVg[b%_:qbEJns;K$[B.s(o`lL[!PbG1LP2pD:+/RcEq?!8d("2,SL"TTb9Wa(!&X)!0F4>VEtY&&3!$(U;)4\!eJdikQl^/"pmPZU1]p.%9]m4("7h\:dNm-=+[Y2QTW99t-/_.d]%241J"Qi9-]MY!`sa.CLq-gp"D7QUars"]Ae?p$]1uJb:Or[O/`'GN"DUHSH&+$P-mD\X%hk\m`</TZljGbE1_2;^d,/noP9=W/>e*1':Pk2^VJ/#L%5fVtt#4eGi5G]T^(C5i>Fm)r*nM#L'.0D>?(b<O;+>$p",msq<7E2G@%T41'KO9@fhASGm/j^B:l.qlb#Z5=[YSE*'L-kk2GC^k)R;C>0GDC,>um4p*Mi=IY7o"72om(=,pZ)ib1`PU*'`_7g(@Ls+@)iuCd%-STcRTI@UPLr77NY=4fmE]RT*kr6g2bS(S!;A-4<n0oFqKKg'%(*]8"AY]Da$"tmsPU96Q1s\QY7sRMCf,fDT.`Kk5BjPIrRmJe6%cDjQ5.jcqoT-u$88ug9iQJn;YNXG2\d9cn73K#+!F%E#<OHXo@bCVQ_Lcu"6Ps&F]5'#!bQ3VpsMK17W"p"mp6!oBs`<]sc0n?&;%kUXYF``t#&'i-[-JuCo@ll4081.!mn,8,;X*.>j9,!dl;&/,Y&A.B1_GGK8A#76`Rr(6T)A-ikq94f@n'bX%`RV)b*eHj@""MbWu%!E>:=!eCFd[K.'H8si'Vh>dP#'c98&>CnnUA/Gb/=+gZ@#`1`CKRj"l#mc&,U(]/RD[TaX4g([Gn;#pknr4&*8SKoX;N?t*5<PG9%3$2Sb6fEuL7$U*u^3Rp-)O;lt"HOZRJ1^g-0F'q44B7-nV?qklkB@f^m"8>!U_@c^ebQ:A6B.Bi+"be@6u,8R3.eYsEZXd!)'9a7%+S(=!KHQV@^nE2W=MtCdb]:]hP#VWMaB8MYgFJO_Za#+`SIjdn5p78h.0EK+!%MCnV%RhakQMQV,kOqN&Vq2XM]c[FJ.G5QClund%"WXDcYouOUa`*(9opKM-c2NL5@>9_^-VX=L"WYA[#s-u(Kcqa7iKLM(IDFinG6^IGfEW]^M%SkV96Kl,^hfCj:!1.Nem(*71-@E4%VfE1d1FOW`",M2.a@@t%2h+b:]L#",.<S;k>ndPlVHm8kJ:a;XPo:pQ&!c]V!tn&>,QX'e8Wlq>2p=\9Vfa1(Vh-sD:4"(0`.p&Y%_NEuJW?g(cHj"m:P=uES"FujL:&lIXZ$RB<d1_?H`$]d`i1;YO<-1P;(t_Qj8/"VkRkVd2M>SK%M$0!j3K%g=0GGr^b>TGl,L7=K%N"!!O7Ms2HWKR=60HD4Q"StKDc9%/>kn=EB5[r\IO>'Q<k&a^\&FXW:6H#ab3_lMV'SO[5:an!eL7G#,SH+?NC,(bJ]O:]<+B$jU%K0I*3Q/J5RB&M[EVm3n9O%n$_+=Kg`Ls@:B,j%IWLb9h7R*$\1Ub"bZTns'O>,:p4_UARgODr(\.>'@*(+M)\9Ro7@'^-*%6=q\m%''0.6&/no7C%$("68'C#MMVCr7)ZlMLf%k7m:=Q^Bps%Wg(C.[&8I/d?SNV#dfa((2RMTc>(!/V5@dC+=ar!N>Egoqd0q2W`Agqd%,@jBi,R?CQL\MR@C9[gp2'Yjk7p/SW+otST>V's8OCQ,d1Me%\;dcL(+SHcI=W2t,J:p-f3N/i"a@)=FTE_7J3@&4.L.X=Q!j@9%%71o_ZRZrn!.PWQ,3"iQpFJuN\QpsZu[fB7'#R?HmklW%q//'FVAO=d[C!T`9G/DrYDeH'R4.n"qB9*i^#t2Ic@Yct)-OUea&CE\V%).%C8,9Y!Y%tpUeR-b`laH>a$VL2KTk".noO0Si768sHqM!>\B*2<Y2IGd-mY`VM1\5il,'1sG68.!FA,^M>pT=P.R#\/uI8Z(Kr%R,bF_8LR$`,_al*Z:'Wn"B*IW#f'>:8BcZ_+'L3-=ic=S<rX:fk!YH-ek]De,6V#7W5V)HFJMd?8k_N56X&-(r[EG$diHn/(i&XS%oF;.k+m:R41u1T._]dZ!+gf&U#=aJKGr*+ifS%kiU;+4fJ+o7gW7QLmfGmK,!_*`g59_4-"=0MJMQ);)q>u8(!UVWjV>]V5^qr4c%TK#X`7+/SS&1oBm9:4@PO;U_dZpQ6/1FJ$6'gQ%gTGl1n#\EB>d(JQQC,CK$A-)Ha&]9n<.C"F)OFmuU+:E2'd2t&Q7\PXVdLV7)%&QiZq6_T!4a@`/86RI\)Hgi[gi];o9q_V/)G!t9g&PIN"N@q-'&g$ZrKHs7D"0k<-A>tqb\q3G<'=F76bU/+5`-r=cdS,<%_bLMj%-0a1s)rX+m.9+E@;R,W:g7oQc!Y7[nWsB)u>HnF=+H3E*ariVM.*Du%:r1]g)P]nl!O."]4Fm!5!#ThabEDT+PURLi!MV"5as7OK%`?"Rj#`#:?Dcfu5ounQV>@[a5Og:ldLQMrPM*hj'AGr)"U+$Y(<:thhfJ#1@'1KR!C`s!J5uFFDZ^o;@+<dVMY/DGj1JWfB(<G`!%E0ZrK.oS@f"/^Sk9DhT$9URUMi)>B;_H[T0NF?T!5pUdD2<](7#W[U4#p[gZ0+4K`AAO6R4&Qsf2-O!HYV;?+_Z2BS'_ZYKRnSdg%Xq_&c4e\#C@Ffg*QrZIgCe"M]#,a9X<(`PH\khs;d0M#:Td_"lfcj&!aB38O4]7ZL,2-#Sd09:r:fAh5#ggYL,f11Meegp=/iONB%i2ALUY@8\T$r2uu[L%a#/!#<3&27'A6Bs6hY94:nW=K&;%S=9#75/5%Ll>igg;*Q\+rf\B5o>\&.\.o^Fsj[?=#%W2QuS17TV3sk%cBPc]XPiO9UAePe_C##HWm#IlA,\A=@+s3TBos[X*(7u)OPSlQ%UT=F$U4ZZQA;d^A?_%3jWRiUKGQnqq/()Z?thfFhl$O`;V-^R%4,h]$Mm0&bMiB_V^-4P6_WKLZ+EZM._-2f":<:=T:i6oX?%JkA@MIP6VSh$o=!;EFb[?0dGTcM2+Q]e#`Q2&4aZbF0DmA2P'T,*^%=bN`-U`qP[p(S>r/.<SQ7&u"<:SB3*p;$3>\8T`D&9;^Y&d;uK$c5K]'itI`<LC^9=J/c?A0HNs&_`_=q&A'sGSsnIJq:02!jb?3%QE")Lf/aogWN;@(73jK4J$?g5D_FYiO)dN;Zg`kNEiMO)#39IGmX>U9=*1g35V:2iO";hM,;e1&;#Lj?P=QQX#BhqT_\")c#!a0K%WG*9TAW*Jk@OOQ%?uR,QCJi"k3RATEWaR&_N.r1LZZ*:5_IcJ!*%?tIU.G1Tes1+L=mdlUJN,\E[2^'OQ7Whr!0-Q,cbQ7b!i'`>%r)5SCj3WQL:j5j!#Sd33RIUo\=:3R/@=Z=43hi?:WA9-D^5uKj[PEN]4I46:9;QQ_GVp$lKsT",j[5hTR/SnVF-1S"n1&">&^]-S%),psfabN9?!l1rQT`@tB$E8u,#/so;]E[A7h]fiiA;D(Ak!bt>$l5RW=VYBN1q6<D:ftf$W/6)tW?a%-02a4ImX26MMlHtjW55iK%O<$Ukn7Xh&^aRiBDSFJm1uqK(LEd$P(KhAtZ:r1P\&aC]i5Vk#=XIW%FpXkFW$nZu\6>#^iggbcoLRE_'4N)_5b>IU$<@H<T``Xr%a%XIp0-N!00>>e?.@`l1D[Wi1$amaS#3'CF;SX11,aV>3:S$EA>sKXDKXl=RS_/OH!KLD4[6UKQ:k99`WjTu)$^;f:qAet`i.`fU%GS`Zu_rQ'/JN2M?>$2\f]Z[ZuH'\c_S19PlRY:>FW>*6h<;<0g)[Cf]5m&*,a4b*(K&f5_d5c$04C"`-8$Ms/!\soJd*F8n0P't"%K+a\$G%Sc)!mb/'NCabG)/tc9&=(=I2-3O^EJ-A"%'qn7TJ[:i4n'_m+u/CPK7+iU08G?!@V:>_#aj[f+KcK-3'jNT6F\lCOi'H>%#cSiQb^'g[Wj9^8.7$icB=Aed7kpKHLERF?WpB$=5VCn?LY-RpKt2[]_b?uh5VQ^"&;OPgQ:!pdZGfZOTSJfL'Nd\<$aE2U!X"=#%RI(l08`8tdqu`=77j9]f+nc%6l)\MPfnYZL*IDES>`Z+>\.]^Ma)qB/rn9Cs7+sLGZL-A9^ijg"J>5g'-dVA#LSPR4ASDm.CBS=]%':9Q!#cA0lE7aOX0P#uC@CHXIj\]dt2if=dA\%Sb&[R`8CU%G3[P5.BSqSHLK$6!T9u(ZaP?a@R*jBmP7r3n&;K;WP.L?'7XV!mD%k&Lqn8JF]l(&,Q7!AO*&kb0aR'UTKX\3(=_@V0l3o,uC!+CoLDSqu+YDcng!U37=A9QLpo[S4A$b##)7,*Uq3fSH20AuRpIfN-9R%$PHmW1<p#/!&7srB1=lf'%Sklbt9j$D:T>-5bk"n@5f,6PW1!GXCBCb7Mi':8Uq!:+K26CHG_h!@h/Jf(n-Z8(9%@/q'u&%88u.d%APj9e;^AWtYY'V8fqCd055TsY4Y2!@KS;Bo0P@0G0Yl72SHro_Kp\.%Ibu('=Hf`GkmPqD;\s7QZ_8kG)puMt4r+Cu0d&Ij7uP-d%pVA%ib&kWkRBkoV[*;jt_g'S/'>Zh9LAS<5A_2puc!^V)F]do<ItRbDbM?=a[`!1$lH%0.9id)4lqRRLVhbp_96LU,^jaa)Et"t!%\<TO[4S>Ni1^ri6?"snCf,B3XAU2=K`/*:q#^$Ir#ACc3XpcQlI>8sYO+HdhNjHnb$(!p?)2jFp7/']7)I;VN\lM,1VV71b/JEf,%Z(5Z\_qdH,7SF$f+^kUHBSQQ16+eLtdpG)"=n[Xr]c7IuJ8Np+h(WAqK,97:0:^=]Jk4OX<BB>?+e>9:g2J1h7tF4r;Qgkq<==U7%V7tde:mqO$i^*5MEN*V7!s-EGEd3[J]G"'3.%i:_TsmitX+9NcF`/F@Li="s2#p]*P"8cSG8(o(1fg4);-cT-*"$0<ELqN'7fb81%ip.W7>#N;,Vfu*UPmNWg\H/c/p;jWQ/++j?kk68SJ[AA!1L.^"Sn'-/"lUK7kVXL':B<5J=\[BkG9E?O[+,q&f9T0%;R;"W(?FFF%b!M0@H2rG9QBfI_62jCeSX's):ngA?2j4I*,+uq[RK*hhYR]Yd6^:[GbS%.-KUKk/kr_F3CL10dp]FuT!ZL'#V6(MYeYI'*.m8D'%=J8lI/]^nd?;t$kRa*4Xd3!lCq4lFSrMf#3rN.t#\$'CDL*=Hh*Hn#%R?,c;85B9ckql05.1dn"`T,$W;Lg_2LlEuXSr%_FY\0[.%ME8mQkJ(KHEN)/10Zse8$G(1>869:CVs&([Z8uMi^ch)0gZ?Nl.eNhH7YJGG/A)!Oe>)s#R'Ptf\nKrH_V>6KZ\O_%-#);lWrYiP%\F=^sJ39>U'tpG!c$PXt&2Us9cJPu=igE[P=K@>e-qt=]]`feo,@>Xn&Vj_i[30*ZKlC!*@0I@Op?\l^kUB1t2H</17X6T,=]J20%&k!YIL/pA;CK\'_*.msoeNh!8arj`F4F:id!OnYG2-(p3%m`<-[(&s8)Q(^q&M]sqe"Pc'.g%],"!AAQ>YKo>31UQNct>C)*2@;p%B,)Ym0!c]?-t``Q3N,<a\ThlU(PUG4FAR_r\=a<:dQnmeKN#WZ:^6tDij2lhLPef>WfH?E5_r(-3\WJ.5o\@*=n?H(<!Uu(6,]N)%lYlhCfASu`(L^<'VUe.Pn5(8'\]>8P!E<h.9d'O+-F,u^'*qKoMsPC*)odGD\\q3e&.q0E?jAq?_Mh`-#PXk02Qd-nKS>h]%?uJf%G!R)bEb^:;rJdRS`-&SqNU(O+*S5j337>peF]a$1E?0q#N,2IK8i5XsW"&ee2oA+-nA;E584Re&^]AF%Wl"jR</1Vp?HF^a8cT$M%CtKW;YRX?_cQMsV/6]\ur._df=@\Y54A(:fQR%^ui16&;8;::iBj8*!9iFR3E&aZo'G``1Z8i,PC6&SQ?jeS=CBUG$5DUq"!8Ae6%a2t3`pIutAE[l?-;J,6?%'^4@oG@"he'Z-/j@4daTiS$8.A**b=Vcf^PMHVe$pqTZ6aE'uium/K)`AEYr+MS(cl,2P(^GpaKL()=%r?IUcAE6"]BcbIO+KCgp0NZRGY*YVhG8aol"!<UtS@s#T5`Do%&[Il[FfC%q!g-b*J=[;T.)IHdG"\JR<!Hm?G#%Dp6#c/5nV`8U%)SqW]W>e#l9-JJdlQD_B+k;t"d5^j@#LP<(*0J@9+q.*en?LJkV:\6j#XNefJ5kc01W1dbE$[M;Y_e(8'3g!3RffW8YnsB1+WF[C%K?l953#>OjOe>$;0L"f9C'0PL&uW/3NL\Ou*8c^GYjOq@&P\?Q,/TH4(hJ#<_N6aD8-fCZ"X'&$O:MoA!n,R5lQp+[iW()9`>m`d%E_2td<ame9ZVua.6H15P68KudA2Hhs(p/V3E?6AHTL>"K`9CTAL$c+sQ6Zk86c=aVBQS0On;QAI!WrBY+N=aV%@7'@U7?55i?8kh%Qpr!8%+]cu30C-T"u2i+j3Jb-$6\AB@uX,",$n@*8EQkV1^EDlX\BoJqPt-%I`[!>rI`SZT;TG"%f7("p4".VO&$:I]OYD70GZiW%g4$+Rr6qlq_Z$W%Os0b`+c#hJV/XXQ"QW&!Dlt>m-f>8M#lDt:(!"BC.!(n>*Cqp*PN_Q<,$dN1br)/Z!1%IcG2TVpcF\eG1T_L>%4;aFp%@A8P&0MLJ+Ddc;FA.oAa&gY<#Ae8>UgGBd,;:!L(IJ2!Vk>di.DZRti)ri$RO!\u-A)>4es(\H4>I:1,X.;,1#oWV9#oUo%SB,AE(4mAU&qt=uRVuR\6Ka6Tr=M7%s*)Nac$WPoZAU_UT;=%Jf-sU0.1V"JCHAdURQM'Q+&SM(i#*66C8sUk0SpJJ?p'#q0Fe0&%7*j"AY`q.f,Z78D#`8;g;C!J2UX#08$-O\A2ipGiWAI3rj:Qo;W#,4tW,-5t%[BnJpa3"P,Rt")ph5!u!-g6Y#g0g&KY_-;Tp/Kq%$WDd!hlK%06GueGq@,cXpdW1NX>p),2FZO,;i*+oM+/CVW.aQ%XHp.YU2L+cn>OKd6ur5mM"Tc[k[T2IEfM:$NBY[A'rt0ZDJ4nN%b@.u0ci`Tj@g@hq)RXZbUFh\f`WD#$&GAT7(ZC_a`Rpc$kS#0:6`^aGhEd3.4Ftj^5NB71r].mZR:O1&i^#51!RZ<li$n`JbG;Ip%\njCe8;r1m"f-0["LNqL2AdM]8-iUC9aCbuNb$(b9JPLZG),Zq=mrMI7(`e]iF-RS'^$5P(MplCjT@n\nbHrC*"<63NJ+Q])ctrs%W,ADRXdK&Z7>XES=IpZ"#g=QkG3I^_'!qc'@EY)"ARd_PKN$dl+3mqb\QLMt4M&bk`Vp2H8N9Bhjpb'GQ7Z^,"%Wi$i<'QlK&[g$%4)A&W_#.:O*/Lm]MhA;m2alN%A8u.Mg&_PcJ\t;ZC6ZP^6f^$LN2s%VLH<o`!&a<qBBg,;(bPp0`!%+aIf]!FQ"Y>?!@a'5n$/77%-%lU%_%gp%";:gb].7o*3`d*tINnXL*]%EZ+_Ti&+qKYMETDT\Vj:+fC<4Z9^S"[-hEY0uk?p.W4[Vl(LoAKR%$`,AV8Q<tLg%VK%U([2h+Ls@%kLJ=-,U*fO0G$]='o:1873W'fjLI[qM,X+N_jCp[12G#eF1`2hFd89o`i>!P'];7bXaR(PqjtM,3A"$P:Z3re7Nbk9%P<M:V*AQoB,c7X(?s;&V!n&hY*$BMT9.XW*5r(MKGZNh6%&'po()o6?O*rmuH!k3g>a'fBL]rbtQ!":1`=,cJ`f4aETMAqmM#i^2%Wh^=OVbe1T2,iRNRGX8Tc5#hl7_()q/.nT\="k3=-mcHd_G)b:_;$1,5XYaODnAhs2+U0/(9Sn'(lA7u31[rr+fY29(J8KQHJ389%9GMt2H4\k',_fQ/X94p4#Fpe^:5hS,[cbZSb+^F%Ud,BrKie=RVLETb]#oF%c+[!iZ+RA+_C[#E`e_>b.C4>SdD[YJVBI=F<jBp.%@0f%5nLohga,'6FYTBlZ'&+hM4P"mM8'V:3O<>o7QQW!#]-2ip-A\XdkW=u5bDE$ZRM2,5lo`83;-Jhe,uriT+La2Lr*"&O$_oF.%lPhFghAo"F&-B4XZQXk%"&B3sjP#UHg0th:GA'QbO<W=EcCu/R9c`7e3Ee8X25Wh>h4[H+(e#)qA5="DQ>dK<jp(!RUuXihK04tL%K3jN0M&>V?.5#0Wf/L=7<Mhe[c%^$[AIkIH=ub$--p4a=(DeJ1!fMHI;@H3lV?iq!o+(q2+#%L-L7-fD=EY5L:(k&=!/XuRb,dkD%Wf:s6m#dgQ;4rOPOZ:.(QpYk7O*Q'P:$XJ;JiPjR?!U^AO,3B:R%J&k"o[D_.t\L+PXFJ-7Q>?_8Hu(A+!C-?UT<bu:^PdM4>=;P%;RTK8Kk,KO,>KA7jp!/m#'ij`q4PbE7g';'6qEKbDDMKb.6]66`3E11f2+:TLL,V`JECOr<&%FI<F9orC^NcJ3A2S]6*MUPM4Edp%q-5rDGnBM7BC&bu3gM5;,]Z<+fHs]/PkRJhjoJGB`)W*HdS/p&(eC5/`7b],-K8<"g3=_Q[t+Zk2T2i=AWL#RT91*6[M@L!^VI^>%f*Q)h)r[4H+_8"tY'>Kbg!Sl/+C/^:5rLs.GbIs`6-k2I0OJAlN)gdF,QbP*3Is)E3"d]OR1,&i>"T&X[^i[ZdjtW'o;KB)A<e!C%hYKcR2Vo6QePL?lTF6DjgLV`+%<uA,Art'i(J+:_)A4Z2b&Ff2hE-O@Om5.&$-oD3\YN"/i_dk/g[7=^V%:WXU<#=>`'SL</&l&$%PhSeFe9?QHNs6\bi4N%Ib\%p0E-</g!$B3@QfCmT$BurF\:=WaZi'rVUbRc5N4rV$0=-ArX&n5\_mK[u'cKK4>!(6rQ8k.O<To@f%0&VsE=IES\(4NGRoNa8OP]'u]=G(2*XWElI.9Pp+b"T'F5p2lnM+*9V:?-5Pbh'tq!l5>*p4H1ZQkJXd\["-80Ei:!F*QL*!.P?Y%M25\'\m[=O1>()aq)aUY%EB=X%;N[t;+,C#LD!%/7=Q48]/U6d@]`ccdcCSt\<2^1$Q-4X'S>ft=4@J=KuA#!"(c]gZ"Pb/ZmrNa%aBhO>Lc=JD,dNK:8s-XL=Y#=$N&"`(<+:hA_ls]q&+?;EZQW,q+I#72@M8k\F,J"pg^<8jH/-`?EEp4CU_KT6>U-2*estq(bS>*#%%,4F_ZHZ]W>mBKJn0uKf=:`AjljQ1:P1qOI+Xk0tDK0*).LF%)i*dY%K[d7GpbZt0K!b`LZF'fQJ?]7=I*7F&"MmMW2DT+Si`cg!%d0&I@_T],%Y(Pg*fp,5t$#QqSi9$@S[tZ#02MN=^d"WZJk+T^iJIg\i`UuXE&-N8c(A%ak*_^>So#fYrA0GCe_@/fXmZZT"]0,cQ%5e(PaG(u_Z#J$5>gtO_F"')hXaA_H0/Q0n'KXnoebZ5kAS-df7Yl`Ua[/tUb[K7cO$8lVZ;0m)\'aS,U-$D>(cs0M@\j9$UE\UT;%?kgJ,N"ma,oOhou5h.lZNBk!%%Ym4NdNXC.Pt$oUV@"9?+3ISa_iQS!M)Vpo#'r?&3`/Ce.2DV\$,Y1&j/uLfEM!YTpC<o#a,DRk%&@O_%qnro7L15T#+A/BF3JgXK"leZ>]OogrJ5ss]!kBfpU-ApKEt-(3j[7\?ifpo?.iqI-ip7=e^02-?+Bhj!D`>n7HAJPcb-C*:%S8"%Xhg<5@SuC"pL(/6.UZX\2&-0X.A,pq*GDC@s0f,VJ`$1=ar5CCR6ZNdA(tU`O,`a`&&hFbG7f5>DfG,VS6O/^2q@X*l2Fb2U%?e]A=#Fo.RKF@7,+r<=%0+QE&&3]1bBGM4QJ3%>@Uq(GPhJ.*p&GRb$&K2?2c'n2(QD>ok#VQ*dX0K2Fe!/tdj9c+,iXao\-jg=9%4]+,c^9B_Ab0mb!Aa(/Jg/XP;4:B6t<l*jd._?k96X,5g_[<%Xlg;+l#_aHWLNB[%_.::51b*=0QTW-NH=(WO!3ckY0O%TKYq@_G%7pSlu:bj#t%c1^<]KO]Xq8*W-eBB'.arY'0"f:?4f8,6pUEa>1.q_o(>4I4)_HZKua8JCU$,&\8R3h2j2d\sB4CAA%MODCPEMeTt%YSA6O%B7Dn/<'-/[YcZ1i`/<S9$.d<8?\QD&1:r/A^j.OM>;t0aBk:<ki+K/K[!^l>Y,=D&MOJBNcLOXB`qK.Kc$WX\]=M(+pMf<%gOgb\6Glb(cd[VS[4o_@J@3V?+J?g[(LA8lc[MS_H<O,QoKlV1;Ycc>q>s_4EBbY7";V>+Q\^PiT4bZ1Nb(:(:@M/MeRjRkb,LV:%R\m/>ro9h3OAl`F(Md_.="&.>P:dmVRJ`ZZ/`((`d,KB,LemiJ@*^e"6S$(aXP%lf_*+CcOBdB64G(o?L3?)V#2fd$d#6ig^-W0u%%h]"AA0-m&7A_Q?7$.^pLFe/[7Yi!U&]fN7'@TZVkVcmYi1-pcTe_^gfS(UH&8$,kOj3FOJd)M'if[lXG_uGPOA"u2A;90R-n0S\%pUqCRO8E'?I*QL)*^na^o73$[`P[n7dk(*\X]ZfK^H3$soAa<CQc\fL-3E>uVJ'fN=XLVjir`mHRA>/]qPi7$kOjqX<G(r_=MgHM%d:^Y-a:Fed,nP^IW<?s=%[G4sC*!o/-"bhZ;<Z!D7E!&(`,]*"-Y+@/"$(b/@Z>MTk#qi;6N/\^WDmFR*7h&"j+Ar(o$RQ*3It!.%0$P2h?M%48G[$2fB>d+\m50TS.e3SGX%Zm-l*7G9/ps?OVI44tCiZA21,9J2B#9ol-f5r5C>#&3H\V@!4);;0";G[bU3s;]gkNl/%,0HF9AA+_I]GPdN<to4*FGsFg0/jY*WBPuV,BSiJ1lo"R9fp3gAdM`>7D6!MN&h5nN7-?=54_=p.VJ#+)sB_HPqR)NXou$!Wo4G2%(&1fg&#,ViaSZ[g*RbE3FVkO^Ii_5MSKj4Y'UOIHKb8i\$FXas3tK2#)9R6_>bcQm)Nf*#dNBejf"+>uCF\9_@U8^.g4mW!a60%6%]nuh3bCtd3ohbhMZO!!TW57msLDdX-lKAd(Q`D&W@R.[>q+2,"2a'ZbNu4j$gh@<Eea^9V0iBNH$=^NN5n".;O+h6:`EOWLHG\T/%-AhQT(BotB/7.CX+fL/4%V"o/-a*"O,I:upg%SI/^-0\2-#hReJT*Zt!<b2PfjTVf#\Ll9*#/r>oHjGWB#*+6KK`un]GM,5Ct[`8%Xs<od@[+@Z_[B^hR^7^$1$9AkR!^P!+?8(P2Sh8^XCBH@7A_1uU-mk_(R[gubUS_I)1(Y9._qW/N%G9C'h[on1nLg9a[N9b_hf2?%d+?\I=[Z7>3+A@/#M:Qf)rf*B,A.arKI!&)iW,C,SE&Z?'YMN(Z),"iY9$*0eeIuC9aDq(bqc`u1eVY0fI%9YKEZ=RKL8(CE#oHG%_J9tGoFRX/1-BY1KA+jP`qYH<7KNu2'bI@1(OR#Yreor#(ir8e1hFZ=^)t=CTjtJ<*ctr9#hb;)4qGN_:M%p)"1^%7;$_g&:Ob(3%j;_VGaKR[%3+Ye1XjXEur<6OPJo/a6Vi1,a3-$N,&q$DAi.c9(\Qe.<6jLpD=XoOqGn?L"@4[)D5(kffh'&$V_F&oChm6fe7KDs9%R&U^LeEN#:d3/d37cN>+6uF*Q2Bika\N7_8"ZhNJq\fIOD%#(YBg<9n1dXLXTd)iKpOoR%L;i@X9M,l1Bapr^[+)Al-q&rt%>U+`%%qO4Q(.]]G'+[tT=tn?5Y!8Kj.+QlW*HFP@&kE:um4FV/B?D?GH,F>8KaHqCK4k?c@>/$)?Rg(HIVJZlk.u'5cG[Y^:-g+D2C=k3%h\G(.9GV*>9LDqA,>^#ggJ2h+K2dOa^U/<J6sm2%C1RSLj8=MuM]CVRa/!DE(eM\Tl?NOmnQ<c@<V%6H.f)>"!qqkma56%V8f8;<%;>($Qe.\nM@lT/ZmDXs<Z?@X;ba9nrD;Tt:/e#'=)ac!*'t^NspAs::&)9)r<0*.K!$hGVRFqgZNknXlU!m)Ro11Fpba<X#o>4YT%AABC>R;[[DHRQ;amfQ\dG5s4e1I,/D-!D&<RS(ejf)O,nXR37G!2)<G9t#RJ-3irLUh8Hf?u5m--oH)*LPW=/c[E\:AaKJfER)u"%jpS\"`.$%D-P0:2Bkn.8FR[/Vp&b!-[-W@NMnk__po@AL\5sf`,9uS8E!PeBq=sdDGhFJ:,ueDPla/D%$JUo[C,+pcO!=c%YSHVa%?]O3u)[Ff_;uhlnKC]+(><A'_)$WVX:<mt='\8KoEGl\4-u3IXeU_tCA\bi2Y&K[H+&b5i;Do:L;lR9[XI27B]l-S0TS*q]J<hUZ%Oo_hkU]cdeb-W:hnb7R?l!l$j+H;leap96=,5kcB)]'n05*:-li;b:=ianoj#Dg>d.?t%#Lr]fdVGI1VqN4/aNALm1fIp]t[L$?K%S:g$MA?)3D*ZrWde(9#2af@f0Qt>5%G'F]e@C"RkEAZm`<-DF/!&'F:).YCU&F5c$R9IR=A"u;+'hU"n1PTCGI$&-N19[&gBVQIN%*.h)Yg4PTZYpfN"NVeJ*3-+9"?9%u$!q6\X6ucC,A@=M,(p@(k@M-EZUV[==,g,ugQD6k-;hX]+(B?^m3[>P),0Oi!rU00n/(\fp%Oka`S,`"OH]D[`e%7%)p^N-!$TeYrua9k1snOq"P9&>de!?XKj)p''J2)3Y$c)P8;cn(fb2Wb*/NHoJ(kQ:h1"#aR0!/TQr\C&.D%+Rr^j72AONYmLBu!F#DF+N(Lh8m1A?>\O&bN\'u<K\.[.6>jUp`^^9<0d&YNa9-G0*':udo%f,E1bXl)q8LkC5S+?ZO(918_Oobs%+\t;?7u9.l0`J<@5U*!`dXsJ%'o>0\K4#YnKa@EIj?a7l@9m$VK/er&#[o:,-&,!#fmts=GLjj.ZXF)qX=`Cp$\[Vm(K'NfKr@h_%S7oc+GeQ:^*>d];FC9n,AIdruG_0n8cob^p(n,a<_L3(jL7S\^E<$q#ie)n5!2IulHK*=eWll#!iY/%5dF\:ukI\W<W\a<_!%*P@%G?pdkhE![XLP8f1:laTCj,NZZT,52u(J!YDIinURYMt>$;a;GnT7=W>Im5slmn*Q?oN2(m<Z`?2J]k>Z'cfnH*_2+f#S79!(L7`&%N/R.3:cB3*cM<=F5OesI]9i1$'ba3k4B8KP:i(Ubg$*N9]<]E3hFdnm>+-Q/P2E*l-Tq3K5F56V`A]]c[\W,p"_l4s91<Ph>7*hc%gJeHHcteK`(U"ufC2(^^:YKfpPF?*(\l:IEpXfH2s8A:#05\17mem!hrNA_pcM.A<EHL(7HEmLBU]187$!rTSqFSHo^RcNQr&Qu*%l<ep#r@]9m`I'j6^\)]\p\t8^T<"C~>%AI9_PrivateDataEnd